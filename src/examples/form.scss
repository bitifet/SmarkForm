*, *::after, *::before {
    box-sizing: border-box;
}

:root {
    --section-background: hsla(267, 11%, 82%, .3);
    --fieldset-background: hsla(247, 11%, 82%, .5);
    --round-radius: .75rem;
    --form-gap: .2rem;
    --layout-paddings: 1rem;
    @media (max-width: 400px) {
        --layout-paddings: .2rem;
    }
}


// General layout:
// ===============

html,
body {
    height: 100vh;
    height: 100svh;
    width: 100vw;
    padding: 0;
    margin: 0;
    font-family: Arial, Helvetica, sans-serif;
    position: fixed;
    background:
        url("https://picsum.photos/800")
        , #888888
    ;
    background-position: center;
    background-size: cover;
}

.container {
  height: 100%;
  display: flex;
  justify-content: center;
  min-width: 200px;
  margin: 0 auto;
  background: rgba(255, 255, 255, .6);
  overflow-y: auto;
}

#main-form {
    flex: 1;
    margin: var(--layout-paddings);
}




// Outer Layout:
// =============

section, header {
    margin: var(--layout-paddings);
    &>h1 {
        margin-top: 0px;
    }
}

section {
    background: var(--section-background);
    border: solid 1px grey;
    border-radius: .5em;
    padding: var(--layout-paddings);
}

fieldset {
    margin: 1em 0px;
    padding: calc(var(--layout-paddings) / 2);
    border-radius: .5em;
    position: relative;
    background: var(--fieldset-background);
}


// Form organization classes:
// ==========================

// .aside - Put things aside.
//          ðŸ‘‰ Use .inline for non width-greedy childs such as buttons, etc...
.aside {
    display: flex;
    align-items: flex-start;
    justify-content: space-between;
    &>:not(.inline) {
        flex: 1;
    }
    &>.inline {
        display: inline-block;
    }
    &.reverse {
        flex-direction: row-reverse;
    }
}


.form-group {
    display: flex;
    flex-wrap: wrap;
    gap: var(--form-gap);
    align-items: flex-start;
    align-content: stretch;
    justify-content: flex-start;
    font-size: 1rem;
    max-width: 100%;
    flex-grow: 1;
    flex-shrink: 0;
    flex-basis: auto;
}

.spacer {
    flex-grow: 5;
}

.input-group {
    display: grid;
    flex-grow: 1;
    grid-template-columns: min-content 1fr;
    gap: var(--form-gap);
    align-items: flex-start;
    @media (max-width: 1024px) {
        grid-template-columns: 1fr;
    }
}

.singleton {
    display: flex;
    align-items: stretch;
    margin: var(--form-gap);

    input, textarea, select {
        width: 140px;
    }
    input, textarea, select, button {
        border-radius: 0px;
        &:first-child {
            border-radius: var(--round-radius) 0px 0px var(--round-radius);
        }
        &:last-child {
            border-radius:  0px var(--round-radius) var(--round-radius) 0px;
        }
    }

    &>* {
        z-index: 2;
        margin: 0px !important;
    }

    &>button {
        z-index: 1;
    }
}





input,
textarea,
select,
{
    background-color : #ffffff; 
    flex-grow: 5;
}

input, textarea, select, button {
    margin: var(--form-gap);
    border-radius: var(--round-radius);
    padding: .5rem 1rem;
    width: auto;

}
button {
    min-width:2rem;
}


textarea {
    resize: none;
}

label {
    padding-top: .3rem;
    font-weight: bold;
}



/* Headers and Footers */

h1, h2, h3, h4, h5, h6 {
    user-select: none;
}

.form-group.h1, .form-group.f1 {
    font-size: 1.6rem;
    font-weight: bold;
    user-select: none;
}
.form-group.h1 {
    border-bottom: solid 3px;
    margin-top: 1.5rem;
    margin-bottom: .8rem;
}
.form-group.f1 {
    border-top: solid 3px;
    margin-bottom: 1.5rem;
    margin-top: .8rem;
    padding-top: .2em;
}
.form-group.h2, .form-group.f2 {
    font-size: 1.4rem;
    user-select: none;
}
.form-group.h2 {
    border-bottom: solid 2px;
    margin-top: 1.5rem;
    margin-bottom: .8rem;
}
.form-group.f2 {
    border-top: solid 2px;
    margin-bottom: 1.5rem;
    margin-top: .8rem;
    padding-top: .2em;
}


.foldButton {
    border: solid black;
    border-width: 0 3px 3px 0;
    display: inline-block;
    padding: .2em;
    background: none;
    font-size: 1.3em;


    transition: transform .5s;
    transform: translateY(.2em) rotate(45deg);
    &.folded {
        transform: translateY(.2em) rotate(-135deg);
    }
    @media (hover:hover) {
        &:hover {
            opacity: .5;
            &.folded {
                transform: translateY(.2em) rotate(45deg);
            }
            &:not(.folded) {
                transform: translateY(.2em) rotate(-135deg);
            }
        }
    }
}


.ingoing {
    transform: scaleY(0) translateY(-50%);
}
.ongoing {
    transition:
        transform 70ms ease-in
    ;
}
.outgoing {
    transform: scaleY(0) translateY(-50%);
    transition:
        transform 70ms ease-out
    ;
}

@media (hover:hover) {
    .form-group button:not([disabled]):hover {
            transform: translate(2px, 2px);
    }
}

@media (orientation: portrait) {
    .form-group button {
        font-size: 1.1rem !important;
    }
}

