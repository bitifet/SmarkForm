{"version":3,"file":"SmarkForm.esm.js","sources":["../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/lib/helpers.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/types/form.type.js","../src/decorators/mutex.deco.js","../src/types/list.decorators/sortable.deco.js","../src/types/list.decorators/smartdisabling.deco.js","../src/types/list.type.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/types/color.type.js","../src/main.js"],"sourcesContent":["// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\nexport const events = function events_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnebledTarget extends target {\n            constructor(target, optionsSrc, ...args) {\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                const ImRoot = Object.is(me, me.root);\n                me[sym_local_events] = new Map();\n                if (ImRoot) me.root[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me.root, me.root[sym_all_events]);\n                me.on = me.onLocal; // Handy and readable alias for local events.\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };\n            async emit(evType, evData) {\n                const me = this;\n                const handlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me.root[sym_all_events].get(evType) || []),\n                ];\n                let defaultPrevented = false;\n                if (handlers.length) {\n                    let propagationStopped = false;\n                    evData.preventDefault = () => defaultPrevented = true;\n                    evData.stopPropagation = () => propagationStopped = true;\n                    for (const handler of handlers) {\n                        if (propagationStopped) break;\n                        await handler(evData);\n                    };\n                };\n                return ! defaultPrevented;\n            };\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            if (parentComponent.isSingleton) return parentComponent.options.type;\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                case \"color\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        let base=this;\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            ((current, name)=>(\n                current === undefined ? null\n                : name == \"..\" ? current.parent\n                : current.children[name]\n            ))\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of me.parents\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (! Object.is(options.context, me)) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        if (me.targetFieldNode) me.targetFieldNode.focus();\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        return new errors.renderError(code, message, me.getPath());\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n            if (this.options.hasOwnProperty(\"value\")) {\n                if (this.targetNode.getAttribute(\"value\") !== null) { // Conflict\n                    throw me.renderError(\n                        'VALUE_CONFLICT'\n                        , `Initial value specied both as \"value\" option and HTML \"value\" attribute.`\n                    );\n                };\n                this.targetNode.setAttribute(\"value\", this.options.value);\n            };\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        me.form.targetNode.addEventListener(\n            \"keydown\"\n            , me.onKeydown.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"keyup\"\n            , me.onKeyup.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusout\"\n            , me.onFocusout.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusin\"\n            , me.onFocusin.bind(me)\n            , true\n        );\n    };\n    onKeydown(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(ev.target); // Activate and reveal.\n        } else if (ev.ctrlKey) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                targettedTrigger.targetNode.click();\n            };\n        };\n    };\n    onKeyup(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(false); // Deactivate\n        };\n    };\n    onFocusout(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(); // Unreveal, keep activated.\n        };\n    };\n    onFocusin(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(ev.target); // Update revealed triggers\n        };\n    };\n    reveal(target) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = [component, ...component.parents];\n            const activeContextsSet = new Set(activeContexts);\n\n            const candidateTriggers = activeContexts\n                .map((c, lv)=>(\n                    c.getTriggers('*')    // All triggers.\n                    .map(tg=>({\n                        tg,\n                        lv,   // Ancestor level.\n                        args: tg.getTriggerArgs() || {},\n                        hotkey: String(tg.options.hotkey || \"\"),\n                    }))\n                ))\n                .flat()\n                .filter(({args, hotkey})=>(\n                    hotkey.length\n                    && activeContextsSet.has(args.context)\n                ))\n                .sort((ta,tb)=>(\n                    activeContextsSet.has(tb.args.target)\n                    - activeContextsSet.has(ta.args.target)\n                    - tb.lv\n                    + ta.lv\n                ))\n            ;\n\n            const usedKeys = new Set();\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                if (usedKeys.has(candidate.hotkey)) continue; // Used by more preferent tg.\n                if (! candidate.tg.targetNode.disabled) {\n                    candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                };\n                // (UX): Perform the following even if disabled for behavioral\n                // consistency...\n                usedKeys.add(candidate.hotkey); // ...don't activate others in place.\n                me.revealed.push(candidate.tg); // ...keep preventing event propagation.\n            };\n\n        };\n\n    };\n};\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nconst beforeEvent = Symbol(\"beforeEventName\");\nconst afterEvent = Symbol(\"afterEventName\");\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        this.actions[name] = targetMtd.bind(this);\n        this.actions[name][beforeEvent] = `BeforeAction_${name}`;\n        this.actions[name][afterEvent] = `AfterAction_${name}`;\n    });\n};\n\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        const {\n            // property: local variable\n            action: actionSpec,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! actionSpec) return; // Not a trigger component.\n\n        // Allow binding triggers to specific component types:\n        // (Syntax \"type:action\")\n        let [actionName, targetType] = actionSpec.split(\":\").reverse();\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>{\n                if (targetType && p.options.type != targetType) return false;\n                if (typeof p.actions[actionName] != \"function\") return false;\n                return true;\n            })\n        );\n\n        const target = (\n            targetPath ? context.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : parents.find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n        );\n\n        return {\n            action: actionName,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    if (await me.emit(mtd[beforeEvent], options)) {\n        const data = await mtd(options);\n        me.emit(mtd[afterEvent], {...options, data});\n    };\n};\n\n\n","\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {//{{{\n    return Math.random().toString(36).substring(2);\n};//}}}\n\nexport function parseJSON(str) {//{{{\n    try {\n        return JSON.parse(str);\n    } catch (err) {};\n};//}}}\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\n\n// TODO:\n// =====\n//\n//   🚀 Add support for (smarkform) fields contained in the label.\n//      👉 Now we can just not enhance the label (<label>Bla bla bla<input\n//         data-smark></label>) and it will (in this case natively) work.\n//      👉 ...but this does not allow us to use other SmarkForm fields such as\n//         forms and lists (since they can contain more than one native field\n//         which is not allowed by <label> tag.\n//      💡 But we can use different tag (with {data-smark=\"label\"}) and just\n//         create the native <label> tag around the text.\n//\n//   🚀 Implement \"text templating\" feature.\n//      👉 This should allow to include contextual data in the text of the\n//         label.\n//      ⚡ For example, list item position for list items...\n//\n\nexport class label extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Labels are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const labelArgs = me.getLabelArgs();\n            const {targetFieldNode} = labelArgs.target || {};\n            if (targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! targetFieldNode.id) { // Ensure targetted field has an Id\n                    targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", targetFieldNode.id);\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold({operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold({//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n            };//}}}\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {getRoots} from \"../lib/helpers.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {action} from \"./trigger.type.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export()]\n            ))\n        );\n    };//}}}\n    @action\n    async import({data = {}, focus = true} = {}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (dataConstructor !== {}.constructor) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object for form import, ${dataConstructor.name} given.`\n        );\n        const retv = Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import({data: data[key], focus});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n        if (focus) me.focus();\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: {}, focus});\n    };//}}}\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_generator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.templates.item.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ];\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ];\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n                me.renum();\n            };//}}}\n        };\n    };\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\n// TODO:\n// =====\n//\n// 👉 Keep first item in place:\n//    -------------------------\n//     \n//    For lists allowing 0 items, make first element disabled and not visible\n//    instead of completely removing from DOM.\n//\n//    This would avoid lots of visual layout issues.\n//\n\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {makeRoom, parseJSON} from \"../lib/helpers.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\n\n\n// Helpers:\n// --------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        me.templates = {};\n        for (const child of [...me.targetNode.children]) {\n            const {role = \"item\"} = parseJSON(child.getAttribute(\"data-smark\")) || {};\n            switch (role) {\n                case \"empty_list\":\n                ///case \"header\":\n                case \"separator\":\n                case \"last_separator\":\n                ///case \"padding\":\n                ///case \"footer\":\n                    child.setAttribute(\"data-role\", role);\n                case \"item\": // (Default)\n                    if (me.templates[role] !== undefined) throw me.renderError(\n                        'LIST_DUPLICATE_TEMPLATE'\n                        , `Repated list template role ${role}`\n                    );\n                    me.templates[role] = child;\n                    me.templates[role].remove();\n                break;\n            };\n        };\n        if (! me.templates.last_separator) {\n            me.templates.last_separator = me.templates.separator; // (If any)\n        };\n        if (me.targetNode.children.length) {\n            const {role = \"item\"} = parseJSON(\n                me.targetNode.children[0].getAttribute(\"data-smark\")\n            ) || {};\n            throw me.renderError(\n                'LIST_UNKNOWN_TEMPLATE_ROLE'\n                , `Unknown list template role ${role}`\n            );\n        };\n        if (\n            me.templates.item.querySelector(\"[id]\") !== null // Contains IDs\n        ) throw me.renderError(\n            'LIST_CONTAINS_ID'\n            , `List components are not allowed to contain elements with 'id' attribute`\n        );\n        const tplOptions = me.getNodeOptions(\n            me.templates.item\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem();\n\n            // Initialize \"count\" actions and reinject empty_list template:\n            if (me.min_items == 0) me.renum();\n\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n        return;\n    };//}}}\n    onTriggerRender({action, origin, context, ...rest}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const emptyChilds = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) {\n                if (list.length < me.min_items) emptyChilds.push(child);\n                continue;\n            };\n            list.push(await child.export())\n        };\n        for (let i=0; list.length < me.min_items; i++) {\n            list.push(await emptyChilds[i].export());\n        };\n        return list;\n    };//}}}\n    @action\n    async import({data = [], focus} = {}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! (data instanceof Array)) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem(); // Make room on demand\n            await me.children[i].import({data: data[i], focus});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem();\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].clear();\n        if (focus) me.focus();\n        return; // await me.export();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            position = \"after\",\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            failback,\n        } = options;\n        if (position != \"after\" && position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${position}`\n        );\n        if (me.children.length >= me.max_items) {\n            switch (failback) {\n                case \"none\":\n                    break;\n                case \"throw\":\n                default:\n                    me.emit(\"error\", {\n                        code: 'LIST_MAX_ITEMS_REACHED',\n                        message: `Cannot add items over max_items boundary`,\n                        options,\n                    });\n            };\n            return;\n        };\n        if (me.children.length && ! target) target = ( // Auto target:\n            position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.templates.item.cloneNode(true);\n        //}}}\n        // addItem event emitting:{{{\n        const onRenderedCbks = [];\n            // Allow for handy callback instead of two separate event handlers\n        await me.emit(\"addItem\", {\n                action,\n                origin,\n                context,\n                target,  // <--- Effective target.\n                position,\n                newItemTarget,\n                options, // <- Original options (including target)\n                onRendered: cbk => onRenderedCbks.push(cbk),\n        });\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            me.targetNode.appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(target.targetNode)) return child;\n                    if (position == \"after\") {\n                        child.targetNode.after(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [child, newItem]; // Right order, flatted later...\n                    } else {\n                        child.targetNode.before(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [newItem, child]; // Right order, flatted later...\n                    };\n                })\n            ))\n                .flat()\n            ;\n        };\n        me.renum();\n        //}}}\n        // Autoscroll handling:{{{\n        if (autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : autoscroll == \"self\" ? newItem\n                : autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        // Execute \"onRendered\" callbacks:{{{\n        onRenderedCbks.forEach(cbk=>cbk(newItem));\n        //}}}\n        if (me.renderedSync) newItem.focus();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(options = {}) {//{{{\n        const me = this;\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            keep_non_empty,\n            failback,\n        } = options;\n        if (! target) {\n            if (keep_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                target = t;\n                break;\n            };\n            if (! target) {\n                target = me.children[me.children.length - 1];\n                keep_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            target instanceof Array ? target\n            : [target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.clear();\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (keep_non_empty && ! await currentTarget.isEmpty()) continue;\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                autoscroll == \"self\" ? child\n                                : autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n\n                        oldItem = child;\n\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n\n                        return false;\n                    };\n                    return true;\n                })\n            ;\n            // removeItem event emitting:{{{\n            const onRemovedCbks = [];\n                // Allow for handy callback instead of two separate event handlers\n            await me.emit(\"removeItem\", {\n                action,\n                origin,\n                context,\n                target: currentTarget,  // <--- Effective target.\n                oldItem,                 // Child going to be removed.\n                oldItemTarget: oldItem.targetNode, // Its target (analogous to addItem event).\n                options,\n                onRemoved: cbk => onRemovedCbks.push(cbk),\n            });\n            //}}}\n\n            oldItem.targetNode.remove();\n            me.children = newChildren;\n            me.renum();\n\n            // Execute \"onRemoved\" callbacks:{{{\n            onRemovedCbks.forEach(cbk=>cbk());\n            //}}}\n\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n\n        };\n\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: [], focus});\n    };//}}}\n    @action\n    count({delta = 0} = {}) {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length + Number(delta);\n    };//}}}\n    @action\n    position({target, offset = 1} = {}) {//{{{\n        return Number(target?.name) + Number(offset);\n    };//}}}\n    renum(){//{{{\n        const me = this;\n\n        // Update child index:\n        for (const i in me.children) {\n            me.children[i].name = i;\n            me.children[i].updateId();\n        };\n\n        // Handle separators:\n        if (\n            !! me.templates.separator\n            || !! me.templates.last_separator\n        ) for (const i in me.children) {\n\n            const isLastNode = i >= me.children.length - 1;\n            const sepRole = (\n                i <= 0 ? null\n                : isLastNode ? \"last_separator\"\n                : \"separator\"\n            );\n\n            const currentNode = me.children[i].targetNode;\n            const prevNode = currentNode.previousElementSibling;\n            const prevNode_role = prevNode && prevNode.getAttribute(\"data-role\");\n            if (prevNode_role !== sepRole) {\n                if (!! prevNode_role) prevNode.remove();\n                const sepTemplate = me.templates[sepRole];\n                if (!! sepRole && !! sepTemplate) currentNode.parentElement.insertBefore(sepTemplate.cloneNode(true), currentNode);\n            };\n            if (isLastNode) { // LastItem\n                const nextNode = currentNode.nextElementSibling;\n                if (!! nextNode) nextNode.remove();\n            };\n\n        };\n\n        // Handle empty_list template:\n        if (me.templates.empty_list) {\n            if (me.children.length) {\n                me.templates.empty_list.remove(); // (from DOM)\n            } else {\n                me.targetNode.appendChild(me.templates.empty_list);\n            };\n        };\n\n        me.getTriggers(\"position\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.position(args);\n        });\n        me.getTriggers(\"count\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.count(args);\n        });\n    };//}}}\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class input extends form {\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const sons = Object.values(me.children);\n            if (sons.length != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${sons.length} found.`\n            );\n            const son = sons[0];\n            if (me.options.type !== son.options.type) throw me.renderError(\n                'SINGLETON_TYPE_MISMATCH'\n                , `Singleton type (${me.options.type})`\n                + ` does not match child field type (${son.options.type}).`\n            );\n            me.targetFieldNode = son.targetNode;\n        } else {\n            me.targetFieldNode = me.targetNode;\n        };\n        return;\n    };//}}}\n    @action\n    async export() {//{{{\n        const me = this;\n        return (\n            me.isSingleton ? Object.values(await super.export())[0]\n            : me.isCheckbox ? !!me.targetNode.checked\n            : me.targetNode.value\n        );\n    };//}}}\n    @action\n    async import({data = \"\", focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) {\n            return await super.import({data: Object.fromEntries(\n                [[Object.keys(me.children)[0], data]]\n            ), focus});\n        } else if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else {\n            me.targetNode.value = data;\n        };\n        // me.targetNode.dispatchEvent(\n        //     new customEvent(\"change\", {})\n        // );\n        if (focus) me.focus();\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export()\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        await me.import({focus});\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    async export() {//{{{\n        const me = this;\n        const data = await super.export();\n        if (me.isSingleton) return data; // Overload only inner field\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        const typename = typeof data;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const retv =  await super.import({data:(\n            typename == \"number\" ? data\n            : typename == \"string\"\n                && data.length\n                && ! isNaN(data)\n                ? Number(data)\n            : null\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    async export() {//{{{\n        const me = this;\n        const data = await super.export();\n        if (me.isSingleton) return data; // Overload only inner field\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        const retv = await super.import({data:(\n            isNaN(value) ? null\n            : ISODate(value)\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        const singleton = me.parent.children[me.name];\n        if (singleton) {\n            me.targetNode.setAttribute(\"name\", singleton.sharedNodeName);\n            singleton.radioButtons.push(me.targetNode);\n            return {}; // Not a field.\n        } else {\n            // Provide unique name for DOM navigation to work properly:\n            me.sharedNodeName = randomId();\n            me.targetNode.setAttribute(\"name\", me.sharedNodeName);\n            me.radioButtons = [\n                me.targetNode\n            ];\n        };\n        return me;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value;\n    };//}}}\n    @action\n    async import({data = null, focus = true} = {}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) selected.checked = true;\n        if (focus) this.focus();\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\n","// types/color.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nconst re_color = /^#([a-f0-9]{3}){1,2}$/i;\nconst disabled_style = `\n    opacity: .5;\n    background: repeating-linear-gradient(\n            45deg,\n            black,\n            black 10px,\n            white 10px,\n            white 20px\n        ),\n        black;\n    background-blend-mode: difference;\n`;\nexport class color extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n\n        if (me.isSingleton) return; // (Only for real field)\n\n        // Check targetField's type attribute:\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"color\").toLowerCase() != \"color\"\n        ) throw me.renderError(\n            'NOT_A_COLOR_FIELD'\n            , `Color inputs require an INPUT tag of type \"color\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"color\"; // Autofill\n\n        // Iniitialize me.isDefined flag:\n        const valueAttr = me.targetFieldNode.getAttribute(\"value\");\n        me.isDefined = (\n            valueAttr !== null         // value property not defined\n            && valueAttr.trim() !== \"\" // value property defined (string)\n        );\n\n        // Remember original \"style\" attribute and update if appropriate:\n        me.defaultStyleAttr = me.targetFieldNode.getAttribute(\"style\") + \";\";\n        if (! me.isDefined) me.targetFieldNode.setAttribute(\n            \"style\"\n            , me.defaultStyleAttr + disabled_style\n        );\n\n        // Handle me.isDefined set:\n        const resetDefined = ev=>{\n            if (\n                ev.code    !== \"Enter\"\n                && ev.Code !== \"Space\"\n                && ev.code !== undefined // ev.type must be \"click\" or \"change\"\n                    // && ev.type !== \"click\" // Click event\n                    // && ev.type !== \"change\" // Change event\n            ) return;\n            me.isDefined = true;\n            me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n        };\n        me.targetFieldNode.addEventListener(\"keydown\", resetDefined);\n        me.targetFieldNode.addEventListener(\"click\", resetDefined);\n        me.targetFieldNode.addEventListener(\"change\", resetDefined);\n\n    };//}}}\n    @action\n    async export() {//{{{\n        const me = this;\n        let data = await super.export();\n        if (! me.isSingleton) data = (\n            me.isDefined && data.match(re_color) ? data.toLowerCase()\n            : null\n        );\n        return data;\n    };//}}}\n    @action\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (\n            ! me.isSingleton // Only for real field\n            && data === null\n        ) {\n            me.isDefined = false;\n            me.targetFieldNode.setAttribute(\n                \"style\"\n                , me.defaultStyleAttr + disabled_style\n            );\n        };\n        const value = await super.import({data, focus});\n        return (\n            me.isDefined ? value\n            : null\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\nimport {color} from \"./types/color.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n    color,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","registerEvHandler","evList","evType","evHandler","me","this","has","set","get","push","bind","events","events_decorator","target","_ref","kind","eventEnebledTarget","constructor","optionsSrc","options","onOptionCallbacks","key","value","Object","entries","match","substring","_len","arguments","length","args","Array","_key","super","ImRoot","is","root","Map","onLocal","onAll","on","evt","handler","listenLevel","emit","evData","handlers","defaultPrevented","propagationStopped","preventDefault","stopPropagation","legacy","disEnhance","targetNode","tagName","toLowerCase","addEventListener","event","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","wild2regex","wname","RegExp","replace","errors","renderError","Error","code","message","path","stack","split","slice","join","inferType","node","parentComponent","type","String","getAttribute","isSingleton","_SmarkComponent","SmarkComponent","static","_initClass","_applyDecs","c","property_name","undefined","parent","validName","nameGenerator","counter","names","n0","trim","actions","selector","types","setNodeOptions","parents","iterator","current","autoId","inherittedOption","setRendered","genId","p","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","onRendered","cbk","getNodeOptions","defaultOptions","dataset","opt","JSON","parse","err","action","stringify","enhance","ctrl","getComponent","parentElement","closest","getPath","map","name","reverse","find","base","parts","filter","x","firstWildcardPos","findIndex","re_pattern","pivotPath","restPath","pivot","pivotChilds","child","_ref2","flat","Infinity","reduce","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","actionNames","myCurrentActions","actionKeys","Set","returnAll","tgg","querySelectorAll","getTriggerArgs","context","updateId","newId","values","focus","fname","targetFieldNode","SmarkField","_isField","hasOwnProperty","setAttribute","createType","controller","prototype","hotKeys_handler","form","revealed","onKeydown","onKeyup","onFocusout","onFocusin","ev","reveal","ctrlKey","targettedTrigger","t","hotkey","click","removeAttribute","component","activeContexts","activeContextsSet","candidateTriggers","lv","tg","sort","ta","tb","usedKeys","candidate","disabled","add","beforeEvent","afterEvent","action_decorator","targetMtd","addInitializer","registerAction","trigger","triggerArgs","onTriggerRender","disable","enable","actionSpec","contextPath","targetPath","otherOptions","actionName","targetType","isSameNode","origin","async","onTriggerClick","triggerComponent","mtd","data","getRoots","isTop","parentNode","n","e","makeRoom","element","pixels","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","parseJSON","str","label","labelArgs","getLabelArgs","candidates","found","childName","targetComponent","foldable","foldable_decorator","_initProto","foldableTarget","retv","fold","operation","folded","wasFolded","style","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","_form","newItem","export","fromEntries","all","import","dataConstructor","await","isEmpty","clear","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","unlock","mutex","method_mutex_generator","muxName","mutex_decorator","muxed_target","call","error","sortable","list_sortable_decorator","_moveDecs","sortableTarget","templates","item","dragSource","dragDest","move","from","to","fromi","Number","toi","newChunk","splice","inc","moveMethod","renum","updateTriggers","min_items","failback","max_items","smartdisabling","list_smartdisabling_decorator","smartdisablingClass","smartdisablingMethod","_list","makeNonNavigable","list","_exportDecs","_addItemDecs","_removeItemDecs","max","role","remove","last_separator","separator","querySelector","tplOptions","of","i","addItem","rest","emptyChilds","stripEmpties","min","removeItem","position","autoscroll","newItemTarget","cloneNode","onRenderedCbks","after","before","appendChild","offsetHeight","moveTarget","keep_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","onRemovedCbks","oldItemTarget","onRemoved","count","delta","offset","isLastNode","sepRole","currentNode","prevNode","previousElementSibling","prevNode_role","sepTemplate","insertBefore","nextNode","nextElementSibling","empty_list","innerText","input","isCheckbox","sons","son","checked","keys","number","targetTag","isNaN","typename","re_timePart","parseDateStr","Date","NaN","ISODate","toISOString","date","radio","singleton","sharedNodeName","radioButtons","r","selected","re_color","disabled_style","color","valueAttr","isDefined","defaultStyleAttr","resetDefined","Code","SmarkForm","customActions","formOptions"],"mappings":"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"}