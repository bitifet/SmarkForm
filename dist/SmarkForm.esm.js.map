{"version":3,"file":"SmarkForm.esm.js","sources":["../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/lib/helpers.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/decorators/export_to_target.deco.js","../src/decorators/import_from_target.deco.js","../src/types/form.type.js","../src/types/list.decorators/smartdisabling.deco.js","../src/decorators/mutex.deco.js","../src/types/list.decorators/sortable.deco.js","../src/types/list.type.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/types/color.type.js","../src/main.js"],"sourcesContent":["// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\nexport const events = function events_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnebledTarget extends target {\n            constructor(target, optionsSrc, ...args) {\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                const ImRoot = Object.is(me, me.root);\n                me[sym_local_events] = new Map();\n                if (ImRoot) me.root[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me.root, me.root[sym_all_events]);\n                me.on = me.onLocal; // Handy and readable alias for local events.\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };\n            async emit(evType, evData) {\n                const me = this;\n                const handlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me.root[sym_all_events].get(evType) || []),\n                ];\n                let defaultPrevented = false;\n                if (handlers.length) {\n                    let propagationStopped = false;\n                    evData.preventDefault = () => defaultPrevented = true;\n                    evData.stopPropagation = () => propagationStopped = true;\n                    for (const handler of handlers) {\n                        if (propagationStopped) break;\n                        await handler(evData);\n                    };\n                };\n                return ! defaultPrevented;\n            };\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            if (parentComponent.isSingleton) return parentComponent.options.type;\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                case \"color\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        let base=this;\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            ((current, name)=>(\n                current === undefined ? null\n                : name == \"..\" ? current.parent\n                : current.children[name]\n            ))\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of me.parents\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (! Object.is(options.context, me)) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        if (me.targetFieldNode) me.targetFieldNode.focus();\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        return new errors.renderError(code, message, me.getPath());\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n            if (this.options.hasOwnProperty(\"value\")) {\n                if (this.targetNode.getAttribute(\"value\") !== null) { // Conflict\n                    throw me.renderError(\n                        'VALUE_CONFLICT'\n                        , `Initial value specied both as \"value\" option and HTML \"value\" attribute.`\n                    );\n                };\n                this.targetNode.setAttribute(\"value\", this.options.value);\n            };\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        me.form.targetNode.addEventListener(\n            \"keydown\"\n            , me.onKeydown.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"keyup\"\n            , me.onKeyup.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusout\"\n            , me.onFocusout.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusin\"\n            , me.onFocusin.bind(me)\n            , true\n        );\n    };\n    onKeydown(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(ev.target); // Activate and reveal.\n        } else if (ev.ctrlKey) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                targettedTrigger.targetNode.click();\n            };\n        };\n    };\n    onKeyup(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(false); // Deactivate\n        };\n    };\n    onFocusout(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(); // Unreveal, keep activated.\n        };\n    };\n    onFocusin(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(ev.target); // Update revealed triggers\n        };\n    };\n    reveal(target) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = [component, ...component.parents];\n            const activeContextsSet = new Set(activeContexts);\n\n            const candidateTriggers = activeContexts\n                .map((c, lv)=>(\n                    c.getTriggers('*')    // All triggers.\n                    .map(tg=>({\n                        tg,\n                        lv,   // Ancestor level.\n                        args: tg.getTriggerArgs() || {},\n                        hotkey: String(tg.options.hotkey || \"\"),\n                    }))\n                ))\n                .flat()\n                .filter(({args, hotkey})=>(\n                    hotkey.length\n                    && activeContextsSet.has(args.context)\n                ))\n                .sort((ta,tb)=>(\n                    activeContextsSet.has(tb.args.target)\n                    - activeContextsSet.has(ta.args.target)\n                    - tb.lv\n                    + ta.lv\n                ))\n            ;\n\n            const usedKeys = new Set();\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                if (usedKeys.has(candidate.hotkey)) continue; // Used by more preferent tg.\n                if (! candidate.tg.targetNode.disabled) {\n                    candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                };\n                // (UX): Perform the following even if disabled for behavioral\n                // consistency...\n                usedKeys.add(candidate.hotkey); // ...don't activate others in place.\n                me.revealed.push(candidate.tg); // ...keep preventing event propagation.\n            };\n\n        };\n\n    };\n};\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nconst beforeEvent = Symbol(\"beforeEventName\");\nconst afterEvent = Symbol(\"afterEventName\");\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        this.actions[name] = targetMtd.bind(this);\n        this.actions[name][beforeEvent] = `BeforeAction_${name}`;\n        this.actions[name][afterEvent] = `AfterAction_${name}`;\n    });\n};\n\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        const {\n            // property: local variable\n            action: actionSpec,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! actionSpec) return; // Not a trigger component.\n\n        // Allow binding triggers to specific component types:\n        // (Syntax \"type:action\")\n        let [actionName, targetType] = actionSpec.split(\":\").reverse();\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>{\n                if (targetType && p.options.type != targetType) return false;\n                if (typeof p.actions[actionName] != \"function\") return false;\n                return true;\n            })\n        );\n\n        const target = (\n            targetPath ? context.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : (\n                parents\n                    .slice(1) // Skip self\n                    .find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n                || null\n            )\n        );\n\n        return {\n            action: actionName,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    if (await me.emit(mtd[beforeEvent], options)) {\n        const data = await mtd(options);\n        me.emit(mtd[afterEvent], {...options, data});\n    };\n};\n\n\n","\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {//{{{\n    return Math.random().toString(36).substring(2);\n};//}}}\n\nexport function parseJSON(str) {//{{{\n    try {\n        return JSON.parse(str);\n    } catch (err) {};\n};//}}}\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\n\n// TODO:\n// =====\n//\n//   🚀 Add support for (smarkform) fields contained in the label.\n//      👉 Now we can just not enhance the label (<label>Bla bla bla<input\n//         data-smark></label>) and it will (in this case natively) work.\n//      👉 ...but this does not allow us to use other SmarkForm fields such as\n//         forms and lists (since they can contain more than one native field\n//         which is not allowed by <label> tag.\n//      💡 But we can use different tag (with {data-smark=\"label\"}) and just\n//         create the native <label> tag around the text.\n//\n//   🚀 Implement \"text templating\" feature.\n//      👉 This should allow to include contextual data in the text of the\n//         label.\n//      ⚡ For example, list item position for list items...\n//\n\nexport class label extends SmarkComponent {\n    constructor(node, {allow_select = false, ...options}, ...args){\n        delete options.name; // Labels are always unnamed.\n        return super(node, {allow_select, ...options}, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const labelArgs = me.getLabelArgs();\n            const {targetFieldNode} = labelArgs.target || {};\n            if (targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! targetFieldNode.id) { // Ensure targetted field has an Id\n                    targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", targetFieldNode.id);\n            };\n            if (! me.options.allow_select) {\n                // Make labels non-selectable unless \"allow_select\" option\n                // is set  to true.\n                me.targetNode.style[\"user-select\"] = \"none\";\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold({operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold({//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n            };//}}}\n        };\n    };\n};\n","// src/decorators/export_to_target.deco.js\n// =======================================\n\nexport const export_to_target = function export_to_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function export_mtd({target, ...options}={}) {\n            const me = this;\n            const value = await method.call(me, options);\n            try {\n                await target.import({data: value});\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return value;\n        };\n    };\n};\n","// src/decorators/import_from_target.deco.js\n// =========================================\n\nexport const import_from_target = function import_from_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function import_mtd({target, data, ...options}={}) {\n            const me = this;\n            try {\n                data = await target.export();\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return await method.call(me, {data, ...options});\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {getRoots, parseJSON} from \"../lib/helpers.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export()]\n            ))\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = {}, focus = true} = {}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (\n            dataConstructor !== {}.constructor // Not a plain object\n            && ! (data = parseJSON(data))      // Neither a (valid) JSON string\n        ) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object or vailid JSON for form import, ${dataConstructor.name} given.`\n        );\n        const retv = Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import({data: data[key], focus});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n        if (focus) me.focus();\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: {}, focus});\n    };//}}}\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_decorator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.templates.item.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ];\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ];\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n                me.renum();\n            };//}}}\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\n// TODO:\n// =====\n//\n// 👉 Keep first item in place:\n//    -------------------------\n//     \n//    For lists allowing 0 items, make first element disabled and not visible\n//    instead of completely removing from DOM.\n//\n//    This would avoid lots of visual layout issues.\n//\n\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\nimport {makeRoom, getRoots, parseJSON} from \"../lib/helpers.js\";\n\n\n// Private helpers:\n// ----------------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\nfunction loadTemplates(me) {//{{{\n    const templates = {};\n    for (const child of [...me.targetNode.children]) {\n        const {role = \"item\"} = parseJSON(child.getAttribute(\"data-smark\")) || {};\n        switch (role) {\n            case \"empty_list\":\n            case \"header\":\n            case \"separator\":\n            case \"last_separator\":\n            case \"footer\":\n            case \"placeholder\": // (Only with max_items defined)\n                child.setAttribute(\"data-role\", role);\n            case \"item\": // (Default)\n                if (templates[role] !== undefined) throw me.renderError(\n                    'LIST_DUPLICATE_TEMPLATE'\n                    , `Repated list template role ${role}`\n                );\n                templates[role] = child;\n                templates[role].remove();\n            break;\n        };\n    };\n    if (me.targetNode.children.length) {\n        const {role = \"(unspecified)\"} = parseJSON(\n            me.targetNode.children[0].getAttribute(\"data-smark\")\n        ) || {};\n        throw me.renderError(\n            'LIST_UNKNOWN_TEMPLATE_ROLE'\n            , `Unknown list template role ${role}`\n        );\n    };\n    if (! templates.last_separator) {\n        templates.last_separator = templates.separator; // (If any)\n    };\n    if (\n        templates.item.querySelector(\"[id]\") !== null // Contains IDs\n    ) throw me.renderError(\n        'LIST_CONTAINS_ID'\n        , `List components are not allowed to contain elements with 'id' attribute`\n    );\n    return templates;\n};//}}}\n\n\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async #appendChild(child) {//{{{\n        const me = this;\n        if (me.templates.header) {\n            me.templates.header.after(child);\n        } else {\n            me.targetNode.appendChild(child);\n        };\n    };//}}}\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        me.templates = loadTemplates(me);\n        me.placeholders = [];\n        const tplOptions = me.getNodeOptions(\n            me.templates.item\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        for (const tpl of [\n            me.templates.header,\n            me.templates.footer,\n        ]) if (!! tpl) {\n            me.targetNode.appendChild(tpl);\n            // Enhance childs:\n            for (\n                const node\n                of getRoots(tpl, me.selector)\n            ) {\n                const newItem = await me.enhance(node);\n                if (!! newItem?._isField) {\n                    throw me.renderError(\n                        'FIELD_IN_WRONG_LIST_TEMPLATE'\n                        , `Fields are not allowed in list's template roles other than item.`\n                    );\n                };\n            };\n        };\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem();\n\n            // Initialize \"count\" actions and reinject empty_list template:\n            if (me.min_items == 0) await me.renum();\n\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n        return;\n    };//}}}\n    onTriggerRender({action, origin, context}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const emptyChilds = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) {\n                if (list.length < me.min_items) emptyChilds.push(child);\n                continue;\n            };\n            list.push(await child.export())\n        };\n        for (let i=0; list.length < me.min_items; i++) {\n            list.push(await emptyChilds[i].export());\n        };\n        return list;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = [], focus} = {}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! (data instanceof Array)) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem(); // Make room on demand\n            await me.children[i].import({data: data[i], focus});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem();\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].clear();\n        if (focus) me.focus();\n        return; // await me.export();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            position = \"after\",\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            failback,\n        } = options;\n        if (position != \"after\" && position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${position}`\n        );\n        if (me.children.length >= me.max_items) {\n            switch (failback) {\n                case \"none\":\n                    break;\n                case \"throw\":\n                default:\n                    me.emit(\"error\", {\n                        code: 'LIST_MAX_ITEMS_REACHED',\n                        message: `Cannot add items over max_items boundary`,\n                        options,\n                    });\n            };\n            return;\n        };\n        if (me.children.length && ! target) target = ( // Auto target:\n            position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.templates.item.cloneNode(true);\n        //}}}\n        // addItem event emitting:{{{\n        const onRenderedCbks = [];\n            // Allow for handy callback instead of two separate event handlers\n        await me.emit(\"addItem\", {\n                action,\n                origin,\n                context,\n                target,  // <--- Effective target.\n                position,\n                newItemTarget,\n                options, // <- Original options (including target)\n                onRendered: cbk => onRenderedCbks.push(cbk),\n        });\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            await me.#appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(target.targetNode)) return child;\n                    if (position == \"after\") {\n                        child.targetNode.after(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [child, newItem]; // Right order, flatted later...\n                    } else {\n                        child.targetNode.before(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [newItem, child]; // Right order, flatted later...\n                    };\n                })\n            ))\n                .flat()\n            ;\n        };\n        await me.renum();\n        //}}}\n        // Autoscroll handling:{{{\n        if (autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : autoscroll == \"self\" ? newItem\n                : autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        // Execute \"onRendered\" callbacks:{{{\n        onRenderedCbks.forEach(cbk=>cbk(newItem));\n        //}}}\n        if (me.renderedSync) newItem.focus();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(options = {}) {//{{{\n        const me = this;\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            keep_non_empty,\n            failback,\n        } = options;\n        if (! target) {\n            if (keep_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                target = t;\n                break;\n            };\n            if (! target) {\n                target = me.children[me.children.length - 1];\n                keep_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            target instanceof Array ? target\n            : [target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.clear();\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (keep_non_empty && ! await currentTarget.isEmpty()) continue;\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                autoscroll == \"self\" ? child\n                                : autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n\n                        oldItem = child;\n\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n\n                        return false;\n                    };\n                    return true;\n                })\n            ;\n            // removeItem event emitting:{{{\n            const onRemovedCbks = [];\n                // Allow for handy callback instead of two separate event handlers\n            await me.emit(\"removeItem\", {\n                action,\n                origin,\n                context,\n                target: currentTarget,  // <--- Effective target.\n                oldItem,                 // Child going to be removed.\n                oldItemTarget: oldItem.targetNode, // Its target (analogous to addItem event).\n                options,\n                onRemoved: cbk => onRemovedCbks.push(cbk),\n            });\n            //}}}\n\n            oldItem.targetNode.remove();\n            me.children = newChildren;\n            await me.renum();\n\n            // Execute \"onRemoved\" callbacks:{{{\n            onRemovedCbks.forEach(cbk=>cbk());\n            //}}}\n\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n\n        };\n\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: [], focus});\n    };//}}}\n    @action\n    count({delta = 0} = {}) {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length + Number(delta);\n    };//}}}\n    @action\n    position({target, offset = 1} = {}) {//{{{\n        return Number(target?.name) + Number(offset);\n    };//}}}\n    async renum(){//{{{\n        const me = this;\n\n        // Update child index:\n        for (const i in me.children) {\n            me.children[i].name = i;\n            me.children[i].updateId();\n        };\n\n        // Handle separators:\n        if (\n            !! me.templates.separator\n            || !! me.templates.last_separator\n        ) for (const i in me.children) {\n\n            const isLastNode = i >= me.children.length - 1;\n            const sepRole = (\n                i <= 0 ? null\n                : isLastNode ? \"last_separator\"\n                : \"separator\"\n            );\n\n            const currentNode = me.children[i].targetNode;\n            const prevNode = currentNode.previousElementSibling;\n            const prevNode_role = prevNode && prevNode.getAttribute(\"data-role\");\n            if (prevNode_role !== sepRole) {\n                if (!! prevNode_role) prevNode.remove();\n                const sepTemplate = me.templates[sepRole];\n                if (!! sepRole && !! sepTemplate) currentNode.parentElement.insertBefore(sepTemplate.cloneNode(true), currentNode);\n            };\n            if (isLastNode) { // LastItem\n                const nextNode = currentNode.nextElementSibling;\n                if (!! nextNode) nextNode.remove();\n            };\n\n        };\n\n        // Handle empty_list template:\n        if (me.templates.empty_list) {\n            if (me.children.length) {\n                me.templates.empty_list.remove(); // (from DOM)\n            } else {\n                await me.#appendChild(me.templates.empty_list);\n            };\n        };\n\n        // Handle placeholder template:\n        if (\n            me.templates.placeholder\n            && !! me.max_items // (Only if we have a finite padding limit)\n        ) {\n            let placeHoldersCount = (me.max_items || 0) - me.children.length;\n            if (\n                placeHoldersCount > 0\n                && me.children.length === 0\n                && !! me.templates.empty_list\n            ) placeHoldersCount--; // Discount the hole occupied by empty_list\n            if (me.placeholders.length < placeHoldersCount) {\n                for (let i = me.placeholders.length; i < placeHoldersCount; i++) {\n                    const placeholder = me.templates.placeholder.cloneNode(true);\n                    if (me.templates.footer) {\n                        me.templates.footer.before(placeholder);\n                    } else {\n                        me.targetNode.appendChild(placeholder);\n                    };\n                    me.placeholders.push(placeholder);\n                };\n            } else { // me.placeholders.length >= placeHoldersCount\n                for (let i = me.placeholders.length; i > placeHoldersCount; i--) {\n                    me.placeholders.pop().remove();\n                };\n            };\n        };\n\n        // Update counter triggers:\n        me.getTriggers(\"position\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.position(args);\n        });\n        me.getTriggers(\"count\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.count(args);\n        });\n    };//}}}\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nexport class input extends form {\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const sons = Object.values(me.children);\n            if (sons.length != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${sons.length} found.`\n            );\n            const son = sons[0];\n            if (me.options.type !== son.options.type) throw me.renderError(\n                'SINGLETON_TYPE_MISMATCH'\n                , `Singleton type (${me.options.type})`\n                + ` does not match child field type (${son.options.type}).`\n            );\n            me.targetFieldNode = son.targetNode;\n        } else {\n            me.targetFieldNode = me.targetNode;\n        };\n        return;\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        let retv;\n        if (me.isSingleton) {\n            retv = Object.values(await super.export())[0];\n        } else if (me.isCheckbox) {\n            retv = !! nodeFld.checked;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n            && nodeFld.options[nodeFld.selectedIndex]?.getAttribute(\"value\") === null\n        ) {\n            // Keep fallback working when encoding is json and value attribute is not set.\n            // (and don't expetct <opton> inner text to be JSON)\n            retv = JSON.stringify(nodeFld.options[nodeFld.selectedIndex].text);\n        } else {\n            retv = nodeFld.value;\n        };\n        return (\n            me.options.encoding === \"json\" ? parseJSON(retv) || null\n            : retv\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = \"\", focus = true} = {}) {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        if (\n            typeof data === \"object\"\n            && me.options.type === \"input\"    // Not in a derivated field types\n            || me.options.encoding === \"json\" // JSON encoding specified\n        ) {\n            data ||= null;\n            const isTextarea = nodeFld.tagName.toUpperCase() === \"TEXTAREA\";\n            data = (\n                isTextarea ? JSON.stringify(data, null, 4) // Pretty print\n                : JSON.stringify(data) // Compact print\n            ) || \"\";\n        };\n        if (me.isSingleton) {\n            return await super.import({data: Object.fromEntries(\n                [[Object.keys(me.children)[0], data]]\n            ), focus});\n        } else if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n        ) {\n            me.targetNode.value = (data || \"null\"); // Faster, but won't work if value attribute is not set.\n            if (nodeFld.selectedIndex === -1) {\n                // Fallback when value attribute is not set.\n                const parsed = parseJSON(data) || \"\";\n                const idx = Array.from(nodeFld.options).findIndex(\n                    opt => opt.text === parsed\n                );\n                if (idx !== -1) nodeFld.selectedIndex = idx;\n            };\n        } else {\n            me.targetNode.value = data;\n        };\n        if (focus) me.focus();\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export()\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        await me.import({\n            data: me.options.encoding === \"json\" ? null : \"\",\n            focus,\n        });\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        const typename = typeof data;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const retv =  await super.import({data:(\n            typename == \"number\" ? data\n            : typename == \"string\"\n                && data.length\n                && ! isNaN(data)\n                ? Number(data)\n            : null\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        const retv = await super.import({data:(\n            isNaN(value) ? null\n            : ISODate(value)\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        let master = me.parent.children[me.name];\n        let retv = me;\n        if (master) {\n            me.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons.push(me.targetNode);\n            retv = {}; // Not the master field.\n        } else {\n            master = me;\n            // Provide unique name for DOM navigation to work properly:\n            master.sharedNodeName = randomId();\n            master.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons = [\n                master.targetNode\n            ];\n        };\n        let changeEventHandler = onRadioInteraction.bind(master);\n        me.targetNode.addEventListener(\"click\", changeEventHandler);\n        me.targetNode.addEventListener(\"keydown\", changeEventHandler);\n        return retv;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value || null;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) {\n            selected.checked = true;\n        } else {\n            this.radioButtons.forEach(r=>r.checked = false);\n        };\n        if (focus) this.focus();\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\nfunction onRadioInteraction(event) {//{{{\n    if (\n        event.type === \"click\"\n        || event.type === \"keydown\" && event.code === \"Delete\"\n        // NOTE: Some browsers also send fake click events for toggling radio\n        //       buttons.\n        //       This approach avoids to interfere with that behavior while\n        //       ensuring a consistent keyboard resetting method (through the\n        //       Delete key).\n    ) {\n        const me = this;\n        let checked = true; // All raddio buttons become checked on click.\n        const lastSelection = Object.is(me.lastClicked?.target, event.target);\n        if (lastSelection) checked = (\n            ! me.lastClicked.checked    // Click  => Toggle\n            && event.type !== \"keydown\" // Delete => Reset\n        );\n        me.lastClicked = {\n            target: event.target,\n            checked,\n        };\n        event.target.checked = checked;\n    };\n};//}}}\n","// types/color.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nconst re_color = /^#([a-f0-9]{3}){1,2}$/i;\nconst disabled_style = `\n    opacity: .5;\n    background: repeating-linear-gradient(\n            45deg,\n            black,\n            black 10px,\n            white 10px,\n            white 20px\n        ),\n        black;\n    background-blend-mode: difference;\n`;\nexport class color extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n\n        if (me.isSingleton) return; // (Only for real field)\n\n        // Check targetField's type attribute:\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"color\").toLowerCase() != \"color\"\n        ) throw me.renderError(\n            'NOT_A_COLOR_FIELD'\n            , `Color inputs require an INPUT tag of type \"color\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"color\"; // Autofill\n\n        // Iniitialize me.isDefined flag:\n        const valueAttr = me.targetFieldNode.getAttribute(\"value\");\n        me.isDefined = (\n            valueAttr !== null         // value property not defined\n            && valueAttr.trim() !== \"\" // value property defined (string)\n        );\n\n        // Remember original \"style\" attribute and update if appropriate:\n        me.defaultStyleAttr = me.targetFieldNode.getAttribute(\"style\") + \";\";\n        if (! me.isDefined) me.targetFieldNode.setAttribute(\n            \"style\"\n            , me.defaultStyleAttr + disabled_style\n        );\n\n        // Handle me.isDefined set:\n        const resetDefined = ev=>{\n            if (\n                ev.code    !== \"Enter\"\n                && ev.Code !== \"Space\"\n                && ev.code !== undefined // ev.type must be \"click\" or \"change\"\n                    // && ev.type !== \"click\" // Click event\n                    // && ev.type !== \"change\" // Change event\n            ) return;\n            me.isDefined = true;\n            me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n        };\n        me.targetFieldNode.addEventListener(\"keydown\", resetDefined);\n        me.targetFieldNode.addEventListener(\"click\", resetDefined);\n        me.targetFieldNode.addEventListener(\"change\", resetDefined);\n\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        let data = await super.export(...args);\n        if (! me.isSingleton) data = (\n            me.isDefined && data.match(re_color) ? data.toLowerCase()\n            : null\n        );\n        return data;\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (\n            ! me.isSingleton // Only for real field\n        ) {\n            if (\n                data === null              // Explicit null value\n                || ! data.match(re_color)  // Invalid color value\n            ) {\n                me.isDefined = false;\n                me.targetFieldNode.setAttribute(\n                    \"style\"\n                    , me.defaultStyleAttr + disabled_style\n                );\n            } else {\n                me.isDefined = true;\n                me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n            };\n        };\n        const value = await super.import({data, focus});\n        return (\n            me.isDefined ? value\n            : null\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\nimport {color} from \"./types/color.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n    color,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","registerEvHandler","evList","evType","evHandler","me","this","has","set","get","push","bind","events","events_decorator","target","_ref","kind","eventEnebledTarget","constructor","optionsSrc","options","onOptionCallbacks","key","value","Object","entries","match","substring","_len","arguments","length","args","Array","_key","super","ImRoot","is","root","Map","onLocal","onAll","on","evt","handler","listenLevel","emit","evData","handlers","defaultPrevented","propagationStopped","preventDefault","stopPropagation","legacy","disEnhance","targetNode","tagName","toLowerCase","addEventListener","event","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","wild2regex","wname","RegExp","replace","errors","renderError","Error","code","message","path","stack","split","slice","join","inferType","node","parentComponent","type","String","getAttribute","isSingleton","_SmarkComponent","SmarkComponent","static","_initClass","_applyDecs","c","property_name","undefined","parent","validName","nameGenerator","counter","names","n0","trim","actions","selector","types","setNodeOptions","parents","iterator","current","autoId","inherittedOption","setRendered","genId","p","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","onRendered","cbk","getNodeOptions","defaultOptions","dataset","opt","JSON","parse","err","action","stringify","enhance","ctrl","getComponent","parentElement","closest","getPath","map","name","reverse","find","base","parts","filter","x","firstWildcardPos","findIndex","re_pattern","pivotPath","restPath","pivot","pivotChilds","child","_ref2","flat","Infinity","reduce","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","actionNames","myCurrentActions","actionKeys","Set","returnAll","tgg","querySelectorAll","getTriggerArgs","context","updateId","newId","values","focus","fname","targetFieldNode","SmarkField","_isField","hasOwnProperty","setAttribute","createType","controller","prototype","hotKeys_handler","form","revealed","onKeydown","onKeyup","onFocusout","onFocusin","ev","reveal","ctrlKey","targettedTrigger","t","hotkey","click","removeAttribute","component","activeContexts","activeContextsSet","candidateTriggers","lv","tg","sort","ta","tb","usedKeys","candidate","disabled","add","beforeEvent","afterEvent","action_decorator","targetMtd","addInitializer","registerAction","trigger","triggerArgs","onTriggerRender","disable","enable","actionSpec","contextPath","targetPath","otherOptions","actionName","targetType","isSameNode","origin","async","onTriggerClick","triggerComponent","mtd","data","getRoots","isTop","parentNode","n","e","makeRoom","element","pixels","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","parseJSON","str","label","allow_select","labelArgs","getLabelArgs","style","candidates","found","childName","targetComponent","foldable","foldable_decorator","_initProto","foldableTarget","retv","fold","operation","folded","wasFolded","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","export_to_target","export_to_target_decorator","method","export_mtd","call","import","error","import_from_target","import_from_target_decorator","import_mtd","export","_form","newItem","fromEntries","all","dataConstructor","await","isEmpty","clear","updateTriggers","min_items","failback","max_items","smartdisabling","list_smartdisabling_decorator","smartdisablingClass","smartdisablingMethod","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","unlock","mutex","method_mutex_decorator","muxName","mutex_decorator","muxed_target","sortable","list_sortable_decorator","_moveDecs","sortableTarget","templates","item","dragSource","dragDest","move","from","to","fromi","Number","toi","newChunk","splice","inc","moveMethod","renum","_list","makeNonNavigable","loadTemplates","role","remove","last_separator","separator","querySelector","list","_exportDecs","_addItemDecs","_removeItemDecs","appendChild","header","after","max","placeholders","tplOptions","of","tpl","footer","i","addItem","emptyChilds","stripEmpties","min","removeItem","position","autoscroll","newItemTarget","cloneNode","onRenderedCbks","before","offsetHeight","moveTarget","keep_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","onRemovedCbks","oldItemTarget","onRemoved","count","delta","offset","isLastNode","sepRole","currentNode","prevNode","previousElementSibling","prevNode_role","sepTemplate","insertBefore","nextNode","nextElementSibling","empty_list","placeholder","placeHoldersCount","pop","innerText","input","isCheckbox","sons","son","nodeFld","checked","encoding","toUpperCase","selectedIndex","text","isTextarea","keys","parsed","idx","number","targetTag","isNaN","typename","re_timePart","parseDateStr","Date","NaN","ISODate","toISOString","date","radio","master","sharedNodeName","radioButtons","changeEventHandler","onRadioInteraction","r","selected","lastSelection","lastClicked","re_color","disabled_style","color","valueAttr","isDefined","defaultStyleAttr","resetDefined","Code","SmarkForm","customActions","formOptions"],"mappings":"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"}