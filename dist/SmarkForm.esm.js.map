{"version":3,"file":"SmarkForm.esm.js","sources":["../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/lib/helpers.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/types/form.type.js","../src/decorators/mutex.deco.js","../src/types/list.decorators/sortable.deco.js","../src/types/list.decorators/smartdisabling.deco.js","../src/types/list.type.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/main.js"],"sourcesContent":["// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\nexport const events = function events_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnebledTarget extends target {\n            constructor(target, optionsSrc, ...args) {\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                const ImRoot = Object.is(me, me.root);\n                me[sym_local_events] = new Map();\n                if (ImRoot) me.root[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me.root, me.root[sym_all_events]);\n                me.on = me.onLocal; // Handy and readable alias for local events.\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };\n            async emit(evType, evData) {\n                const me = this;\n                const handlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me.root[sym_all_events].get(evType) || []),\n                ];\n                let defaultPrevented = false;\n                if (handlers.length) {\n                    let propagationStopped = false;\n                    evData.preventDefault = () => defaultPrevented = true;\n                    evData.stopPropagation = () => propagationStopped = true;\n                    for (const handler of handlers) {\n                        if (propagationStopped) break;\n                        await handler(evData);\n                    };\n                };\n                return ! defaultPrevented;\n            };\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        let base=this;\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            ((current, name)=>(\n                current === undefined ? null\n                : name == \"..\" ? current.parent\n                : current.children[name]\n            ))\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of me.parents\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (! Object.is(options.context, me)) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        me.targetFieldNode.focus();\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        return new errors.renderError(code, message, me.getPath());\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        me.form.targetNode.addEventListener(\n            \"keydown\"\n            , me.onKeydown.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"keyup\"\n            , me.onKeyup.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusout\"\n            , me.onFocusout.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusin\"\n            , me.onFocusin.bind(me)\n            , true\n        );\n    };\n    onKeydown(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(ev.target); // Activate and reveal.\n        } else if (ev.ctrlKey) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                targettedTrigger.targetNode.click();\n            };\n        };\n    };\n    onKeyup(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(false); // Deactivate\n        };\n    };\n    onFocusout(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(); // Unreveal, keep activated.\n        };\n    };\n    onFocusin(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(ev.target); // Update revealed triggers\n        };\n    };\n    reveal(target) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = [component, ...component.parents];\n            const activeContextsSet = new Set(activeContexts);\n\n            const candidateTriggers = activeContexts\n                .map((c, lv)=>(\n                    c.getTriggers('*')    // All triggers.\n                    .map(tg=>({\n                        tg,\n                        lv,   // Ancestor level.\n                        args: tg.getTriggerArgs() || {},\n                        hotkey: String(tg.options.hotkey || \"\"),\n                    }))\n                ))\n                .flat()\n                .filter(({args, hotkey})=>(\n                    hotkey.length\n                    && activeContextsSet.has(args.context)\n                ))\n                .sort((ta,tb)=>(\n                    activeContextsSet.has(tb.args.target)\n                    - activeContextsSet.has(ta.args.target)\n                    - tb.lv\n                    + ta.lv\n                ))\n            ;\n\n            const usedKeys = new Set();\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                if (usedKeys.has(candidate.hotkey)) continue; // Used by more preferent tg.\n                if (! candidate.tg.targetNode.disabled) {\n                    candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                };\n                // (UX): Perform the following even if disabled for behavioral\n                // consistency...\n                usedKeys.add(candidate.hotkey); // ...don't activate others in place.\n                me.revealed.push(candidate.tg); // ...keep preventing event propagation.\n            };\n\n        };\n\n    };\n};\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nconst beforeEvent = Symbol(\"beforeEventName\");\nconst afterEvent = Symbol(\"afterEventName\");\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        this.actions[name] = targetMtd.bind(this);\n        this.actions[name][beforeEvent] = `BeforeAction_${name}`;\n        this.actions[name][afterEvent] = `AfterAction_${name}`;\n    });\n};\n\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        const {\n            // property: local variable\n            action: actionSpec,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! actionSpec) return; // Not a trigger component.\n\n        // Allow binding triggers to specific component types:\n        // (Syntax \"type:action\")\n        let [actionName, targetType] = actionSpec.split(\":\").reverse();\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>{\n                if (targetType && p.options.type != targetType) return false;\n                if (typeof p.actions[actionName] != \"function\") return false;\n                return true;\n            })\n        );\n\n        const target = (\n            targetPath ? context.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : parents.find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n        );\n\n        return {\n            action: actionName,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    if (await me.emit(mtd[beforeEvent], options)) {\n        const data = await mtd(options);\n        me.emit(mtd[afterEvent], {...options, data});\n    };\n};\n\n\n","\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {\n    return Math.random().toString(36).substring(2);\n};\n\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\n\n// TODO:\n// =====\n//\n//   🚀 Add support for (smarkform) fields contained in the label.\n//      👉 Now we can just not enhance the label (<label>Bla bla bla<input\n//         data-smark></label>) and it will (in this case natively) work.\n//      👉 ...but this does not allow us to use other SmarkForm fields such as\n//         forms and lists (since they can contain more than one native field\n//         which is not allowed by <label> tag.\n//      💡 But we can use different tag (with {data-smark=\"label\"}) and just\n//         create the native <label> tag around the text.\n//\n//   🚀 Implement \"text templating\" feature.\n//      👉 This should allow to include contextual data in the text of the\n//         label.\n//      ⚡ For example, list item position for list items...\n//\n\nexport class label extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Labels are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const labelArgs = me.getLabelArgs();\n            const {targetFieldNode} = labelArgs.target || {};\n            if (targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! targetFieldNode.id) { // Ensure targetted field has an Id\n                    targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", targetFieldNode.id);\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold({operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold({//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n            };//}}}\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {getRoots} from \"../lib/helpers.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {action} from \"./trigger.type.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export()]\n            ))\n        );\n    };//}}}\n    @action\n    async import({data = {}}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (dataConstructor !== {}.constructor) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object for form import, ${dataConstructor.name} given.`\n        );\n        return Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import({data: data[key]});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async empty() {//{{{\n        const me = this;\n        return await me.import({data: {}});\n    };//}}}\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_generator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.itemTpl.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ].map((c, i)=>{\n                        c.name = i+fromi;\n                        c.updateId();\n                        return c;\n                    });\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ].map((c, i)=>{\n                        c.name = i+toi;\n                        c.updateId();\n                        return c;\n                    });\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n            };//}}}\n        };\n    };\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\n// TODO:\n// =====\n//\n// 👉 Keep first item in place:\n//    -------------------------\n//     \n//    For lists allowing 0 items, make first element disabled and not visible\n//    instead of completely removing from DOM.\n//\n//    This would avoid lots of visual layout issues.\n//\n\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {makeRoom} from \"../lib/helpers.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\n\n\n// Helpers:\n// --------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        const numChilds = me.targetNode.children.length;\n        if (numChilds != 1) throw me.renderError(\n            'LIST_WRONG_NUM_CHILDREN'\n            , `List components must contain exactly 1 direct children, but ${numChilds} given`\n        );\n        me.itemTpl = me.targetNode.children[0];\n        if (\n            me.itemTpl.querySelector(\"[id]\") !== null // Contains IDs\n        ) throw me.renderError(\n            'LIST_CONTAINS_ID'\n            , `List components are not allowed to contain elements with 'id' attribute`\n        );\n        const tplOptions = me.getNodeOptions(\n            me.itemTpl\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem();\n            if (me.min_items == 0) {\n                // Update \"count\" actions in case of not already updated by\n                // me.addItem:\n                me.getTriggers(\"count\").forEach(\n                    tgg=>tgg.targetNode.innerText = String(me.children.length)\n                );\n            };\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n        me.itemTpl.remove();\n        return;\n    };//}}}\n    onTriggerRender({action, origin, context, ...rest}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) continue;\n            list.push(await child.export())\n        };\n        return list;\n    };//}}}\n    @action\n    async import({data = []}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! data instanceof Array) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem(); // Make room on demand\n            await me.children[i].import({data: data[i]});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem();\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].empty();\n        return; // await me.export();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            position = \"after\",\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n        } = options;\n        if (position != \"after\" && position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${position}`\n        );\n        if (me.children.length >= me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_MAX_ITEMS_REACHED',\n                message: `Cannot add items over max_items boundary`,\n                options,\n            });\n            return;\n        };\n        if (me.children.length && ! target) target = ( // Auto target:\n            position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.itemTpl.cloneNode(true);\n        //}}}\n        // addItem event emitting:{{{\n        const onRenderedCbks = [];\n            // Allow for handy callback instead of two separate event handlers\n        await me.emit(\"addItem\", {\n                action,\n                origin,\n                context,\n                target,  // <--- Effective target.\n                position,\n                newItemTarget,\n                options, // <- Original options (including target)\n                onRendered: cbk => onRenderedCbks.push(cbk),\n        });\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            me.targetNode.appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n            newItem.updateId();\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(target.targetNode)) return child;\n                    if (position == \"after\") {\n                        child.targetNode.after(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [child, newItem]; // Right order, flatted later...\n                    } else {\n                        child.targetNode.before(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [newItem, child]; // Right order, flatted later...\n                    };\n                })\n            ))\n                .flat()\n                .map((c,i)=>{\n                    c.name = i;\n                    c.updateId();\n                    return c;\n                })\n            ;\n        };\n        //}}}\n        // Autoscroll handling:{{{\n        if (autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : autoscroll == \"self\" ? newItem\n                : autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        // Execute \"onRendered\" callbacks:{{{\n        onRenderedCbks.forEach(cbk=>cbk(newItem));\n        //}}}\n        me.getTriggers(\"count\").forEach(\n            tgg=>tgg.targetNode.innerText = String(me.children.length)\n        );\n        if (me.renderedSync) newItem.focus();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(options = {}) {//{{{\n        const me = this;\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            keep_non_empty,\n            failback,\n        } = options;\n        if (! target) {\n            if (keep_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                target = t;\n                break;\n            };\n            if (! target) {\n                target = me.children[me.children.length - 1];\n                keep_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            target instanceof Array ? target\n            : [target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.empty();\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (keep_non_empty && ! await currentTarget.isEmpty()) continue;\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                autoscroll == \"self\" ? child\n                                : autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n\n                        oldItem = child;\n\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n\n                        return false;\n                    };\n                    return true;\n                })\n                .map((c,i)=>{\n                    c.name = i;\n                    c.updateId();\n                    return c;\n                })\n            ;\n            // removeItem event emitting:{{{\n            const onRemovedCbks = [];\n                // Allow for handy callback instead of two separate event handlers\n            await me.emit(\"removeItem\", {\n                action,\n                origin,\n                context,\n                target: currentTarget,  // <--- Effective target.\n                oldItem,                 // Child going to be removed.\n                oldItemTarget: oldItem.targetNode, // Its target (analogous to addItem event).\n                options,\n                onRemoved: cbk => onRemovedCbks.push(cbk),\n            });\n            //}}}\n\n            oldItem.targetNode.remove();\n            me.children = newChildren;\n\n            me.getTriggers(\"count\").forEach(\n                tgg=>tgg.targetNode.innerText = String(me.children.length)\n            );\n\n            // Execute \"onRemoved\" callbacks:{{{\n            onRemovedCbks.forEach(cbk=>cbk());\n            //}}}\n\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n\n        };\n\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async empty() {//{{{\n        const me = this;\n        return await me.import({data: []});\n    };//}}}\n    @action\n    count() {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length;\n    };//}}}\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class input extends form {\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const numFields = Object.keys(me.children).length;\n            if (numFields != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${numFields} found.`\n            );\n        }\n        me.targetFieldNode = (\n            me.isSingleton ? Object.values(me.children)[0].targetNode\n            : me.targetNode\n        );\n        // console.log(\"New input!!!!\", {\n        //     targetNode: me.targetNode,\n        //     parent: me.parent,\n        //     options: me.options,\n        //     inputField: me.inputField,\n        // });\n        return;\n    };//}}}\n    @action\n    async export() {//{{{\n        const me = this;\n        return (\n            me.isSingleton ? Object.values(await super.export())[0]\n            : me.isCheckbox ? !!me.targetNode.checked\n            : me.targetNode.value\n        );\n    };//}}}\n    @action\n    async import({data = \"\"}) {//{{{\n        const me = this;\n        if (me.isSingleton) {\n            return await super.import({data: Object.fromEntries(\n                [[Object.keys(me.children)[0], data]]\n            )});\n        } else if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else {\n            me.targetNode.value = data;\n        };\n        // me.targetNode.dispatchEvent(\n        //     new customEvent(\"change\", {})\n        // );\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export()\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async empty() {//{{{\n        const me = this;\n        await me.import({data: \"\"});\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    async export() {//{{{\n        const data = await super.export();\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    async import({data = null}) {//{{{\n        const typename = typeof data;\n        return await super.import({data:(\n            typename == \"number\" ? data\n            : typename == \"string\"\n                && data.length\n                && ! isNaN(data)\n                ? Number(data)\n            : null\n        )});\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    async export() {//{{{\n        const data = await super.export();\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    async import({data = null}) {//{{{\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        return await super.import({data:(\n            isNaN(value) ? null\n            : ISODate(value)\n        )});\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        const singleton = me.parent.children[me.name];\n        if (singleton) {\n            me.targetNode.setAttribute(\"name\", singleton.sharedNodeName);\n            singleton.radioButtons.push(me.targetNode);\n            return {}; // Not a field.\n        } else {\n            // Provide unique name for DOM navigation to work properly:\n            me.sharedNodeName = randomId();\n            me.targetNode.setAttribute(\"name\", me.sharedNodeName);\n            me.radioButtons = [\n                me.targetNode\n            ];\n        };\n        return me;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value;\n    };//}}}\n    @action\n    async import({data = null}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) selected.checked = true;\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","registerEvHandler","evList","evType","evHandler","me","this","has","set","get","push","bind","events","events_decorator","target","_ref","kind","eventEnebledTarget","constructor","optionsSrc","options","onOptionCallbacks","key","value","Object","entries","match","substring","_len","arguments","length","args","Array","_key","super","ImRoot","is","root","Map","onLocal","onAll","on","evt","handler","listenLevel","emit","evData","handlers","defaultPrevented","propagationStopped","preventDefault","stopPropagation","legacy","disEnhance","targetNode","tagName","toLowerCase","addEventListener","event","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","wild2regex","wname","RegExp","replace","errors","renderError","Error","code","message","path","stack","split","slice","join","inferType","node","parentComponent","type","String","getAttribute","_SmarkComponent","SmarkComponent","static","_initClass","_applyDecs","c","property_name","undefined","parent","validName","nameGenerator","counter","names","n0","trim","actions","selector","types","setNodeOptions","parents","iterator","current","autoId","inherittedOption","setRendered","genId","p","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","onRendered","cbk","getNodeOptions","defaultOptions","dataset","opt","JSON","parse","err","action","stringify","enhance","ctrl","getComponent","parentElement","closest","getPath","map","name","reverse","find","base","parts","filter","x","firstWildcardPos","findIndex","re_pattern","pivotPath","restPath","pivot","pivotChilds","child","_ref2","flat","Infinity","reduce","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","actionNames","myCurrentActions","actionKeys","Set","returnAll","tgg","querySelectorAll","getTriggerArgs","context","updateId","newId","values","focus","fname","targetFieldNode","SmarkField","_isField","createType","controller","prototype","hotKeys_handler","form","revealed","onKeydown","onKeyup","onFocusout","onFocusin","ev","reveal","ctrlKey","targettedTrigger","t","hotkey","click","removeAttribute","component","activeContexts","activeContextsSet","candidateTriggers","lv","tg","sort","ta","tb","usedKeys","candidate","disabled","setAttribute","add","beforeEvent","afterEvent","action_decorator","targetMtd","addInitializer","registerAction","trigger","triggerArgs","onTriggerRender","disable","enable","actionSpec","contextPath","targetPath","otherOptions","actionName","targetType","isSameNode","origin","async","onTriggerClick","triggerComponent","mtd","data","getRoots","isTop","parentNode","n","e","makeRoom","element","pixels","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","label","labelArgs","getLabelArgs","candidates","found","childName","targetComponent","foldable","foldable_decorator","_initProto","foldableTarget","retv","fold","operation","folded","wasFolded","style","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","_form","newItem","export","fromEntries","all","import","dataConstructor","_ref3","await","isEmpty","empty","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","unlock","mutex","method_mutex_generator","muxName","mutex_decorator","muxed_target","call","error","sortable","list_sortable_decorator","_moveDecs","sortableTarget","itemTpl","dragSource","dragDest","move","from","to","fromi","Number","toi","newChunk","i","splice","inc","moveMethod","updateTriggers","min_items","failback","max_items","smartdisabling","list_smartdisabling_decorator","smartdisablingClass","smartdisablingMethod","_list","makeNonNavigable","list","_exportDecs","_addItemDecs","_removeItemDecs","max","numChilds","querySelector","tplOptions","of","addItem","innerText","remove","rest","stripEmpties","min","removeItem","position","autoscroll","newItemTarget","cloneNode","onRenderedCbks","after","before","appendChild","offsetHeight","moveTarget","keep_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","onRemovedCbks","oldItemTarget","onRemoved","count","input","isSingleton","isCheckbox","numFields","keys","checked","number","targetTag","isNaN","typename","re_timePart","parseDateStr","str","Date","NaN","ISODate","toISOString","date","radio","singleton","sharedNodeName","radioButtons","r","selected","SmarkForm","customActions","formOptions"],"mappings":"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"}