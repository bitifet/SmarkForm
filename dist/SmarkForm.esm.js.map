{"version":3,"file":"SmarkForm.esm.js","sources":["../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/lib/helpers.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/decorators/export_to_target.deco.js","../src/decorators/import_from_target.deco.js","../src/types/form.type.js","../src/types/list.decorators/smartdisabling.deco.js","../src/decorators/mutex.deco.js","../src/types/list.decorators/sortable.deco.js","../src/types/list.type.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/types/color.type.js","../src/main.js"],"sourcesContent":["// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nconst supportedFieldEventTypes = [\n    \"keydown\", \"keyup\", \"keypress\",\n    \"beforeinput\", \"input\", \"change\",\n    \"focus\", \"blur\",\n    \"click\", \"dblclick\", \"contextmenu\",\n    \"mousedown\", \"mouseup\", \"mousemove\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\",\n    \"focusin\", \"focusout\",\n\n    // \"select\", \"dragstart\", \"dragend\", \"dragover\", \"dragenter\", \"dragleave\", \"drop\",\n    // \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\",\n    // \"wheel\", \"scroll\", \"resize\",\n    // \"copy\", \"cut\", \"paste\",\n];\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\n\nexport const events = function events_decorator(targetComponentType, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnabledTarget extends targetComponentType {\n            constructor(target, optionsSrc, ...args) {// {{{\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                if (! me.eventHooks) me.eventHooks = {}; // Ensure eventHooks is defined.\n                const ImRoot = Object.is(me, me.root);\n                me[sym_local_events] = new Map();\n                if (ImRoot) me.root[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me.root, me.root[sym_all_events]);\n                me.on = me.onLocal; // Handy and readable alias for local events.\n\n                // Field events detection:\n                if (ImRoot) {\n                    for (const evType of supportedFieldEventTypes) {\n                        me.targetNode.addEventListener(evType, ev=>{\n                            const targetComponent = me.getComponent(ev.target);\n                            const {targetNode} = targetComponent;\n\n\n                            // TODO: Implement per-component event hooks to be called here and being able to be preventdefaulted.\n                            const evData = {\n                                type: evType,\n                                originalEvent: ev,\n                                target: targetComponent,\n                                targetNode,\n                            };\n\n                            const eventHook = targetComponent.eventHooks[evType];\n\n                            if (\n                                targetComponent.emit(evType, evData)  // Not default prevented\n                                && typeof eventHook == \"function\"     // Has a hook for this event\n                            ) eventHook.call(targetComponent, evData);\n\n                        });\n                    };\n                };\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };// }}}\n            async emit(evType, evData) {// {{{\n                const me = this;\n                const handlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me.root[sym_all_events].get(evType) || []),\n                ];\n                let defaultPrevented = false;\n                if (handlers.length) {\n                    let propagationStopped = false;\n                    evData.preventDefault = () => defaultPrevented = true;\n                    evData.stopPropagation = () => propagationStopped = true;\n                    for (const handler of handlers) {\n                        if (propagationStopped) break;\n                        await handler(evData);\n                    };\n                };\n                return ! defaultPrevented;\n            };// }}}\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            if (parentComponent.isSingleton) return parentComponent.options.type;\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                case \"color\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                if (me.parent.isSingleton) return \"\";\n                    // Singleton target components are unnamed.\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        const me = this;\n        let base = me;\n        if (base.name === \"\" && base.parent.isSingleton) base = base.parent;\n             // Always detect singleton fields instead of their child.\n        path = String(path); // Allow numbers (arrays simply won't match).\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            (current, name)=>{\n                if (current === undefined) return;   // No match.\n                if (name == \"..\") return current.parent;  // Go up one level.\n                if ( // Special syntax for list siblings (.+n / .-n)\n                    name[0] == \".\"\n                ) {\n                    if (name == \".\") return current; // Current node.\n                    if (! current.parent) return; // Root node => no siblings.\n                    const delta = parseInt(name.slice(1));\n                    if (isNaN(delta)) return; // Invalid sibling syntax.\n                    if (current.parent.options.type == \"list\") {\n                        const n = parseInt(current.name) + delta\n                        if (! isNaN(n)) return current.parent.children[n];\n                    } else {\n                        const keys = Object.keys(current.parent.children);\n                        const currentPosition = keys.findIndex(key=>key==current.name);\n                        const newKey = keys[currentPosition + delta];\n                        return current.parent.children[newKey];\n                    };\n                } else {\n                    return current.children[name];\n                };\n            }\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of me.parents\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (! Object.is(options.context, me)) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        if (me.targetFieldNode) me.targetFieldNode.focus();\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        return new errors.renderError(code, message, me.getPath());\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n            if (this.options.hasOwnProperty(\"value\")) {\n                if (this.targetNode.getAttribute(\"value\") !== null) { // Conflict\n                    throw me.renderError(\n                        'VALUE_CONFLICT'\n                        , `Initial value specied both as \"value\" option and HTML \"value\" attribute.`\n                    );\n                };\n                this.targetNode.setAttribute(\"value\", this.options.value);\n            };\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        const onStatusChange = hotKeys_handler.onStatusChange.bind(me);\n        me.form.targetNode.addEventListener(\"keydown\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"keyup\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"focusout\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"focusin\", onStatusChange, true);\n    };\n    static onStatusChange(ev) {\n        const me = this;\n\n        // Deactivation:\n        if (ev.type == \"keyup\") {\n            if (ev.key == \"Control\") me.reveal(false);\n            return;\n        };\n\n        // Focus leave:\n        if (ev.type == \"focusout\") {\n            if (me.revealed !== null) {\n                me.reveal(); // Unreveal, but keep activated.\n            };\n            return;\n        };\n\n        // Focus enter:\n        if (ev.type == \"focusin\" && me.revealed === null) {\n            return; // No hotkeys revealed.\n            // Otherwise behave as new activation\n        };\n\n        // ev.type is \"keydown\" or \"focusin\"\n        const ctrlKey = ev.ctrlKey || ev.key == \"Control\";\n        const altKey = ev.altKey || ev.key == \"Alt\";\n        const activation = (\n            // Pressing ctrl key with or without alt key\n            ctrlKey && (ev.key == \"Control\" || ev.key == \"Alt\")\n            // Reentering focus after some action without deactivation\n            || ev.type == \"focusin\"\n        );\n\n        // (Re)activation:\n        if (activation) {\n            const level = altKey ? 2 : 1;\n            // Activate and reveal:\n            return void me.reveal(ev.target, level);\n        };\n\n        // Hotkey stroke:\n        if (me.revealed instanceof Array) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                // Prevent default and stop propagation:\n                //   Even if disabled to avoid weird behaviour with repetitions\n                //   (Ex. using \"+\" to add items to a list would zoom in\n                //   some browsers when max_items is reached).\n                ev.preventDefault();\n                ev.stopPropagation();\n                // Perform the action:\n                if (! targettedTrigger.targetNode.disabled) {\n                    // Unless trigger is disabled\n                    targettedTrigger.targetNode.click();\n                };\n            };\n        };\n\n    };\n    reveal(target, level = 1) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = [component, ...component.parents];\n            const activeContextsSet = new Set(activeContexts);\n\n            const candidateTriggers = activeContexts\n                .map((ctx, distance)=>(\n                    ctx.getTriggers('*')    // All triggers.\n                    .map(tg=>({\n                        tg,\n                        distance,   // Number of ancestors levels.\n                        args: tg.getTriggerArgs() || {},\n                        hotkey: String(tg.options.hotkey || \"\"),\n                    }))\n                ))\n                .flat()\n                .filter(({args, hotkey})=>(\n                    hotkey.length\n                    && activeContextsSet.has(args.context)\n                ))\n                .sort((ta,tb)=>(\n                    activeContextsSet.has(tb.args.target)\n                    - activeContextsSet.has(ta.args.target)\n                    - tb.distance\n                    + ta.distance\n                ))\n            ;\n\n            const seen = new Map(); // hotkey => [times seen, distance from target]\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                const [times, distance] = seen.get(candidate.hotkey) || [1, 0];\n                if (times < level) {\n                    seen.set(candidate.hotkey, [times + 1, candidate.distance]);\n                    continue; // Level not reached.\n                };\n                if (times > level) {\n                    continue; // Used by more preferent tg.\n                };\n                if (candidate.distance > distance) { // Don't pick more than one per \"ancestory\" level.\n                    if (! candidate.tg.targetNode.disabled) {\n                        candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                    };\n                    me.revealed.push(candidate.tg); // Let stroke detection know it matched.\n                    // Avoid activating the following candidates by \"oveflowing\" their times seen count:\n                    // (UX): Do it even if disabled for behavioral consistency...\n                    seen.set(candidate.hotkey, [times + 1, candidate.distance]);\n                };\n            };\n\n        };\n\n    };\n};\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nconst beforeEvent = Symbol(\"beforeEventName\");\nconst afterEvent = Symbol(\"afterEventName\");\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        this.actions[name] = targetMtd.bind(this);\n        this.actions[name][beforeEvent] = `BeforeAction_${name}`;\n        this.actions[name][afterEvent] = `AfterAction_${name}`;\n    });\n};\n\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        const {\n            // property: local variable\n            action: actionSpec,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! actionSpec) return; // Not a trigger component.\n\n        // Allow binding triggers to specific component types:\n        // (Syntax \"type:action\")\n        let [actionName, targetType] = actionSpec.split(\":\").reverse();\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>{\n                if (targetType && p.options.type != targetType) return false;\n                if (typeof p.actions[actionName] != \"function\") return false;\n                return true;\n            })\n        );\n\n        const target = (\n            targetPath ? context?.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : (\n                parents\n                    .slice(1) // Skip self\n                    .find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n                || null\n            )\n        );\n\n        return {\n            action: actionName,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    if (await me.emit(mtd[beforeEvent], options)) {\n        const data = await mtd(options);\n        me.emit(mtd[afterEvent], {...options, data});\n    };\n};\n\n\n","\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {//{{{\n    return Math.random().toString(36).substring(2);\n};//}}}\n\nexport function parseJSON(str) {//{{{\n    try {\n        return JSON.parse(str);\n    } catch (err) {};\n};//}}}\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\nimport {getRoots} from \"../lib/helpers.js\";\n\n// TODO:\n// =====\n//\n//   🚀 Add support for (smarkform) fields contained in the label.\n//      👉 Now we can just not enhance the label (<label>Bla bla bla<input\n//         data-smark></label>) and it will (in this case natively) work.\n//      👉 ...but this does not allow us to use other SmarkForm fields such as\n//         forms and lists (since they can contain more than one native field\n//         which is not allowed by <label> tag.\n//      💡 But we can use different tag (with {data-smark=\"label\"}) and just\n//         create the native <label> tag around the text.\n\nexport class label extends SmarkComponent {\n    constructor(node, {allow_select = false, ...options}, ...args){\n        delete options.name; // Labels are always unnamed.\n        return super(node, {allow_select, ...options}, ...args);\n    };\n    async render(){\n        const me = this;\n        // Enhance acctions:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                throw me.renderError(\n                    'FIELD_IN_LABEL'\n                    , `Non action components not allowed in labels, found ${newItem.name} in form ${me.getPath()}.`\n                );\n            };\n        };\n        me.parent.onRendered(()=>{\n            const labelArgs = me.getLabelArgs();\n            const {targetFieldNode} = labelArgs.target || {};\n            if (targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! targetFieldNode.id) { // Ensure targetted field has an Id\n                    targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", targetFieldNode.id);\n            };\n            if (! me.options.allow_select) {\n                // Make labels non-selectable unless \"allow_select\" option\n                // is set  to true.\n                me.targetNode.style[\"user-select\"] = \"none\";\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold({operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold({//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n            };//}}}\n        };\n    };\n};\n","// src/decorators/export_to_target.deco.js\n// =======================================\n\nexport const export_to_target = function export_to_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function export_mtd({target, ...options}={}) {\n            const me = this;\n            const value = await method.call(me, options);\n            try {\n                await target.import({data: value});\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return value;\n        };\n    };\n};\n","// src/decorators/import_from_target.deco.js\n// =========================================\n\nexport const import_from_target = function import_from_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function import_mtd({target, data, ...options}={}) {\n            const me = this;\n            try {\n                data = await target.export();\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return await method.call(me, {data, ...options});\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {getRoots, parseJSON} from \"../lib/helpers.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export()]\n            ))\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = {}, focus = true} = {}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (\n            dataConstructor !== {}.constructor // Not a plain object\n            && ! (data = parseJSON(data))      // Neither a (valid) JSON string\n        ) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object or vailid JSON for form import, ${dataConstructor.name} given.`\n        );\n        const retv = Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import({data: data[key], focus});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n        if (focus) me.focus();\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: {}, focus});\n    };//}}}\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_decorator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.templates.item.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ];\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ];\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n                me.renum();\n            };//}}}\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\n// TODO:\n// =====\n//\n// 👉 Keep first item in place:\n//    -------------------------\n//     \n//    For lists allowing 0 items, make first element disabled and not visible\n//    instead of completely removing from DOM.\n//\n//    This would avoid lots of visual layout issues.\n//\n\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\nimport {makeRoom, getRoots, parseJSON} from \"../lib/helpers.js\";\n\n\n// Private helpers:\n// ----------------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\nfunction loadTemplates(me) {//{{{\n    const templates = {};\n    for (const child of [...me.targetNode.children]) {\n        const {role = \"item\"} = parseJSON(child.getAttribute(\"data-smark\")) || {};\n        switch (role) {\n            case \"empty_list\":\n            case \"header\":\n            case \"separator\":\n            case \"last_separator\":\n            case \"footer\":\n            case \"placeholder\": // (Only with max_items defined)\n                child.setAttribute(\"data-role\", role);\n            case \"item\": // (Default)\n                if (templates[role] !== undefined) throw me.renderError(\n                    'LIST_DUPLICATE_TEMPLATE'\n                    , `Repated list template role ${role}`\n                );\n                templates[role] = child;\n                templates[role].remove();\n            break;\n        };\n    };\n    if (me.targetNode.children.length) {\n        const {role = \"(unspecified)\"} = parseJSON(\n            me.targetNode.children[0].getAttribute(\"data-smark\")\n        ) || {};\n        throw me.renderError(\n            'LIST_UNKNOWN_TEMPLATE_ROLE'\n            , `Unknown list template role ${role}`\n        );\n    };\n    if (! templates.last_separator) {\n        templates.last_separator = templates.separator; // (If any)\n    };\n    if (\n        templates.item.querySelector(\"[id]\") !== null // Contains IDs\n    ) throw me.renderError(\n        'LIST_CONTAINS_ID'\n        , `List components are not allowed to contain elements with 'id' attribute`\n    );\n    return templates;\n};//}}}\n\n\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async #appendChild(child) {//{{{\n        const me = this;\n        if (me.templates.header) {\n            me.templates.header.after(child);\n        } else {\n            me.targetNode.appendChild(child);\n        };\n    };//}}}\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        me.templates = loadTemplates(me);\n        me.placeholders = [];\n        const tplOptions = me.getNodeOptions(\n            me.templates.item\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        for (const tpl of [\n            me.templates.header,\n            me.templates.footer,\n        ]) if (!! tpl) {\n            me.targetNode.appendChild(tpl);\n            // Enhance childs:\n            for (\n                const node\n                of getRoots(tpl, me.selector)\n            ) {\n                const newItem = await me.enhance(node);\n                if (!! newItem?._isField) {\n                    throw me.renderError(\n                        'FIELD_IN_WRONG_LIST_TEMPLATE'\n                        , `Fields are not allowed in list's template roles other than item.`\n                    );\n                };\n            };\n        };\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem();\n\n            // Initialize \"count\" actions and reinject empty_list template:\n            if (me.min_items == 0) await me.renum();\n\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n        return;\n    };//}}}\n    onTriggerRender({action, origin, context}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const emptyChilds = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) {\n                if (list.length < me.min_items) emptyChilds.push(child);\n                continue;\n            };\n            list.push(await child.export())\n        };\n        for (let i=0; list.length < me.min_items; i++) {\n            list.push(await emptyChilds[i].export());\n        };\n        return list;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = [], focus} = {}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! (data instanceof Array)) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem(); // Make room on demand\n            await me.children[i].import({data: data[i], focus});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem();\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].clear();\n        if (focus) me.focus();\n        return; // await me.export();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            source = null,\n            target,\n            position = \"after\",\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            failback,\n        } = options;\n        if (position != \"after\" && position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${position}`\n        );\n        if (me.children.length >= me.max_items) {\n            switch (failback) {\n                case \"none\":\n                    break;\n                case \"throw\":\n                default:\n                    me.emit(\"error\", {\n                        code: 'LIST_MAX_ITEMS_REACHED',\n                        message: `Cannot add items over max_items boundary`,\n                        options,\n                    });\n            };\n            return;\n        };\n        if (me.children.length && ! target) target = ( // Auto target:\n            position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.templates.item.cloneNode(true);\n        //}}}\n        // addItem event emitting:{{{\n        const onRenderedCbks = [];\n            // Allow for handy callback instead of two separate event handlers\n        await me.emit(\"addItem\", {\n                action,\n                origin,\n                context,\n                target,  // <--- Effective target.\n                position,\n                newItemTarget,\n                options, // <- Original options (including target)\n                onRendered: cbk => onRenderedCbks.push(cbk),\n        });\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            await me.#appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(target.targetNode)) return child;\n                    if (position == \"after\") {\n                        child.targetNode.after(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [child, newItem]; // Right order, flatted later...\n                    } else {\n                        child.targetNode.before(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [newItem, child]; // Right order, flatted later...\n                    };\n                })\n            ))\n                .flat()\n            ;\n        };\n        await me.renum();\n        //}}}\n        // Copy data from source component if specified:{{{\n        if (source) {\n            const sourceComponent = newItem.find(source);\n            if (!! sourceComponent) {\n                const data = await sourceComponent.export();\n                newItem.import({data});\n            };\n        };\n        //}}}\n        // Autoscroll handling:{{{\n        if (autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : autoscroll == \"self\" ? newItem\n                : autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        // Execute \"onRendered\" callbacks:{{{\n        onRenderedCbks.forEach(cbk=>cbk(newItem));\n        //}}}\n        if (me.renderedSync) newItem.focus();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(options = {}) {//{{{\n        const me = this;\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            keep_non_empty,\n            failback,\n        } = options;\n        if (! target) {\n            if (keep_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                target = t;\n                break;\n            };\n            if (! target) {\n                target = me.children[me.children.length - 1];\n                keep_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            target instanceof Array ? target\n            : [target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.clear();\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (keep_non_empty && ! await currentTarget.isEmpty()) continue;\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                autoscroll == \"self\" ? child\n                                : autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n\n                        oldItem = child;\n\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n\n                        return false;\n                    };\n                    return true;\n                })\n            ;\n            // removeItem event emitting:{{{\n            const onRemovedCbks = [];\n                // Allow for handy callback instead of two separate event handlers\n            await me.emit(\"removeItem\", {\n                action,\n                origin,\n                context,\n                target: currentTarget,  // <--- Effective target.\n                oldItem,                 // Child going to be removed.\n                oldItemTarget: oldItem.targetNode, // Its target (analogous to addItem event).\n                options,\n                onRemoved: cbk => onRemovedCbks.push(cbk),\n            });\n            //}}}\n\n            oldItem.targetNode.remove();\n            me.children = newChildren;\n            await me.renum();\n\n            // Execute \"onRemoved\" callbacks:{{{\n            onRemovedCbks.forEach(cbk=>cbk());\n            //}}}\n\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n\n        };\n\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: [], focus});\n    };//}}}\n    @action\n    count({delta = 0} = {}) {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length + Number(delta);\n    };//}}}\n    @action\n    position({target, offset = 1} = {}) {//{{{\n        return Number(target?.name) + Number(offset);\n    };//}}}\n    async renum(){//{{{\n        const me = this;\n\n        // Update child index:\n        for (const i in me.children) {\n            me.children[i].name = i;\n            me.children[i].updateId();\n        };\n\n        // Handle separators:\n        if (\n            !! me.templates.separator\n            || !! me.templates.last_separator\n        ) for (const i in me.children) {\n\n            const isLastNode = i >= me.children.length - 1;\n            const sepRole = (\n                i <= 0 ? null\n                : isLastNode ? \"last_separator\"\n                : \"separator\"\n            );\n\n            const currentNode = me.children[i].targetNode;\n            const prevNode = currentNode.previousElementSibling;\n            const prevNode_role = prevNode && prevNode.getAttribute(\"data-role\");\n            if (prevNode_role !== sepRole) {\n                if (!! prevNode_role) prevNode.remove();\n                const sepTemplate = me.templates[sepRole];\n                if (!! sepRole && !! sepTemplate) currentNode.parentElement.insertBefore(sepTemplate.cloneNode(true), currentNode);\n            };\n            if (isLastNode) { // LastItem\n                const nextNode = currentNode.nextElementSibling;\n                if (!! nextNode) nextNode.remove();\n            };\n\n        };\n\n        // Handle empty_list template:\n        if (me.templates.empty_list) {\n            if (me.children.length) {\n                me.templates.empty_list.remove(); // (from DOM)\n            } else {\n                await me.#appendChild(me.templates.empty_list);\n            };\n        };\n\n        // Handle placeholder template:\n        if (\n            me.templates.placeholder\n            && !! me.max_items // (Only if we have a finite padding limit)\n        ) {\n            let placeHoldersCount = (me.max_items || 0) - me.children.length;\n            if (\n                placeHoldersCount > 0\n                && me.children.length === 0\n                && !! me.templates.empty_list\n            ) placeHoldersCount--; // Discount the hole occupied by empty_list\n            if (me.placeholders.length < placeHoldersCount) {\n                for (let i = me.placeholders.length; i < placeHoldersCount; i++) {\n                    const placeholder = me.templates.placeholder.cloneNode(true);\n                    if (me.templates.footer) {\n                        me.templates.footer.before(placeholder);\n                    } else {\n                        me.targetNode.appendChild(placeholder);\n                    };\n                    me.placeholders.push(placeholder);\n                };\n            } else { // me.placeholders.length >= placeHoldersCount\n                for (let i = me.placeholders.length; i > placeHoldersCount; i--) {\n                    me.placeholders.pop().remove();\n                };\n            };\n        };\n\n        // Update counter triggers:\n        me.getTriggers(\"position\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.position(args);\n        });\n        me.getTriggers(\"count\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.count(args);\n        });\n    };//}}}\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nexport class input extends form {\n    eventHooks = {\n        keydown(ev) {\n            if (ev.originalEvent.key === \"Enter\") {\n                const nextField = this.find(\".+1\");\n                console.log(\"Input keydown event triggered.\", this, nextField);\n                if (nextField) {\n                    nextField.focus();\n                    ev.originalEvent.preventDefault();\n                };\n            };\n        },\n    };\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const sons = Object.values(me.children);\n            if (sons.length != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${sons.length} found.`\n            );\n            const son = sons[0];\n            if (me.options.type !== son.options.type) throw me.renderError(\n                'SINGLETON_TYPE_MISMATCH'\n                , `Singleton type (${me.options.type})`\n                + ` does not match child field type (${son.options.type}).`\n            );\n            me.targetFieldNode = son.targetNode;\n        } else {\n            me.targetFieldNode = me.targetNode;\n        };\n        return;\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        let retv;\n        if (me.isSingleton) {\n            retv = Object.values(await super.export())[0];\n        } else if (me.isCheckbox) {\n            retv = !! nodeFld.checked;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n            && nodeFld.options[nodeFld.selectedIndex]?.getAttribute(\"value\") === null\n        ) {\n            // Keep fallback working when encoding is json and value attribute is not set.\n            // (and don't expetct <opton> inner text to be JSON)\n            retv = JSON.stringify(nodeFld.options[nodeFld.selectedIndex].text);\n        } else {\n            retv = nodeFld.value;\n        };\n        return (\n            me.options.encoding === \"json\" ? parseJSON(retv) || null\n            : retv\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = \"\", focus = true} = {}) {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        if (\n            typeof data === \"object\"\n            && me.options.type === \"input\"    // Not in a derivated field types\n            || me.options.encoding === \"json\" // JSON encoding specified\n        ) {\n            data ||= null;\n            const isTextarea = nodeFld.tagName.toUpperCase() === \"TEXTAREA\";\n            data = (\n                isTextarea ? JSON.stringify(data, null, 4) // Pretty print\n                : JSON.stringify(data) // Compact print\n            ) || \"\";\n        };\n        if (me.isSingleton) {\n            return await super.import({data: Object.fromEntries(\n                [[Object.keys(me.children)[0], data]]\n            ), focus});\n        } else if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n        ) {\n            me.targetNode.value = (data || \"null\"); // Faster, but won't work if value attribute is not set.\n            if (nodeFld.selectedIndex === -1) {\n                // Fallback when value attribute is not set.\n                const parsed = parseJSON(data) || \"\";\n                const idx = Array.from(nodeFld.options).findIndex(\n                    opt => opt.text === parsed\n                );\n                if (idx !== -1) nodeFld.selectedIndex = idx;\n            };\n        } else {\n            me.targetNode.value = data;\n        };\n        if (focus) me.focus();\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export()\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        await me.import({\n            data: me.options.encoding === \"json\" ? null : \"\",\n            focus,\n        });\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        const typename = typeof data;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const retv =  await super.import({data:(\n            typename == \"number\" ? data\n            : typename == \"string\"\n                && data.length\n                && ! isNaN(data)\n                ? Number(data)\n            : null\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        const retv = await super.import({data:(\n            isNaN(value) ? null\n            : ISODate(value)\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        let master = me.parent.children[me.name];\n        let retv = me;\n        if (master) {\n            me.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons.push(me.targetNode);\n            retv = {}; // Not the master field.\n        } else {\n            master = me;\n            // Provide unique name for DOM navigation to work properly:\n            master.sharedNodeName = randomId();\n            master.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons = [\n                master.targetNode\n            ];\n        };\n        let changeEventHandler = onRadioInteraction.bind(master);\n        me.targetNode.addEventListener(\"click\", changeEventHandler);\n        me.targetNode.addEventListener(\"keydown\", changeEventHandler);\n        return retv;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value || null;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) {\n            selected.checked = true;\n        } else {\n            this.radioButtons.forEach(r=>r.checked = false);\n        };\n        if (focus) this.focus();\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\nfunction onRadioInteraction(event) {//{{{\n    if (\n        event.type === \"click\"\n        || event.type === \"keydown\" && event.code === \"Delete\"\n        // NOTE: Some browsers also send fake click events for toggling radio\n        //       buttons.\n        //       This approach avoids to interfere with that behavior while\n        //       ensuring a consistent keyboard resetting method (through the\n        //       Delete key).\n    ) {\n        const me = this;\n        let checked = true; // All raddio buttons become checked on click.\n        const lastSelection = Object.is(me.lastClicked?.target, event.target);\n        if (lastSelection) checked = (\n            ! me.lastClicked.checked    // Click  => Toggle\n            && event.type !== \"keydown\" // Delete => Reset\n        );\n        me.lastClicked = {\n            target: event.target,\n            checked,\n        };\n        event.target.checked = checked;\n    };\n};//}}}\n","// types/color.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nconst re_color = /^#([a-f0-9]{3}){1,2}$/i;\nconst disabled_style = `\n    opacity: .5;\n    background: repeating-linear-gradient(\n            45deg,\n            black,\n            black 10px,\n            white 10px,\n            white 20px\n        ),\n        black;\n    background-blend-mode: difference;\n`;\nexport class color extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n\n        if (me.isSingleton) return; // (Only for real field)\n\n        // Check targetField's type attribute:\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"color\").toLowerCase() != \"color\"\n        ) throw me.renderError(\n            'NOT_A_COLOR_FIELD'\n            , `Color inputs require an INPUT tag of type \"color\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"color\"; // Autofill\n\n        // Iniitialize me.isDefined flag:\n        const valueAttr = me.targetFieldNode.getAttribute(\"value\");\n        me.isDefined = (\n            valueAttr !== null         // value property not defined\n            && valueAttr.trim() !== \"\" // value property defined (string)\n        );\n\n        // Remember original \"style\" attribute and update if appropriate:\n        me.defaultStyleAttr = me.targetFieldNode.getAttribute(\"style\") + \";\";\n        if (! me.isDefined) me.targetFieldNode.setAttribute(\n            \"style\"\n            , me.defaultStyleAttr + disabled_style\n        );\n\n        // Handle me.isDefined set:\n        const resetDefined = ev=>{\n            if (\n                ev.code    !== \"Enter\"\n                && ev.Code !== \"Space\"\n                && ev.code !== undefined // ev.type must be \"click\" or \"change\"\n                    // && ev.type !== \"click\" // Click event\n                    // && ev.type !== \"change\" // Change event\n            ) return;\n            me.isDefined = true;\n            me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n        };\n        me.targetFieldNode.addEventListener(\"keydown\", resetDefined);\n        me.targetFieldNode.addEventListener(\"click\", resetDefined);\n        me.targetFieldNode.addEventListener(\"change\", resetDefined);\n\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        let data = await super.export(...args);\n        if (! me.isSingleton) data = (\n            me.isDefined && data.match(re_color) ? data.toLowerCase()\n            : null\n        );\n        return data;\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (\n            ! me.isSingleton // Only for real field\n        ) {\n            if (\n                data === null              // Explicit null value\n                || ! data.match(re_color)  // Invalid color value\n            ) {\n                me.isDefined = false;\n                me.targetFieldNode.setAttribute(\n                    \"style\"\n                    , me.defaultStyleAttr + disabled_style\n                );\n            } else {\n                me.isDefined = true;\n                me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n            };\n        };\n        const value = await super.import({data, focus});\n        return (\n            me.isDefined ? value\n            : null\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\nimport {color} from \"./types/color.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n    color,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","supportedFieldEventTypes","registerEvHandler","evList","evType","evHandler","has","set","get","push","bind","this","events","targetComponentType","_ref","kind","constructor","target","optionsSrc","options","onOptionCallbacks","key","value","Object","entries","match","substring","_len","arguments","length","args","Array","_key","super","me","eventHooks","ImRoot","is","root","Map","onLocal","onAll","on","targetNode","addEventListener","ev","targetComponent","getComponent","evData","type","originalEvent","eventHook","emit","call","evt","handler","listenLevel","handlers","defaultPrevented","propagationStopped","preventDefault","stopPropagation","legacy","disEnhance","tagName","toLowerCase","event","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","errors","Error","code","message","path","stack","split","slice","join","_SmarkComponent","SmarkComponent","static","_initClass","_applyDecs","c","property_name","undefined","parent","validName","counter","isSingleton","names","n0","trim","actions","selector","types","setNodeOptions","renderError","parents","iterator","current","autoId","inherittedOption","setRendered","genId","p","replace","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","onRendered","cbk","getNodeOptions","node","defaultOptions","dataset","opt","JSON","parse","err","action","parentComponent","String","getAttribute","inferType","stringify","enhance","ctrl","parentElement","closest","getPath","map","name","reverse","find","base","parts","filter","x","firstWildcardPos","findIndex","re_pattern","wname","RegExp","pivotPath","restPath","pivot","child","_ref2","flat","Infinity","reduce","delta","parseInt","isNaN","keys","currentPosition","newKey","n","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","myCurrentActions","actionKeys","Set","returnAll","tgg","querySelectorAll","getTriggerArgs","context","updateId","newId","values","focus","fname","targetFieldNode","SmarkField","_isField","hasOwnProperty","setAttribute","createType","controller","prototype","hotKeys_handler","form","revealed","onStatusChange","reveal","ctrlKey","altKey","level","targettedTrigger","t","hotkey","disabled","click","removeAttribute","component","activeContexts","activeContextsSet","candidateTriggers","ctx","distance","tg","sort","ta","tb","seen","candidate","times","beforeEvent","afterEvent","targetMtd","addInitializer","trigger","triggerArgs","onTriggerRender","disable","enable","actionSpec","contextPath","targetPath","otherOptions","actionName","targetType","isSameNode","origin","async","onTriggerClick","mtd","data","getRoots","isTop","parentNode","e","makeRoom","element","pixels","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","parseJSON","str","label","allow_select","newItem","labelArgs","getLabelArgs","style","candidates","found","childName","foldable","_initProto","retv","fold","operation","folded","wasFolded","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","export_to_target","method","import","error","import_from_target","export","_form","fromEntries","all","dataConstructor","isEmpty","clear","updateTriggers","min_items","failback","max_items","smartdisabling","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","mutex","muxName","unlock","sortable","_moveDecs","templates","item","dragSource","dragDest","move","from","to","fromi","Number","toi","newChunk","splice","moveMethod","renum","_list","list","_exportDecs","_addItemDecs","_removeItemDecs","appendChild","header","after","max","role","remove","last_separator","separator","querySelector","loadTemplates","placeholders","tplOptions","of","tpl","footer","i","addItem","emptyChilds","stripEmpties","min","removeItem","source","position","autoscroll","newItemTarget","cloneNode","onRenderedCbks","before","sourceComponent","offsetHeight","moveTarget","keep_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","onRemovedCbks","oldItemTarget","onRemoved","count","offset","isLastNode","sepRole","currentNode","prevNode","previousElementSibling","prevNode_role","sepTemplate","insertBefore","nextNode","nextElementSibling","empty_list","placeholder","placeHoldersCount","pop","innerText","input","keydown","nextField","console","log","isCheckbox","sons","son","nodeFld","checked","encoding","toUpperCase","selectedIndex","text","parsed","idx","number","targetTag","typename","re_timePart","parseDateStr","Date","NaN","ISODate","toISOString","date","radio","master","sharedNodeName","radioButtons","changeEventHandler","onRadioInteraction","r","selected","lastClicked","re_color","disabled_style","color","valueAttr","isDefined","defaultStyleAttr","resetDefined","Code","SmarkForm","customActions","formOptions"],"mappings":"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"}