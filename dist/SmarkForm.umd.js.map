{"version":3,"file":"SmarkForm.umd.js","sources":["../src/lib/helpers.js","../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/decorators/export_to_target.deco.js","../src/decorators/import_from_target.deco.js","../src/types/form.type.js","../src/types/list.decorators/smartdisabling.deco.js","../src/decorators/mutex.deco.js","../src/types/list.decorators/sortable.deco.js","../src/types/list.type.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/types/color.type.js","../src/main.js"],"sourcesContent":["\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {//{{{\n    return Math.random().toString(36).substring(2);\n};//}}}\n\nexport function parseJSON(str) {//{{{\n    try {\n        return JSON.parse(str);\n    } catch (err) {};\n};//}}}\n\nexport function createArrayPuller(parentStore) {//{{{\n    // Create an object that populates arrays to each accessed property\n    const arrayStore = {};\n    for (const prop in parentStore) {\n        arrayStore[prop] = [...parentStore[prop]]; // Copy existing arrays\n        // This allows to remove inherited properties individually if needed\n    }\n    // Dynamically create an array per each accessed property:\n    Object.defineProperty(arrayStore, '_dynamic', {\n      get() {\n        return new Proxy(this, {\n          get(target, prop) {\n            if (prop in target) {\n              return target[prop];\n            }\n            target[prop] = [];\n            return target[prop];\n          }\n        });\n      }\n    });\n    return arrayStore._dynamic;\n};//}}}\n\nexport function replaceWrongNode(targetNode, error) {// {{{\n    // Create the outer <div> element\n    const errorNode = document.createElement('div');\n    errorNode.setAttribute('title', error.message);\n    errorNode.setAttribute('style', \"display: inline-block; padding: .5em 1em; background: red; color: yellow; border-radius: 50% 0%\");\n    // Add the text with the error code\n    errorNode.appendChild(document.createTextNode(error.code));\n    // Create the inner clicable button\n    const clicableNode = document.createElement('span');\n    clicableNode.setAttribute('title', 'Log the error again');\n    clicableNode.setAttribute('style', 'cursor: pointer; font-weight: bold; background-color: white; color: red; border-radius: 50%; padding: 0 4px; margin-left: 8px;');\n    clicableNode.textContent = 'â†§';\n    clicableNode.addEventListener('click', () => {\n        console.error(error);\n    });\n    errorNode.appendChild(clicableNode);\n    // Replace the targetNode with the errorNode\n    targetNode.replaceWith(errorNode);\n};// }}}\n\n","// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nimport {createArrayPuller} from \"./helpers.js\";\n\nconst supportedFieldEventTypes = [\n    \"keydown\", \"keyup\", \"keypress\",\n    \"beforeinput\", \"input\", \"change\",\n    \"focus\", \"blur\",\n    \"click\", \"dblclick\", \"contextmenu\",\n    \"mousedown\", \"mouseup\", \"mousemove\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\",\n    \"focusin\", \"focusout\",\n\n    // \"select\", \"dragstart\", \"dragend\", \"dragover\", \"dragenter\", \"dragleave\", \"drop\",\n    // \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\",\n    // \"wheel\", \"scroll\", \"resize\",\n    // \"copy\", \"cut\", \"paste\",\n];\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\n\nexport const events = function events_decorator(targetComponentType, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnabledTarget extends targetComponentType {\n            constructor(target, optionsSrc, ...args) {// {{{\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                me[sym_local_events] = new Map();\n                me[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me, me[sym_all_events]);\n                me.on = me.onAll; // Handy alias for listening all events.\n\n                // Create event hooks object:\n                me.eventHooks = createArrayPuller(super.eventHooks);\n                    // eventHooks are eventHandlers provided by the component type.\n                    // They are processed after regular events if not default prevented.\n\n                // Field events redirection:\n                if (\n                    // Do it only once and from root component target:\n                    Object.is(me, me.root)\n                ) {\n                    for (const evType of supportedFieldEventTypes) {\n                        me.targetNode.addEventListener(evType, ev=>{\n                            const targetComponent = me.getComponent(ev.target);\n                            const evData = {\n                                type: evType,\n                                originalEvent: ev,\n                                context: targetComponent,\n                                preventDefault: ev.preventDefault.bind(ev),\n                                stopPropagation: ev.stopPropagation.bind(ev),\n                                stopImmediatePropagation: ev.stopImmediatePropagation.bind(ev),\n                            };\n                            targetComponent.emit(evType, evData);\n                        }, true); // Use capture phase\n                    };\n                };\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };// }}}\n            async emit(evType, evData, preventable = true) {// {{{\n                const me = this;\n                let propagationStopped = false;\n                let immediatePropagationStopped = false;\n                const event = {\n                    ...evData,\n                    type: evType,\n                    defaultPrevented: false,\n                };\n                if (preventable) {\n                    event.preventDefault = () => event.defaultPrevented = true;\n                    event.stopPropagation = () => propagationStopped = true;\n                    event.stopImmediatePropagation = () => immediatePropagationStopped = true;\n                };\n                // Event target phase:\n                const targetHandlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me[sym_all_events].get(evType) || []),\n                ];\n                for (const handler of targetHandlers) {\n                    if (immediatePropagationStopped) break;\n                    await handler(evData);\n                };\n                // Events bubbling phase:\n                for (const parent of me.parents) {\n                    if (propagationStopped) break;\n                    const parentHandlers = parent[sym_all_events].get(evType) || [];\n                    for (const handler of parentHandlers) {\n                        if (immediatePropagationStopped) break;\n                        await handler(evData);\n                    };\n                }\n                // Event hooks (default behavior hooks)::\n                for (const eventHook of me.eventHooks[evType]) {\n                    // WARNING: eventHooks are called inconditionally!\n                    // They should check if event.defaultPrevented is set by themselves.\n                    // This may seem counter-intuitive and unhandy, but it will allow, for instance,\n                    // to implement a fake default prevention to \"change\" events (which are not natively cancelable) by restoring previous value.\n                    await eventHook(evData);\n                };\n                return ! event.defaultPrevented;\n            };// }}}\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\nimport {replaceWrongNode} from \"./helpers.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            if (parentComponent.isSingleton) return parentComponent.options.type;\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                case \"color\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //(implicit)//if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                if (me.parent.isSingleton) return \"\";\n                    // Singleton target components are unnamed.\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n            await me.emit(\"afterRender\", {\n                context: me\n            }, false);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    async unrender() {\n        const me = this;\n        await me.emit(\"beforeUnrender\", {\n            context: me\n        }, false);\n        me.targetNode.remove();\n    };\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        const me = this;\n        let base = me;\n        if (base.name === \"\" && base.parent.isSingleton) base = base.parent;\n             // Always detect singleton fields instead of their child.\n        path = String(path); // Allow numbers (arrays simply won't match).\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            (current, name)=>{\n                if (current === undefined) return;   // No match.\n                if (name == \"..\") return current.parent;  // Go up one level.\n                if ( // Special syntax for list siblings (.+n / .-n)\n                    name[0] == \".\"\n                ) {\n                    if (name == \".\") return current; // Current node.\n                    if (! current.parent) return; // Root node => no siblings.\n                    const delta = parseInt(name.slice(1));\n                    if (isNaN(delta)) return; // Invalid sibling syntax.\n                    if (current.parent.options.type == \"list\") {\n                        const n = parseInt(current.name) + delta\n                        if (! isNaN(n)) return current.parent.children[n];\n                    } else {\n                        const keys = Object.keys(current.parent.children);\n                        const currentPosition = keys.findIndex(key=>key==current.name);\n                        const newKey = keys[currentPosition + delta];\n                        return current.parent.children[newKey];\n                    };\n                } else {\n                    return current.children[name];\n                };\n            }\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of me.parents\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (! Object.is(options.context, me)) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        if (me.targetFieldNode) me.targetFieldNode.focus();\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        const targetNode = (\n            me.parent?.isSingleton ? me.parent.targetNode\n            : me.targetNode\n        );\n        const error = new errors.renderError(code, message, me.getPath());\n        replaceWrongNode(targetNode, error);\n        return error;\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n            if (this.options.hasOwnProperty(\"value\")) {\n                if (this.targetNode.getAttribute(\"value\") !== null) { // Conflict\n                    throw me.renderError(\n                        'VALUE_CONFLICT'\n                        , `Initial value specied both as \"value\" option and HTML \"value\" attribute.`\n                    );\n                };\n                this.targetNode.setAttribute(\"value\", this.options.value);\n            };\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        const onStatusChange = hotKeys_handler.onStatusChange.bind(me);\n        me.form.targetNode.addEventListener(\"keydown\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"keyup\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"focusout\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"focusin\", onStatusChange, true);\n    };\n    static onStatusChange(ev) {\n        const me = this;\n\n        // Deactivation:\n        if (ev.type == \"keyup\") {\n            if (ev.key == \"Control\") me.reveal(false);\n            return;\n        };\n\n        // Focus leave:\n        if (ev.type == \"focusout\") {\n            if (me.revealed !== null) {\n                me.reveal(); // Unreveal, but keep activated.\n            };\n            return;\n        };\n\n        // Focus enter:\n        if (ev.type == \"focusin\" && me.revealed === null) {\n            return; // No hotkeys revealed.\n            // Otherwise behave as new activation\n        };\n\n        // ev.type is \"keydown\" or \"focusin\"\n        const ctrlKey = ev.ctrlKey || ev.key == \"Control\";\n        const altKey = ev.altKey || ev.key == \"Alt\";\n        const activation = (\n            // Pressing ctrl key with or without alt key\n            ctrlKey && (ev.key == \"Control\" || ev.key == \"Alt\")\n            // Reentering focus after some action without deactivation\n            || ev.type == \"focusin\"\n        );\n\n        // (Re)activation:\n        if (activation) {\n            const level = altKey ? 2 : 1;\n            // Activate and reveal:\n            return void me.reveal(ev.target, level);\n        };\n\n        // Hotkey stroke:\n        if (me.revealed instanceof Array) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                // Prevent default and stop propagation:\n                //   Even if disabled to avoid weird behaviour with repetitions\n                //   (Ex. using \"+\" to add items to a list would zoom in\n                //   some browsers when max_items is reached).\n                ev.preventDefault();\n                ev.stopPropagation();\n                // Perform the action:\n                if (! targettedTrigger.targetNode.disabled) {\n                    // Unless trigger is disabled\n                    targettedTrigger.targetNode.click();\n                };\n            };\n        };\n\n    };\n    reveal(target, level = 1) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = [component, ...component.parents];\n            const activeContextsSet = new Set(activeContexts);\n\n            const candidateTriggers = activeContexts\n                .map((ctx, distance)=>(\n                    ctx.getTriggers('*')    // All triggers.\n                    .map(tg=>({\n                        tg,\n                        distance,   // Number of ancestors levels.\n                        args: tg.getTriggerArgs() || {},\n                        hotkey: String(tg.options.hotkey || \"\"),\n                    }))\n                ))\n                .flat()\n                .filter(({args, hotkey})=>(\n                    hotkey.length\n                    && activeContextsSet.has(args.context)\n                ))\n                .sort((ta,tb)=>(\n                    activeContextsSet.has(tb.args.target)\n                    - activeContextsSet.has(ta.args.target)\n                    - tb.distance\n                    + ta.distance\n                ))\n            ;\n\n            const seen = new Map(); // hotkey => [times seen, distance from target]\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                const [times, distance] = seen.get(candidate.hotkey) || [1, 0];\n                if (times < level) {\n                    seen.set(candidate.hotkey, [times + 1, candidate.distance]);\n                    continue; // Level not reached.\n                };\n                if (times > level) {\n                    continue; // Used by more preferent tg.\n                };\n                if (candidate.distance > distance) { // Don't pick more than one per \"ancestory\" level.\n                    if (! candidate.tg.targetNode.disabled) {\n                        candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                    };\n                    me.revealed.push(candidate.tg); // Let stroke detection know it matched.\n                    // Avoid activating the following candidates by \"oveflowing\" their times seen count:\n                    // (UX): Do it even if disabled for behavioral consistency...\n                    seen.set(candidate.hotkey, [times + 1, candidate.distance]);\n                };\n            };\n\n        };\n\n    };\n};\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        const me = this;\n        this.actions[name] = async function (options = {}) {\n            let defaultPrevented = false;\n            if (! options.silent) {\n                defaultPrevented = ! await me.emit(`BeforeAction_${name}`, options);\n            };\n            if (defaultPrevented) return; // Action cancelled by event handler.\n            const data = await targetMtd.call(me, options);\n            if (! options.silent) {\n                me.emit(`AfterAction_${name}`, {...options, data});\n            };\n            return data;\n        };\n    });\n};\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        const {\n            // property: local variable\n            action,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! action) return; // Not a trigger component.\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>(typeof p.actions[action] == \"function\"))\n        );\n\n        const target = (\n            targetPath ? context?.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : (\n                parents\n                    .slice(1) // Skip self\n                    .find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n                || null\n            )\n        );\n\n        return {\n            action,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    return await mtd(options);\n};\n\n\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\nimport {getRoots} from \"../lib/helpers.js\";\n\n// TODO:\n// =====\n//\n//   ðŸš€ Add support for (smarkform) fields contained in the label.\n//      ðŸ‘‰ Now we can just not enhance the label (<label>Bla bla bla<input\n//         data-smark></label>) and it will (in this case natively) work.\n//      ðŸ‘‰ ...but this does not allow us to use other SmarkForm fields such as\n//         forms and lists (since they can contain more than one native field\n//         which is not allowed by <label> tag.\n//      ðŸ’¡ But we can use different tag (with {data-smark=\"label\"}) and just\n//         create the native <label> tag around the text.\n\nexport class label extends SmarkComponent {\n    constructor(node, {allow_select = false, ...options}, ...args){\n        delete options.name; // Labels are always unnamed.\n        return super(node, {allow_select, ...options}, ...args);\n    };\n    async render(){\n        const me = this;\n        // Enhance acctions:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                throw me.renderError(\n                    'FIELD_IN_LABEL'\n                    , `Non action components not allowed in labels, found ${newItem.name} in form ${me.getPath()}.`\n                );\n            };\n        };\n        me.parent.onRendered(()=>{\n            const labelArgs = me.getLabelArgs();\n            const {targetFieldNode} = labelArgs.target || {};\n            if (targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! targetFieldNode.id) { // Ensure targetted field has an Id\n                    targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", targetFieldNode.id);\n            };\n            if (! me.options.allow_select) {\n                // Make labels non-selectable unless \"allow_select\" option\n                // is set  to true.\n                me.targetNode.style[\"user-select\"] = \"none\";\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold({operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold({//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n            };//}}}\n        };\n    };\n};\n","// src/decorators/export_to_target.deco.js\n// =======================================\n\nexport const export_to_target = function export_to_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function export_mtd({target, ...options}={}) {\n            const me = this;\n            const value = await method.call(me, options);\n            try {\n                await target.import({data: value});\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return value;\n        };\n    };\n};\n","// src/decorators/import_from_target.deco.js\n// =========================================\n\nexport const import_from_target = function import_from_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function import_mtd({target, data, ...options}={}) {\n            const me = this;\n            try {\n                data = await target.export();\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return await method.call(me, {data, ...options});\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {getRoots, parseJSON} from \"../lib/helpers.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export({silent: true})]\n            ))\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = {}, focus = true} = {}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (\n            dataConstructor !== {}.constructor // Not a plain object\n            && ! (data = parseJSON(data))      // Neither a (valid) JSON string\n        ) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object or vailid JSON for form import, ${dataConstructor.name} given.`\n        );\n        const retv = Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import({data: data[key], focus, silent: true});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n        if (focus) me.focus();\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: {}, focus, silent: true});\n    };//}}}\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_decorator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.templates.item.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ];\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ];\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n                me.renum();\n            };//}}}\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\nimport {makeRoom, getRoots, parseJSON} from \"../lib/helpers.js\";\n\n// Private helpers:\n// ----------------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\nfunction loadTemplates(me) {//{{{\n    const templates = {};\n    for (const child of [...me.targetNode.children]) {\n        const {role = \"item\"} = parseJSON(child.getAttribute(\"data-smark\")) || {};\n        switch (role) {\n            case \"empty_list\":\n            case \"header\":\n            case \"separator\":\n            case \"last_separator\":\n            case \"footer\":\n            case \"placeholder\": // (Only with max_items defined)\n                child.setAttribute(\"data-role\", role);\n            case \"item\": // (Default)\n                if (templates[role] !== undefined) throw me.renderError(\n                    'LIST_DUPLICATE_TEMPLATE'\n                    , `Repated list template role ${role}`\n                );\n                templates[role] = child;\n                templates[role].remove();\n            break;\n        };\n    };\n    if (me.targetNode.children.length) {\n        const {role = \"(unspecified)\"} = parseJSON(\n            me.targetNode.children[0].getAttribute(\"data-smark\")\n        ) || {};\n        throw me.renderError(\n            'LIST_UNKNOWN_TEMPLATE_ROLE'\n            , `Unknown list template role ${role}`\n        );\n    };\n    if (! templates.last_separator) {\n        templates.last_separator = templates.separator; // (If any)\n    };\n    if (\n        templates.item.querySelector(\"[id]\") !== null // Contains IDs\n    ) throw me.renderError(\n        'LIST_CONTAINS_ID'\n        , `List components are not allowed to contain elements with 'id' attribute`\n    );\n    return templates;\n};//}}}\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async #appendChild(child) {//{{{\n        const me = this;\n        if (me.templates.header) {\n            me.templates.header.after(child);\n        } else {\n            me.targetNode.appendChild(child);\n        };\n    };//}}}\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        me.templates = loadTemplates(me);\n        me.placeholders = [];\n        const tplOptions = me.getNodeOptions(\n            me.templates.item\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        for (const tpl of [\n            me.templates.header,\n            me.templates.footer,\n        ]) if (!! tpl) {\n            me.targetNode.appendChild(tpl);\n            // Enhance childs:\n            for (\n                const node\n                of getRoots(tpl, me.selector)\n            ) {\n                const newItem = await me.enhance(node);\n                if (!! newItem?._isField) {\n                    throw me.renderError(\n                        'FIELD_IN_WRONG_LIST_TEMPLATE'\n                        , `Fields are not allowed in list's template roles other than item.`\n                    );\n                };\n            };\n        };\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem({silent: true});\n\n            // Initialize \"count\" actions and reinject empty_list template:\n            if (me.min_items == 0) await me.renum();\n\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n    };//}}}\n    onTriggerRender({action, origin, context}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const emptyChilds = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) {\n                if (list.length < me.min_items) emptyChilds.push(child);\n                continue;\n            };\n            list.push(await child.export({silent: true}));\n        };\n        for (let i=0; list.length < me.min_items; i++) {\n            list.push(await emptyChilds[i].export({silent: true}));\n        };\n        return list;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = [], focus} = {}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! (data instanceof Array)) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem({silent: true}); // Make room on demand\n            await me.children[i].import({data: data[i], focus, silent: true});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem({silent: true});\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].clear({silent: true});\n        if (focus) me.focus();\n        return; // await me.export({silent: true});\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        options.action = \"addItem\";\n        options.origin ||= null; // (Internal call)\n        options.context ||= me;  // (Internal call)\n        options.source ||= null; // Source component to copy data from.\n        options.target ||= null; // Target child component to insert before/after.\n        options.position ||= \"after\";\n        options.autoscroll ||= null;   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n        options.failback ||= \"throw\";  // \"none\" / \"throw\" (default)\n        if (options.position != \"after\" && options.position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${options.position}`\n        );\n        if (me.children.length >= me.max_items) {\n            switch (options.failback) {\n                case \"none\":\n                    break;\n                case \"throw\":\n                default:\n                    me.emit(\"error\", {\n                        code: 'LIST_MAX_ITEMS_REACHED',\n                        message: `Cannot add items over max_items boundary`,\n                        options,\n                    });\n            };\n            return;\n        };\n        if (me.children.length && ! options.target) options.target = ( // Auto target:\n            options.position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.templates.item.cloneNode(true);\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            await me.#appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(options.target.targetNode)) {\n                        return child;\n                    } else {\n                        // Append or prepend new item to the target child:\n                        child.targetNode[options.position](newItemTarget);\n                            // Note that options.position is ensured to be \"after\" or \"before\" above.\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        const chunk = [child, newItem];\n                        // Ensure correct order:\n                        if (options.position == \"before\") chunk.reverse();\n                        return chunk; // Array that will be flattened later...\n                    };\n                })\n            ))\n                .flat()\n            ;\n        };\n        await me.renum();\n        //}}}\n        // Copy data from source component if specified:{{{\n        if (options.source) {\n            const sourceComponent = newItem.find(options.source);\n            if (!! sourceComponent) {\n                const data = await sourceComponent.export();\n                await newItem.import({data, silent: true});\n            };\n        };\n        //}}}\n        // Autoscroll handling:{{{\n        if (options.autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : options.autoscroll == \"self\" ? newItem\n                : options.autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        if (me.renderedSync) newItem.focus();\n        return newItem;\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(options = {}) {//{{{\n        const me = this;\n        options.action = \"removeItem\";\n        options.origin ||= null; // (Internal call)\n        options.context ||= me;  // (Internal call)\n        options.target ||= null; // Target child component to remove.\n        options.autoscroll ||= null;   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n        let preserve_non_empty = options.preserve_non_empty ||= false;\n        options.failback ||= \"throw\";  // \"none\" / \"clear\" / \"throw\" (default)\n        if (! options.target) {\n            if (preserve_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                options.target = t;\n                break;\n            };\n            if (! options.target) {\n                options.target = me.children[me.children.length - 1];\n                preserve_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            options.target instanceof Array ? options.target\n            : [options.target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (options.failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.clear({silent: true});\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (preserve_non_empty && ! await currentTarget.isEmpty()) continue;\n            // Locate target child and rebuild children array without it:{{{\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (options.autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                options.autoscroll == \"self\" ? child\n                                : options.autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n                        oldItem = child;\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n                        return false;\n                    };\n                    return true;\n                })\n            ;\n            // }}}\n            // Perform removal:{{{\n            await me.emit(\"removeItem_beforeRender\", {\n                ...options,\n                target: oldItem,\n                targetNode: oldItem.targetNode,\n            }, false);\n            await oldItem.unrender();\n            me.children = newChildren;\n            await me.renum();\n            await me.emit(\"removeItem_afterRender\", {\n                ...options,\n                target: oldItem,\n                targetNode: oldItem.targetNode,\n            }, false);\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n            // }}}\n        };\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: [], focus, silent: true});\n    };//}}}\n    @action\n    count({delta = 0} = {}) {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length + Number(delta);\n    };//}}}\n    @action\n    position({target, offset = 1} = {}) {//{{{\n        return Number(target?.name) + Number(offset);\n    };//}}}\n    async renum(){//{{{\n        const me = this;\n\n        // Update child index:\n        for (const i in me.children) {\n            me.children[i].name = i;\n            me.children[i].updateId();\n        };\n\n        // Handle separators:\n        if (\n            !! me.templates.separator\n            || !! me.templates.last_separator\n        ) for (const i in me.children) {\n\n            const isLastNode = i >= me.children.length - 1;\n            const sepRole = (\n                i <= 0 ? null\n                : isLastNode ? \"last_separator\"\n                : \"separator\"\n            );\n\n            const currentNode = me.children[i].targetNode;\n            const prevNode = currentNode.previousElementSibling;\n            const prevNode_role = prevNode && prevNode.getAttribute(\"data-role\");\n            if (prevNode_role !== sepRole) {\n                if (!! prevNode_role) prevNode.remove();\n                const sepTemplate = me.templates[sepRole];\n                if (!! sepRole && !! sepTemplate) currentNode.parentElement.insertBefore(sepTemplate.cloneNode(true), currentNode);\n            };\n            if (isLastNode) { // LastItem\n                const nextNode = currentNode.nextElementSibling;\n                if (!! nextNode) nextNode.remove();\n            };\n\n        };\n\n        // Handle empty_list template:\n        if (me.templates.empty_list) {\n            if (me.children.length) {\n                me.templates.empty_list.remove(); // (from DOM)\n            } else {\n                await me.#appendChild(me.templates.empty_list);\n            };\n        };\n\n        // Handle placeholder template:\n        if (\n            me.templates.placeholder\n            && !! me.max_items // (Only if we have a finite padding limit)\n        ) {\n            let placeHoldersCount = (me.max_items || 0) - me.children.length;\n            if (\n                placeHoldersCount > 0\n                && me.children.length === 0\n                && !! me.templates.empty_list\n            ) placeHoldersCount--; // Discount the hole occupied by empty_list\n            if (me.placeholders.length < placeHoldersCount) {\n                for (let i = me.placeholders.length; i < placeHoldersCount; i++) {\n                    const placeholder = me.templates.placeholder.cloneNode(true);\n                    if (me.templates.footer) {\n                        me.templates.footer.before(placeholder);\n                    } else {\n                        me.targetNode.appendChild(placeholder);\n                    };\n                    me.placeholders.push(placeholder);\n                };\n            } else { // me.placeholders.length >= placeHoldersCount\n                for (let i = me.placeholders.length; i > placeHoldersCount; i--) {\n                    me.placeholders.pop().remove();\n                };\n            };\n        };\n\n        // Update counter triggers:\n        me.getTriggers(\"position\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.position({...args, silent: true});\n        });\n        me.getTriggers(\"count\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.count({...args, silent: true});\n        });\n    };//}}}\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nexport class input extends form {\n    constructor(...args) {//{{{\n        super(...args);\n        const me = this;\n        me.eventHooks.keydown.push(\n            function keydown_hook(ev) {\n                if (ev.defaultPrevented) return;\n                if (ev.originalEvent.key === \"Enter\") {\n                    const backwards = ev.originalEvent.shiftKey;\n                    if (\n                        ev.context.targetNode.tagName === \"TEXTAREA\"\n                        && ! ev.originalEvent.ctrlKey\n                        && ! backwards\n                    ) return; // Require Ctrl key to escape textareas.\n                    let nextField = (\n                        ! backwards ? ev.context.find(\".+1\") || ev.context.find(\"../.+1\")\n                        : ev.context.find(\".-1\") || ev.context.find(\"../.-1\")\n                    );\n                    if (nextField) {\n                        nextField.focus();\n                        ev.originalEvent.preventDefault();\n                        ev.originalEvent.stopPropagation();\n                    };\n                };\n            },\n        );\n    }; // }}}\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const sons = Object.values(me.children);\n            if (sons.length != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${sons.length} found.`\n            );\n            const son = sons[0];\n            if (me.options.type !== son.options.type) throw me.renderError(\n                'SINGLETON_TYPE_MISMATCH'\n                , `Singleton type (${me.options.type})`\n                + ` does not match child field type (${son.options.type}).`\n            );\n            me.targetFieldNode = son.targetNode;\n        } else {\n            me.targetFieldNode = me.targetNode;\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export(options) {//{{{\n        const me = this;\n        if (me.isSingleton) return await me.children[\"\"].export(options);\n        const nodeFld = me.targetFieldNode;\n        let retv;\n        if (me.isCheckbox) {\n            retv = !! nodeFld.checked;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n            && nodeFld.options[nodeFld.selectedIndex]?.getAttribute(\"value\") === null\n        ) {\n            // Keep fallback working when encoding is json and value attribute is not set.\n            // (and don't expetct <opton> inner text to be JSON)\n            retv = JSON.stringify(nodeFld.options[nodeFld.selectedIndex].text);\n        } else {\n            retv = nodeFld.value;\n        };\n        return (\n            me.options.encoding === \"json\" ? parseJSON(retv) || null\n            : retv\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import(options) {//{{{\n        const me = this;\n        if (me.isSingleton) return await me.children[\"\"].import(options);\n        let {data = \"\", focus = true} = options || {};\n        const nodeFld = me.targetFieldNode;\n        if (\n            typeof data === \"object\"\n            && me.options.type === \"input\"    // Not in a derivated field types\n            || me.options.encoding === \"json\" // JSON encoding specified\n        ) {\n            data ||= null;\n            const isTextarea = nodeFld.tagName.toUpperCase() === \"TEXTAREA\";\n            data = (\n                isTextarea ? JSON.stringify(data, null, 4) // Pretty print\n                : JSON.stringify(data) // Compact print\n            ) || \"\";\n        };\n        if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n        ) {\n            me.targetNode.value = (data || \"null\"); // Faster, but won't work if value attribute is not set.\n            if (nodeFld.selectedIndex === -1) {\n                // Fallback when value attribute is not set.\n                const parsed = parseJSON(data) || \"\";\n                const idx = Array.from(nodeFld.options).findIndex(\n                    opt => opt.text === parsed\n                );\n                if (idx !== -1) nodeFld.selectedIndex = idx;\n            };\n        } else {\n            me.targetNode.value = data;\n        };\n        if (focus) me.focus();\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export()\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        await me.import({\n            data: me.options.encoding === \"json\" ? null : \"\",\n            focus,\n        });\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        const typename = typeof data;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const retv =  await super.import({data:(\n            typename == \"number\" ? data\n            : typename == \"string\"\n                && data.length\n                && ! isNaN(data)\n                ? Number(data)\n            : null\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        const retv = await super.import({data:(\n            isNaN(value) ? null\n            : ISODate(value)\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        let master = me.parent.children[me.name];\n        let retv = me;\n        if (master) {\n            me.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons.push(me.targetNode);\n            retv = {}; // Not the master field.\n        } else {\n            master = me;\n            // Provide unique name for DOM navigation to work properly:\n            master.sharedNodeName = randomId();\n            master.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons = [\n                master.targetNode\n            ];\n        };\n        let changeEventHandler = onRadioInteraction.bind(master);\n        me.targetNode.addEventListener(\"click\", changeEventHandler);\n        me.targetNode.addEventListener(\"keydown\", changeEventHandler);\n        return retv;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value || null;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) {\n            selected.checked = true;\n        } else {\n            this.radioButtons.forEach(r=>r.checked = false);\n        };\n        if (focus) this.focus();\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\nfunction onRadioInteraction(event) {//{{{\n    if (\n        event.type === \"click\"\n        || event.type === \"keydown\" && event.code === \"Delete\"\n        // NOTE: Some browsers also send fake click events for toggling radio\n        //       buttons.\n        //       This approach avoids to interfere with that behavior while\n        //       ensuring a consistent keyboard resetting method (through the\n        //       Delete key).\n    ) {\n        const me = this;\n        let checked = true; // All raddio buttons become checked on click.\n        const lastSelection = Object.is(me.lastClicked?.target, event.target);\n        if (lastSelection) checked = (\n            ! me.lastClicked.checked    // Click  => Toggle\n            && event.type !== \"keydown\" // Delete => Reset\n        );\n        me.lastClicked = {\n            target: event.target,\n            checked,\n        };\n        event.target.checked = checked;\n    };\n};//}}}\n","// types/color.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_color = /^#([a-f0-9]{3}){1,2}$/i;\nconst disabled_style = `\n    opacity: .5;\n    background: repeating-linear-gradient(\n            45deg,\n            black,\n            black 10px,\n            white 10px,\n            white 20px\n        ),\n        black;\n    background-blend-mode: difference;\n`;\nexport class color extends input {\n    constructor(...args) {\n        super(...args);\n        // Add keydown hook to handle \"Delete\" key:\n        this.eventHooks.keydown.push ( ev => {\n            if (ev.defaultPrevented) return;\n            if (ev.originalEvent.key === \"Delete\") {\n                ev.context.clear();\n            };\n        });\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n\n        if (me.isSingleton) return; // (Only for real field)\n\n        // Check targetField's type attribute:\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"color\").toLowerCase() != \"color\"\n        ) throw me.renderError(\n            'NOT_A_COLOR_FIELD'\n            , `Color inputs require an INPUT tag of type \"color\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"color\"; // Autofill\n\n        // Iniitialize me.isDefined flag:\n        const valueAttr = me.targetFieldNode.getAttribute(\"value\");\n        me.isDefined = (\n            valueAttr !== null         // value property not defined\n            && valueAttr.trim() !== \"\" // value property defined (string)\n        );\n\n        // Remember original \"style\" attribute and update if appropriate:\n        me.defaultStyleAttr = me.targetFieldNode.getAttribute(\"style\") + \";\";\n        if (! me.isDefined) me.targetFieldNode.setAttribute(\n            \"style\"\n            , me.defaultStyleAttr + disabled_style\n        );\n\n        // Handle me.isDefined set:\n        const resetDefined = ev=>{\n            if (\n                ev.code    !== \"Enter\"\n                && ev.Code !== \"Space\"\n                && ev.code !== undefined // ev.type must be \"click\" or \"change\"\n                    // && ev.type !== \"click\" // Click event\n                    // && ev.type !== \"change\" // Change event\n            ) return;\n            me.isDefined = true;\n            me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n        };\n        me.targetFieldNode.addEventListener(\"keydown\", resetDefined);\n        me.targetFieldNode.addEventListener(\"click\", resetDefined);\n        me.targetFieldNode.addEventListener(\"change\", resetDefined);\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        let data = await super.export(...args);\n        if (! me.isSingleton) data = (\n            me.isDefined && data.match(re_color) ? data.toLowerCase()\n            : null\n        );\n        return data;\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (\n            ! me.isSingleton // Only for real field\n        ) {\n            if (\n                data === null              // Explicit null value\n                || ! data.match(re_color)  // Invalid color value\n            ) {\n                me.isDefined = false;\n                me.targetFieldNode.setAttribute(\n                    \"style\"\n                    , me.defaultStyleAttr + disabled_style\n                );\n            } else {\n                me.isDefined = true;\n                me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n            };\n        };\n        if (data?.length == 4) data = `#${data[1]}${data[1]}${data[2]}${data[2]}${data[3]}${data[3]}`;\n        const value = await super.import({data, focus});\n        return (\n            me.isDefined ? value\n            : null\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\nimport {color} from \"./types/color.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n    color,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["getRoots","target","selector","isTop","parentNode","n","isSameNode","querySelectorAll","filter","e","closest","makeRoom","element","pixels","parent","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","substring","parseJSON","str","JSON","parse","err","sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","supportedFieldEventTypes","registerEvHandler","evList","evType","evHandler","has","set","get","push","bind","this","events","targetComponentType","_ref","kind","constructor","optionsSrc","options","onOptionCallbacks","key","value","Object","entries","match","_len","arguments","length","args","Array","_key","super","me","Map","onLocal","onAll","on","eventHooks","parentStore","arrayStore","prop","defineProperty","Proxy","_dynamic","createArrayPuller","is","root","targetNode","addEventListener","ev","targetComponent","getComponent","evData","type","originalEvent","context","preventDefault","stopPropagation","stopImmediatePropagation","emit","evt","handler","listenLevel","targetHandlers","parents","parentHandlers","eventHook","legacy","disEnhance","tagName","toLowerCase","event","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","errors","Error","code","message","path","stack","split","slice","join","_SmarkComponent","SmarkComponent","property_name","undefined","validName","counter","isSingleton","names","n0","trim","actions","types","setNodeOptions","renderError","iterator","current","autoId","inherittedOption","setRendered","genId","p","replace","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","onRendered","unrender","remove","cbk","getNodeOptions","node","defaultOptions","dataset","opt","action","parentComponent","String","getAttribute","inferType","stringify","enhance","ctrl","parentElement","getPath","map","name","reverse","find","base","parts","x","firstWildcardPos","findIndex","re_pattern","wname","RegExp","pivotPath","restPath","pivot","child","_ref2","flat","Infinity","reduce","delta","parseInt","isNaN","keys","currentPosition","newKey","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","myCurrentActions","actionKeys","Set","returnAll","tgg","getTriggerArgs","updateId","newId","values","focus","fname","targetFieldNode","error","errorNode","createElement","setAttribute","appendChild","createTextNode","clicableNode","textContent","console","replaceWith","replaceWrongNode","static","_staticBlock","_initClass","_applyDecs","c","SmarkField","_isField","hasOwnProperty","createType","controller","prototype","hotKeys_handler","form","revealed","onStatusChange","reveal","ctrlKey","altKey","level","targettedTrigger","t","hotkey","disabled","click","removeAttribute","component","activeContexts","activeContextsSet","candidateTriggers","ctx","distance","tg","sort","ta","tb","seen","candidate","times","targetMtd","addInitializer","async","defaultPrevented","silent","data","call","trigger","triggerArgs","onTriggerRender","disable","enable","contextPath","targetPath","otherOptions","origin","onTriggerClick","mtd","label","allow_select","newItem","labelArgs","getLabelArgs","style","candidates","found","childName","foldable","_initProto","retv","fold","operation","folded","wasFolded","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","export_to_target","method","import","import_from_target","export","_form","fromEntries","all","dataConstructor","isEmpty","clear","updateTriggers","min_items","failback","max_items","smartdisabling","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","mutex","muxName","unlock","sortable","_moveDecs","templates","item","dragSource","dragDest","move","from","to","fromi","Number","toi","newChunk","splice","moveMethod","renum","_list","list","header","after","_exportDecs","_addItemDecs","_removeItemDecs","max","role","last_separator","separator","querySelector","loadTemplates","placeholders","tplOptions","of","tpl","footer","i","addItem","emptyChilds","stripEmpties","min","removeItem","source","position","autoscroll","newItemTarget","cloneNode","chunk","sourceComponent","offsetHeight","moveTarget","preserve_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","count","offset","isLastNode","sepRole","currentNode","prevNode","previousElementSibling","prevNode_role","sepTemplate","insertBefore","nextNode","nextElementSibling","empty_list","placeholder","placeHoldersCount","before","pop","innerText","input","keydown","backwards","shiftKey","nextField","isCheckbox","sons","son","nodeFld","checked","encoding","toUpperCase","selectedIndex","text","parsed","idx","number","targetTag","targetType","typename","re_timePart","parseDateStr","Date","NaN","ISODate","toISOString","date","radio","master","sharedNodeName","radioButtons","changeEventHandler","onRadioInteraction","r","selected","lastClicked","re_color","disabled_style","color","valueAttr","isDefined","defaultStyleAttr","resetDefined","Code","SmarkForm","customActions","formOptions"],"mappings":"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"}