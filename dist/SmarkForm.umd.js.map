{"version":3,"file":"SmarkForm.umd.js","sources":["../src/lib/helpers.js","../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/decorators/export_to_target.deco.js","../src/decorators/import_from_target.deco.js","../src/types/form.type.js","../src/types/list.decorators/smartdisabling.deco.js","../src/decorators/mutex.deco.js","../src/types/list.type.js","../src/types/list.decorators/sortable.deco.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/types/color.type.js","../src/main.js"],"sourcesContent":["\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {//{{{\n    return Math.random().toString(36).substring(2);\n};//}}}\n\nexport function parseJSON(str) {//{{{\n    try {\n        return JSON.parse(str);\n    } catch (err) {};\n};//}}}\n\nexport function createArrayPuller(parentStore) {//{{{\n    // Create an object that populates arrays to each accessed property\n    const arrayStore = {};\n    for (const prop in parentStore) {\n        arrayStore[prop] = [...parentStore[prop]]; // Copy existing arrays\n        // This allows to remove inherited properties individually if needed\n    }\n    // Dynamically create an array per each accessed property:\n    Object.defineProperty(arrayStore, '_dynamic', {\n      get() {\n        return new Proxy(this, {\n          get(target, prop) {\n            if (prop in target) {\n              return target[prop];\n            }\n            target[prop] = [];\n            return target[prop];\n          }\n        });\n      }\n    });\n    return arrayStore._dynamic;\n};//}}}\n\nexport function replaceWrongNode(targetNode, error) {// {{{\n    // Create the outer <div> element\n    const errorNode = document.createElement('div');\n    errorNode.setAttribute('title', error.message);\n    errorNode.setAttribute('style', \"display: inline-block; padding: .5em 1em; background: red; color: yellow; border-radius: 50% 0%\");\n    // Add the text with the error code\n    errorNode.appendChild(document.createTextNode(error.code));\n    // Create the inner clicable button\n    const clicableNode = document.createElement('span');\n    clicableNode.setAttribute('title', 'Log the error again');\n    clicableNode.setAttribute('style', 'cursor: pointer; font-weight: bold; background-color: white; color: red; border-radius: 50%; padding: 0 4px; margin-left: 8px;');\n    clicableNode.textContent = 'â†§';\n    clicableNode.addEventListener('click', () => {\n        console.error(error);\n    });\n    errorNode.appendChild(clicableNode);\n    // Replace the targetNode with the errorNode\n    targetNode.replaceWith(errorNode);\n};// }}}\n\n","// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nimport {createArrayPuller} from \"./helpers.js\";\n\nconst supportedFieldEventTypes = [\n    \"keydown\", \"keyup\", \"keypress\",\n    \"beforeinput\", \"input\", \"change\",\n    \"focus\", \"blur\",\n    \"click\", \"dblclick\", \"contextmenu\",\n    \"mousedown\", \"mouseup\", \"mousemove\", \"mouseenter\", \"mouseleave\", \"mouseover\", \"mouseout\",\n    \"focusin\", \"focusout\",\n\n    // \"select\", \"dragstart\", \"dragend\", \"dragover\", \"dragenter\", \"dragleave\", \"drop\",\n    // \"touchstart\", \"touchend\", \"touchmove\", \"touchcancel\",\n    // \"wheel\", \"scroll\", \"resize\",\n    // \"copy\", \"cut\", \"paste\",\n];\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\n\nexport const events = function events_decorator(targetComponentType, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnabledTarget extends targetComponentType {\n            constructor(target, optionsSrc, ...args) {// {{{\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                me[sym_local_events] = new Map();\n                me[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me, me[sym_all_events]);\n                me.on = me.onAll; // Handy alias for listening all events.\n\n                // Create event hooks object:\n                me.eventHooks = createArrayPuller(super.eventHooks);\n                    // eventHooks are eventHandlers provided by the component type.\n                    // They are processed after regular events if not default prevented.\n\n                // Field events redirection:\n                if (\n                    // Do it only once and from root component target:\n                    Object.is(me, me.root)\n                ) {\n                    for (const evType of supportedFieldEventTypes) {\n                        me.targetNode.addEventListener(evType, ev=>{\n                            const targetComponent = me.getComponent(ev.target);\n                            const evData = {\n                                type: evType,\n                                originalEvent: ev,\n                                context: targetComponent,\n                                preventDefault: ev.preventDefault.bind(ev),\n                                stopPropagation: ev.stopPropagation.bind(ev),\n                                stopImmediatePropagation: ev.stopImmediatePropagation.bind(ev),\n                            };\n                            targetComponent.emit(evType, evData);\n                        }, true); // Use capture phase\n                    };\n                };\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };// }}}\n            async emit(evType, evData, preventable = true) {// {{{\n                const me = this;\n                let propagationStopped = false;\n                let immediatePropagationStopped = false;\n                const event = {\n                    ...evData,\n                    type: evType,\n                    defaultPrevented: false,\n                };\n                if (preventable) {\n                    event.preventDefault = () => event.defaultPrevented = true;\n                    event.stopPropagation = () => propagationStopped = true;\n                    event.stopImmediatePropagation = () => immediatePropagationStopped = true;\n                };\n                // Event target phase:\n                const targetHandlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me[sym_all_events].get(evType) || []),\n                ];\n                for (const handler of targetHandlers) {\n                    if (immediatePropagationStopped) break;\n                    await handler(evData);\n                };\n                // Events bubbling phase:\n                for (const parent of me.parents) {\n                    if (propagationStopped) break;\n                    const parentHandlers = parent[sym_all_events].get(evType) || [];\n                    for (const handler of parentHandlers) {\n                        if (immediatePropagationStopped) break;\n                        await handler(evData);\n                    };\n                }\n                // Event hooks (default behavior hooks)::\n                for (const eventHook of me.eventHooks[evType]) {\n                    // WARNING: eventHooks are called inconditionally!\n                    // They should check if event.defaultPrevented is set by themselves.\n                    // This may seem counter-intuitive and unhandy, but it will allow, for instance,\n                    // to implement a fake default prevention to \"change\" events (which are not natively cancelable) by restoring previous value.\n                    await eventHook(evData);\n                };\n                return ! event.defaultPrevented;\n            };// }}}\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\nimport {replaceWrongNode} from \"./helpers.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            if (parentComponent.isSingleton) return parentComponent.options.type;\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                case \"color\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //(implicit)//if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                if (me.parent.isSingleton) return \"\";\n                    // Singleton target components are unnamed.\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me.parent;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n            await me.emit(\"afterRender\", {\n                context: me\n            }, false);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    async unrender() {\n        const me = this;\n        await me.emit(\"beforeUnrender\", {\n            context: me\n        }, false);\n        me.targetNode.remove();\n    };\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [me, ...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        const me = this;\n        let base = me;\n        if (base.name === \"\" && base.parent.isSingleton) base = base.parent;\n             // Always detect singleton fields instead of their child.\n        path = String(path); // Allow numbers (arrays simply won't match).\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            (current, name)=>{\n                if (current === undefined) return;   // No match.\n                if (name == \"..\") return current.parent;  // Go up one level.\n                if ( // Special syntax for list siblings (.+n / .-n)\n                    name[0] == \".\"\n                ) {\n                    if (name == \".\") return current; // Current node.\n                    if (! current.parent) return; // Root node => no siblings.\n                    const delta = parseInt(name.slice(1));\n                    if (isNaN(delta)) return; // Invalid sibling syntax.\n                    if (current.parent.options.type == \"list\") {\n                        const n = parseInt(current.name) + delta\n                        if (! isNaN(n)) return current.parent.children[n];\n                    } else {\n                        const keys = Object.keys(current.parent.children);\n                        const currentPosition = keys.findIndex(key=>key==current.name);\n                        const newKey = keys[currentPosition + delta];\n                        return current.parent.children[newKey];\n                    };\n                } else {\n                    return current.children[name];\n                };\n            }\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of [me, ...me.parents]\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [me, ...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (\n                ! Object.is(options.context, me) // Current context\n                && ! Object.is(tgg, me)          // Trigger focused itself\n            ) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        if (me.targetFieldNode) {\n            // Prefer fields over triggers, forms, etc...\n            me.targetFieldNode.focus();\n        } else {\n            me.targetNode.focus();\n        }\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        const targetNode = (\n            me.parent?.isSingleton ? me.parent.targetNode\n            : me.targetNode\n        );\n        const error = new errors.renderError(code, message, me.getPath());\n        replaceWrongNode(targetNode, error);\n        return error;\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n            if (this.options.hasOwnProperty(\"value\")) {\n                if (this.targetNode.getAttribute(\"value\") !== null) { // Conflict\n                    throw me.renderError(\n                        'VALUE_CONFLICT'\n                        , `Initial value specied both as \"value\" option and HTML \"value\" attribute.`\n                    );\n                };\n                this.targetNode.setAttribute(\"value\", this.options.value);\n            };\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\n// const l = (label, cbk=x=>x)=>d=>(console.log(`${label}: `, cbk(d)), d);\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        const onStatusChange = hotKeys_handler.onStatusChange.bind(me);\n        me.form.targetNode.addEventListener(\"keydown\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"keyup\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"focusout\", onStatusChange, true);\n        me.form.targetNode.addEventListener(\"focusin\", onStatusChange, true);\n    };\n    static onStatusChange(ev) {\n        const me = this;\n\n        // Deactivation:\n        if (ev.type == \"keyup\") {\n            if (ev.key == \"Control\") me.reveal(false);\n            return;\n        };\n\n        // Focus leave:\n        if (ev.type == \"focusout\") {\n            if (me.revealed !== null) {\n                me.reveal(); // Unreveal, but keep activated.\n            };\n            return;\n        };\n\n        // Focus enter:\n        if (ev.type == \"focusin\" && me.revealed === null) {\n            return; // No hotkeys revealed.\n            // Otherwise behave as new activation\n        };\n\n        // ev.type is \"keydown\" or \"focusin\"\n        const ctrlKey = ev.ctrlKey || ev.key == \"Control\";\n        const altKey = ev.altKey || ev.key == \"Alt\";\n        const activation = (\n            // Pressing ctrl key with or without alt key\n            ctrlKey && (ev.key == \"Control\" || ev.key == \"Alt\")\n            // Reentering focus after some action without deactivation\n            || ev.type == \"focusin\"\n        );\n\n        // (Re)activation:\n        if (activation) {\n            const level = altKey ? 2 : 1;\n            // Activate and reveal:\n            return void me.reveal(ev.target, level);\n        };\n\n        // Hotkey stroke:\n        if (me.revealed instanceof Array) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                // Prevent default and stop propagation:\n                //   Even if disabled to avoid weird behaviour with repetitions\n                //   (Ex. using \"+\" to add items to a list would zoom in\n                //   some browsers when max_items is reached).\n                ev.preventDefault();\n                ev.stopPropagation();\n                // Perform the action:\n                if (! targettedTrigger.targetNode.disabled) {\n                    // Unless trigger is disabled\n                    targettedTrigger.targetNode.click();\n                };\n            };\n        };\n\n    };\n    reveal(target, level = 1) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = getActiveContexts(component);\n            const candidateTriggers = activeContexts\n                // .map(l(\"activeContexts\", ({name, targetNode})=>({name, targetNode})))\n                .map((ctx, distance)=>{\n                    const candidates = [];\n                    for (const tg of ctx.getTriggers('*')) {\n                        const hotkey = String(tg.options.hotkey || \"\");\n                        if (hotkey == \"\") continue; // Ignore triggers without hotkey.\n                        const args = tg.getTriggerArgs() || {};\n                        candidates.push({\n                            tg,\n                            distance,   // Number of ancestors levels.\n                            args,\n                            hotkey,\n                        });\n                    };\n                    return candidates;\n                })\n                // .map(l(\"Triggers\", tlist=>tlist.map(({hotkey, distance, tg, args})=>({hotkey, distance, tg, args}))))\n                .flat()\n                .sort((ta,tb)=>{\n                    const atargetnode = ta.args.target?.targetNode;\n                    const btargetnode = tb.args.target?.targetNode;\n                    const bcontained = btargetnode ? .5 * btargetnode.contains(component.targetNode) : 0;\n                    const acontained = atargetnode ? .5 * atargetnode.contains(component.targetNode) : 0;\n                    const retv = (\n                        // Prefer triggers with nearest context:\n                        + ta.distance - tb.distance\n                        // Prefer triggers contained in ancestors (not siblings):\n                        + bcontained - acontained\n                    );\n                    // if (true || ta.hotkey == \"-\" && tb.hotkey == \"-\") {\n                    //     console.log(`--(${ta.hotkey} - ${tb.hotkey})------------------------------------------------`);\n                    //     console.log(\"--\", ta.tg.targetNode, tb.tg.targetNode, component.targetNode);\n                    //     console.log(\"--\", ta.distance, tb.distance, - tb.distance + ta.distance);\n                    //     console.log(\"--\", + acontained, + bcontained, + bcontained - acontained);\n                    //     console.log(`===========> ${retv}`);\n                    // };\n                    return retv;\n                })\n            ;\n\n            const seen = new Map(); // hotkey => [times seen, distance from target]\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                const [times, distance] = seen.get(candidate.hotkey) || [1, 0];\n                if (times < level) {\n                    seen.set(candidate.hotkey, [times + 1, candidate.distance]);\n                    continue; // Level not reached.\n                };\n                if (times > level) {\n                    continue; // Used by more preferent tg.\n                };\n                if (\n                    Object.is(candidate.tg.targetNode, target)\n                    || candidate.distance > distance\n                ) { // Don't pick more than one per \"ancestory\" level.\n                    if (! candidate.tg.targetNode.disabled) {\n                        candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                    };\n                    me.revealed.push(candidate.tg); // Let stroke detection know it matched.\n                    // Avoid activating the following candidates by \"oveflowing\" their times seen count:\n                    // (UX): Do it even if disabled for behavioral consistency...\n                    seen.set(candidate.hotkey, [times + 1, candidate.distance]);\n                };\n            };\n\n        };\n\n    };\n};\n\nfunction getComponentSiblings(context) {\n    const children = context.parent?.children || [];\n    const position = Object.keys(children).findIndex((name)=>(name === context.name));\n    const brothers = Object.values(children);\n    const backwards = brothers.slice(0, position).reverse();\n    const forwards = brothers.slice(position + 1);\n    return [...forwards, ...backwards];\n};\n\nfunction getActiveContexts(component) {\n    const upwards = [component, ...component.parents];\n    return [\n        ...upwards,\n        ...upwards.map(getComponentSiblings).flat()\n    ];\n};\n\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        const me = this;\n        this.actions[name] = async function (data, options = {}) {\n            // Actions are async functions that can be triggered by trigger\n            // components.\n            // They receive data and options as arguments.\n            // They emit BeforeAction_<name> and AfterAction_<name> events.\n            // The options argument is passed to event handlers as is but with\n            // data property set to data argument.\n            // If a BeforeAction_<name> event handler calls event.preventDefault(),\n            // the action is cancelled.\n            let defaultPrevented = false;\n            options.data = data;\n            if (! options.silent) {\n                defaultPrevented = ! await me.emit(`BeforeAction_${name}`, options);\n                data = options.data; // Update data in case it was modified by event handlers.\n            };\n            if (defaultPrevented) return; // Action cancelled by event handler.\n            // Cal the method implementing the action.\n            // It receives data and options arguments.\n            // Here options.data is set to the input data argument.\n            // After execution, options.data is updated with the returned data.\n            data = await targetMtd.call(me, data, options);\n            options.data = data;\n            if (! options.silent) {\n                me.emit(`AfterAction_${name}`, options);\n            };\n            // The resulting action method returns the data returned by the\n            // original method.\n            // Options object can be mutated inside the original method and\n            // that mutations will be visible to the AfterAction_xxxx event\n            // handlers.\n            return data;\n        };\n    });\n};\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [me, ...me.parents];\n        const {\n            // property: local variable\n            action,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! action) return; // Not a trigger component.\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>(typeof p.actions[action] == \"function\"))\n        );\n\n        const target = (\n            targetPath ? context?.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : (\n                parents\n                    .slice(1) // Skip self\n                    .find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n                || null\n            )\n        );\n\n        return {\n            action,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action, data} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    return await mtd(data, options);\n};\n\n\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\nimport {getRoots} from \"../lib/helpers.js\";\n\nexport class label extends SmarkComponent {\n    constructor(node, {allow_select = false, ...options}, ...args){\n        delete options.name; // Labels are always unnamed.\n        super(node, {allow_select, ...options}, ...args);\n        const me = this;\n        me.eventHooks.click.push(\n            function click_hook(ev) {\n                // Mimic native label behavior for non-native fields:\n                if (ev.defaultPrevented) return;\n                const {target} = me.getLabelArgs();\n                if (! target?.targetFieldNode) target.focus();\n            },\n        );\n    };\n    async render(){\n        const me = this;\n        // Enhance triggers inside the label:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                throw me.renderError(\n                    'FIELD_IN_LABEL'\n                    , `Non action components not allowed in labels, found ${newItem.name} in form ${me.getPath()}.`\n                );\n            };\n        };\n        me.parent.onRendered(async ()=>{\n            const nodeType = String(me.targetNode.tagName).toLowerCase();\n            const labelArgs = me.getLabelArgs();\n            const labelledField = labelArgs.target || {};\n            await labelledField.rendered; // Ensure target field is rendered.\n            if (labelledField.targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! labelledField.targetFieldNode.id) { // Ensure targetted field has an Id\n                    labelledField.targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", labelledField.targetFieldNode.id);\n            };\n\n            // Automatically link label and field for screen readers:\n            if (\n                nodeType != \"label\"   // Not a native <label>\n            ) {\n                // Ensure label has an Id:\n                if (! me.targetNode.id) {\n                    me.targetNode.id = randomId();\n                };\n                // Get previous aria-labelledby values:\n                const alb_arr = (\n                    labelledField.targetNode.getAttribute(\"aria-labelledby\")\n                    || \"\"\n                )\n                    .split(\" \")\n                    .filter(id => id)\n                ;\n                // Add label id if not already present:\n                if (0 > alb_arr.indexOf(me.targetNode.id)) {\n                    alb_arr.push(me.targetNode.id);\n                };\n                // Reinject updated list:\n                labelledField.targetNode.setAttribute(\n                    \"aria-labelledby\"\n                    , alb_arr.join(\" \")\n                );\n            } else {\n                if (! labelledField.targetFieldNode) {\n                    throw me.renderError(\n                        'LABEL_FOR_NONFIELD'\n                        , `Native <label> tags targetting non native field are not allowed in HTML, you should use different tag.`\n                    );\n                };\n            };\n\n            // Make labels non-selectable unless \"allow_select\" option is set\n            // to true.\n            if (! me.options.allow_select) {\n                me.targetNode.style[\"user-select\"] = \"none\";\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold(null, {operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold(_data, {//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n                origin,\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n\n                // Set focus accordingly:\n                (isFolded ? origin : me)?.focus();\n            };//}}}\n        };\n    };\n};\n","// src/decorators/export_to_target.deco.js\n// =======================================\n\nexport const export_to_target = function export_to_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function export_mtd(data, {target, ...options}={}) {\n            const me = this;\n            const value = await method.call(me, data, options);\n            try {\n                await target.import(value);\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return value;\n        };\n    };\n};\n","// src/decorators/import_from_target.deco.js\n// =========================================\n\nexport const import_from_target = function import_from_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function import_mtd(data, {target, ...options}={}) {\n            const me = this;\n            try {\n                data = await target.export();\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return await method.call(me, data, options);\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {getRoots, parseJSON} from \"../lib/helpers.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export(null, {silent: true})]\n            ))\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import(data = {}, {focus = true} = {}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (\n            dataConstructor !== {}.constructor // Not a plain object\n            && ! (data = parseJSON(data))      // Neither a (valid) JSON string\n        ) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object or vailid JSON for form import, ${dataConstructor.name} given.`\n        );\n        const retv = Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import(data[key], {focus, silent: true});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n        if (focus) me.focus();\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear(_data, {focus} = {}) {//{{{\n        const me = this;\n        return await me.import({}, {focus, silent: true});\n    };//}}}\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_decorator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\nimport {makeRoom, getRoots, parseJSON} from \"../lib/helpers.js\";\n\n// Private helpers:\n// ----------------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\nfunction loadTemplates(me) {//{{{\n    const templates = {};\n    for (const child of [...me.targetNode.children]) {\n        const {role = \"item\"} = parseJSON(child.getAttribute(\"data-smark\")) || {};\n        switch (role) {\n            case \"empty_list\":\n            case \"header\":\n            case \"separator\":\n            case \"last_separator\":\n            case \"footer\":\n            case \"placeholder\": // (Only with max_items defined)\n                child.setAttribute(\"data-role\", role);\n            case \"item\": // (Default)\n                if (templates[role] !== undefined) throw me.renderError(\n                    'LIST_DUPLICATE_TEMPLATE'\n                    , `Repated list template role ${role}`\n                );\n                templates[role] = child;\n                templates[role].remove();\n            break;\n        };\n    };\n    if (me.targetNode.children.length) {\n        const {role = \"(unspecified)\"} = parseJSON(\n            me.targetNode.children[0].getAttribute(\"data-smark\")\n        ) || {};\n        throw me.renderError(\n            'LIST_UNKNOWN_TEMPLATE_ROLE'\n            , `Unknown list template role ${role}`\n        );\n    };\n    if (! templates.last_separator) {\n        templates.last_separator = templates.separator; // (If any)\n    };\n    if (\n        templates.item.querySelector(\"[id]\") !== null // Contains IDs\n    ) throw me.renderError(\n        'LIST_CONTAINS_ID'\n        , `List components are not allowed to contain elements with 'id' attribute`\n    );\n    return templates;\n};//}}}\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async #appendChild(child) {//{{{\n        const me = this;\n        if (me.templates.header) {\n            me.templates.header.after(child);\n        } else {\n            me.targetNode.appendChild(child);\n        };\n    };//}}}\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        me.templates = loadTemplates(me);\n        me.placeholders = [];\n        const tplOptions = me.getNodeOptions(\n            me.templates.item\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        for (const tpl of [\n            me.templates.header,\n            me.templates.footer,\n        ]) if (!! tpl) {\n            me.targetNode.appendChild(tpl);\n            // Enhance childs:\n            for (\n                const node\n                of getRoots(tpl, me.selector)\n            ) {\n                const newItem = await me.enhance(node);\n                if (!! newItem?._isField) {\n                    throw me.renderError(\n                        'FIELD_IN_WRONG_LIST_TEMPLATE'\n                        , `Fields are not allowed in list's template roles other than item.`\n                    );\n                };\n            };\n        };\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem({silent: true});\n\n            // Initialize \"count\" actions and reinject empty_list template:\n            if (me.min_items == 0) await me.renum();\n\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n    };//}}}\n    onTriggerRender({action, origin, context}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const emptyChilds = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) {\n                if (list.length < me.min_items) emptyChilds.push(child);\n                continue;\n            };\n            list.push(await child.export(null, {silent: true}));\n        };\n        for (let i=0; list.length < me.min_items; i++) {\n            list.push(await emptyChilds[i].export(null, {silent: true}));\n        };\n        return list;\n    };//}}}\n    @action\n    @import_from_target\n    async import(data = [], {focus} = {}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! (data instanceof Array)) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem({silent: true}); // Make room on demand\n            await me.children[i].import(data[i], {focus, silent: true});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem({silent: true});\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].clear({silent: true});\n        if (focus) me.focus();\n        return; // await me.export(null, {silent: true});\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(_data, options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        options.action = \"addItem\";\n        options.origin ||= null; // (Internal call)\n        options.context ||= me;  // (Internal call)\n        options.source ||= null; // Source component to copy data from.\n        options.target ||= null; // Target child component to insert before/after.\n        options.position ||= \"after\";\n        options.autoscroll ||= null;   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n        options.failback ||= \"throw\";  // \"none\" / \"throw\" (default)\n        if (options.position != \"after\" && options.position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${options.position}`\n        );\n        if (me.children.length >= me.max_items) {\n            switch (options.failback) {\n                case \"none\":\n                    break;\n                case \"throw\":\n                default:\n                    me.emit(\"error\", {\n                        code: 'LIST_MAX_ITEMS_REACHED',\n                        message: `Cannot add items over max_items boundary`,\n                        options,\n                    });\n            };\n            return;\n        };\n        if (me.children.length && ! options.target) options.target = ( // Auto target:\n            options.position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.templates.item.cloneNode(true);\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            await me.#appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(options.target.targetNode)) {\n                        return child;\n                    } else {\n                        // Append or prepend new item to the target child:\n                        child.targetNode[options.position](newItemTarget);\n                            // Note that options.position is ensured to be \"after\" or \"before\" above.\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        const chunk = [child, newItem];\n                        // Ensure correct order:\n                        if (options.position == \"before\") chunk.reverse();\n                        return chunk; // Array that will be flattened later...\n                    };\n                })\n            ))\n                .flat()\n            ;\n        };\n        await me.renum();\n        //}}}\n        // Copy data from source component if specified:{{{\n        if (options.source) {\n            const sourceComponent = newItem.find(options.source);\n            if (!! sourceComponent) {\n                const data = await sourceComponent.export();\n                await newItem.import(data, {silent: true});\n            };\n        };\n        //}}}\n        // Autoscroll handling:{{{\n        if (options.autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : options.autoscroll == \"self\" ? newItem\n                : options.autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        if (me.renderedSync) newItem.focus();\n        return newItem;\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(_data, options = {}) {//{{{\n        const me = this;\n        options.action = \"removeItem\";\n        options.origin ||= null; // (Internal call)\n        options.context ||= me;  // (Internal call)\n        options.target ||= null; // Target child component to remove.\n        options.autoscroll ||= null;   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n        let preserve_non_empty = options.preserve_non_empty ||= false;\n        options.failback ||= \"throw\";  // \"none\" / \"clear\" / \"throw\" (default)\n        if (! options.target) {\n            if (preserve_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                options.target = t;\n                break;\n            };\n            if (! options.target) {\n                options.target = me.children[me.children.length - 1];\n                preserve_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            options.target instanceof Array ? options.target\n            : [options.target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (options.failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.clear({silent: true});\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (preserve_non_empty && ! await currentTarget.isEmpty()) continue;\n            // Locate target child and rebuild children array without it:{{{\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (options.autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                options.autoscroll == \"self\" ? child\n                                : options.autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n                        oldItem = child;\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n                        return false;\n                    };\n                    return true;\n                })\n            ;\n            // }}}\n            // Perform removal:{{{\n            await me.emit(\"removeItem_beforeRender\", {\n                ...options,\n                target: oldItem,\n                targetNode: oldItem.targetNode,\n            }, false);\n            await oldItem.unrender();\n            me.children = newChildren;\n            await me.renum();\n            await me.emit(\"removeItem_afterRender\", {\n                ...options,\n                target: oldItem,\n                targetNode: oldItem.targetNode,\n            }, false);\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n            // }}}\n        };\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear(_data, {focus} = {}) {//{{{\n        const me = this;\n        return await me.import([], {focus, silent: true});\n    };//}}}\n    @action\n    count(_data, {delta = 0} = {}) {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length + Number(delta);\n    };//}}}\n    @action\n    position(_data, {target, offset = 1} = {}) {//{{{\n        return Number(target?.name) + Number(offset);\n    };//}}}\n    async renum(){//{{{\n        const me = this;\n\n        // Update child index:\n        for (const i in me.children) {\n            me.children[i].name = i;\n            me.children[i].updateId();\n        };\n\n        // Handle separators:\n        if (\n            !! me.templates.separator\n            || !! me.templates.last_separator\n        ) for (const i in me.children) {\n\n            const isLastNode = i >= me.children.length - 1;\n            const sepRole = (\n                i <= 0 ? null\n                : isLastNode ? \"last_separator\"\n                : \"separator\"\n            );\n\n            const currentNode = me.children[i].targetNode;\n            const prevNode = currentNode.previousElementSibling;\n            const prevNode_role = prevNode && prevNode.getAttribute(\"data-role\");\n            if (prevNode_role !== sepRole) {\n                if (!! prevNode_role) prevNode.remove();\n                const sepTemplate = me.templates[sepRole];\n                if (!! sepRole && !! sepTemplate) currentNode.parentElement.insertBefore(sepTemplate.cloneNode(true), currentNode);\n            };\n            if (isLastNode) { // LastItem\n                const nextNode = currentNode.nextElementSibling;\n                if (!! nextNode) nextNode.remove();\n            };\n\n        };\n\n        // Handle empty_list template:\n        if (me.templates.empty_list) {\n            if (me.children.length) {\n                me.templates.empty_list.remove(); // (from DOM)\n            } else {\n                await me.#appendChild(me.templates.empty_list);\n            };\n        };\n\n        // Handle placeholder template:\n        if (\n            me.templates.placeholder\n            && !! me.max_items // (Only if we have a finite padding limit)\n        ) {\n            let placeHoldersCount = (me.max_items || 0) - me.children.length;\n            if (\n                placeHoldersCount > 0\n                && me.children.length === 0\n                && !! me.templates.empty_list\n            ) placeHoldersCount--; // Discount the hole occupied by empty_list\n            if (me.placeholders.length < placeHoldersCount) {\n                for (let i = me.placeholders.length; i < placeHoldersCount; i++) {\n                    const placeholder = me.templates.placeholder.cloneNode(true);\n                    if (me.templates.footer) {\n                        me.templates.footer.before(placeholder);\n                    } else {\n                        me.targetNode.appendChild(placeholder);\n                    };\n                    me.placeholders.push(placeholder);\n                };\n            } else { // me.placeholders.length >= placeHoldersCount\n                for (let i = me.placeholders.length; i > placeHoldersCount; i--) {\n                    me.placeholders.pop().remove();\n                };\n            };\n        };\n\n        // Update counter triggers:\n        me.getTriggers(\"position\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.position(args.data, {...args, silent: true});\n        });\n        me.getTriggers(\"count\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.count(args.data, {...args, silent: true});\n        });\n    };//}}}\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.templates.item.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ];\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ];\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n                me.renum();\n            };//}}}\n        };\n    };\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nexport class input extends form {\n    constructor(...args) {//{{{\n        super(...args);\n        const me = this;\n        me.eventHooks.keydown.push(\n            function keydown_hook(ev) {\n                if (ev.defaultPrevented) return;\n                if (ev.originalEvent.key === \"Enter\") {\n                    const backwards = ev.originalEvent.shiftKey;\n                    if (\n                        ev.context.targetNode.tagName === \"TEXTAREA\"\n                        && ! ev.originalEvent.ctrlKey\n                        && ! backwards\n                    ) return; // Require Ctrl key to escape textareas.\n                    let nextField = (\n                        ! backwards ? ev.context.find(\".+1\") || ev.context.find(\"../.+1\")\n                        : ev.context.find(\".-1\") || ev.context.find(\"../.-1\")\n                    );\n                    if (nextField) {\n                        nextField.focus();\n                        ev.originalEvent.preventDefault();\n                        ev.originalEvent.stopPropagation();\n                    };\n                };\n            },\n        );\n    }; // }}}\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const sons = Object.values(me.children);\n            if (sons.length != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${sons.length} found.`\n            );\n            const son = sons[0];\n            if (me.options.type !== son.options.type) throw me.renderError(\n                'SINGLETON_TYPE_MISMATCH'\n                , `Singleton type (${me.options.type})`\n                + ` does not match child field type (${son.options.type}).`\n            );\n            me.targetFieldNode = son.targetNode;\n        } else {\n            me.targetFieldNode = me.targetNode;\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export(_data, options) {//{{{\n        const me = this;\n        if (me.isSingleton) return await me.children[\"\"].export(_data, options);\n        const nodeFld = me.targetFieldNode;\n        let retv;\n        if (me.isCheckbox) {\n            retv = !! nodeFld.checked;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n            && nodeFld.options[nodeFld.selectedIndex]?.getAttribute(\"value\") === null\n        ) {\n            // Keep fallback working when encoding is json and value attribute is not set.\n            // (and don't expetct <opton> inner text to be JSON)\n            retv = JSON.stringify(nodeFld.options[nodeFld.selectedIndex].text);\n        } else {\n            retv = nodeFld.value;\n        };\n        return (\n            me.options.encoding === \"json\" ? parseJSON(retv) || null\n            : retv\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import(data = \"\", options = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await me.children[\"\"].import(data, options);\n        let {focus = true} = options;\n        const nodeFld = me.targetFieldNode;\n        if (\n            typeof data === \"object\"\n            && me.options.type === \"input\"    // Not in a derivated field types\n            || me.options.encoding === \"json\" // JSON encoding specified\n        ) {\n            data ||= null;\n            const isTextarea = nodeFld.tagName.toUpperCase() === \"TEXTAREA\";\n            data = (\n                isTextarea ? JSON.stringify(data, null, 4) // Pretty print\n                : JSON.stringify(data) // Compact print\n            ) || \"\";\n        };\n        if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n        ) {\n            me.targetNode.value = (data || \"null\"); // Faster, but won't work if value attribute is not set.\n            if (nodeFld.selectedIndex === -1) {\n                // Fallback when value attribute is not set.\n                const parsed = parseJSON(data) || \"\";\n                const idx = Array.from(nodeFld.options).findIndex(\n                    opt => opt.text === parsed\n                );\n                if (idx !== -1) nodeFld.selectedIndex = idx;\n            };\n        } else {\n            me.targetNode.value = data;\n        };\n        if (focus) me.focus();\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export(null, {silent: true})\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async clear(_data, {focus} = {}) {//{{{\n        const me = this;\n        await me.import(\n            me.options.encoding === \"json\" ? null : \"\"\n            , {focus}\n        );\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import(data = null, options = {}) {//{{{\n        const me = this;\n        const typename = typeof data;\n        if (me.isSingleton) return await super.import(data, options); // Overload only inner field\n        const retv =  await super.import((\n            typename == \"number\" ? data\n            : typename == \"string\" && data.length && ! isNaN(data) ? Number(data)\n            : null\n        ), options);\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export(null, {silent: true});\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import(data = null, {focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await super.import(data, {focus}); // Overload only inner field\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        const retv = await super.import((\n            isNaN(value) ? null\n            : ISODate(value)\n        ), {focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export(null, {silent: true});\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        let master = me.parent.children[me.name];\n        let retv = me;\n        if (master) {\n            me.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons.push(me.targetNode);\n            retv = {}; // Not the master field.\n        } else {\n            master = me;\n            // Provide unique name for DOM navigation to work properly:\n            master.sharedNodeName = randomId();\n            master.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons = [\n                master.targetNode\n            ];\n        };\n        let changeEventHandler = onRadioInteraction.bind(master);\n        me.targetNode.addEventListener(\"click\", changeEventHandler);\n        me.targetNode.addEventListener(\"keydown\", changeEventHandler);\n        return retv;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value || null;\n    };//}}}\n    @action\n    @import_from_target\n    async import(data = null, {focus = true} = {}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) {\n            selected.checked = true;\n        } else {\n            this.radioButtons.forEach(r=>r.checked = false);\n        };\n        if (focus) this.focus();\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\nfunction onRadioInteraction(event) {//{{{\n    if (\n        event.type === \"click\"\n        || event.type === \"keydown\" && event.code === \"Delete\"\n        // NOTE: Some browsers also send fake click events for toggling radio\n        //       buttons.\n        //       This approach avoids to interfere with that behavior while\n        //       ensuring a consistent keyboard resetting method (through the\n        //       Delete key).\n    ) {\n        const me = this;\n        let checked = true; // All raddio buttons become checked on click.\n        const lastSelection = Object.is(me.lastClicked?.target, event.target);\n        if (lastSelection) checked = (\n            ! me.lastClicked.checked    // Click  => Toggle\n            && event.type !== \"keydown\" // Delete => Reset\n        );\n        me.lastClicked = {\n            target: event.target,\n            checked,\n        };\n        event.target.checked = checked;\n    };\n};//}}}\n","// types/color.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_color = /^#([a-f0-9]{3}){1,2}$/i;\nconst disabled_style = `\n    opacity: .5;\n    background: repeating-linear-gradient(\n            45deg,\n            black,\n            black 10px,\n            white 10px,\n            white 20px\n        ),\n        black;\n    background-blend-mode: difference;\n`;\nexport class color extends input {\n    constructor(...args) {\n        super(...args);\n        // Add keydown hook to handle \"Delete\" key:\n        this.eventHooks.keydown.push ( ev => {\n            if (ev.defaultPrevented) return;\n            if (ev.originalEvent.key === \"Delete\") {\n                ev.context.clear();\n            };\n        });\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n\n        if (me.isSingleton) return; // (Only for real field)\n\n        // Check targetField's type attribute:\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"color\").toLowerCase() != \"color\"\n        ) throw me.renderError(\n            'NOT_A_COLOR_FIELD'\n            , `Color inputs require an INPUT tag of type \"color\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"color\"; // Autofill\n\n        // Iniitialize me.isDefined flag:\n        const valueAttr = me.targetFieldNode.getAttribute(\"value\");\n        me.isDefined = (\n            valueAttr !== null         // value property not defined\n            && valueAttr.trim() !== \"\" // value property defined (string)\n        );\n\n        // Remember original \"style\" attribute and update if appropriate:\n        me.defaultStyleAttr = me.targetFieldNode.getAttribute(\"style\") + \";\";\n        if (! me.isDefined) me.targetFieldNode.setAttribute(\n            \"style\"\n            , me.defaultStyleAttr + disabled_style\n        );\n\n        // Handle me.isDefined set:\n        const resetDefined = ev=>{\n            if (\n                ev.code    !== \"Enter\"\n                && ev.Code !== \"Space\"\n                && ev.code !== undefined // ev.type must be \"click\" or \"change\"\n                    // && ev.type !== \"click\" // Click event\n                    // && ev.type !== \"change\" // Change event\n            ) return;\n            me.isDefined = true;\n            me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n        };\n        me.targetFieldNode.addEventListener(\"keydown\", resetDefined);\n        me.targetFieldNode.addEventListener(\"click\", resetDefined);\n        me.targetFieldNode.addEventListener(\"change\", resetDefined);\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        let data = await super.export(...args);\n        if (! me.isSingleton) data = (\n            me.isDefined && data.match(re_color) ? data.toLowerCase()\n            : null\n        );\n        return data;\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import(data = null, options = {}) {//{{{\n        const me = this;\n        if (\n            ! me.isSingleton // Only for real field\n        ) {\n            if (\n                data === null              // Explicit null value\n                || ! data.match(re_color)  // Invalid color value\n            ) {\n                me.isDefined = false;\n                me.targetFieldNode.setAttribute(\n                    \"style\"\n                    , me.defaultStyleAttr + disabled_style\n                );\n            } else {\n                me.isDefined = true;\n                me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n            };\n        };\n        if (data?.length == 4) data = `#${data[1]}${data[1]}${data[2]}${data[2]}${data[3]}${data[3]}`;\n        const value = await super.import(data, options);\n        return (\n            me.isDefined ? value\n            : null\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export(null, {silent: true});\n        return value === null;\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\nimport {color} from \"./types/color.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n    color,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["getRoots","target","selector","isTop","parentNode","n","isSameNode","querySelectorAll","filter","e","closest","makeRoom","element","pixels","parent","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","substring","parseJSON","str","JSON","parse","err","sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","supportedFieldEventTypes","registerEvHandler","evList","evType","evHandler","has","set","get","push","bind","this","legacy","disEnhance","me","targetNode","tagName","toLowerCase","addEventListener","event","preventDefault","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","errors","Error","constructor","code","message","path","super","concat","stack","split","slice","join","_SmarkComponent","_SmarkComponent2","_ref","arguments","length","undefined","property_name","options","_objectWithoutProperties","_excluded","validName","counter","isSingleton","_len","names","Array","_key","n0","trim","actions","types","setNodeOptions","SmarkComponent","renderError","root","parents","iterator","current","autoId","inherittedOption","setRendered","genId","p","replace","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","emit","context","onRendered","unrender","remove","cbk","getNodeOptions","node","defaultOptions","optionsSrc","dataset","_objectSpread","opt","match","type","action","parentComponent","String","getAttribute","inferType","stringify","enhance","ctrl","getComponent","_target$parentElement","parentElement","getPath","map","name","reverse","find","base","parts","x","firstWildcardPos","findIndex","re_pattern","wname","RegExp","pivotPath","restPath","pivot","Object","entries","_ref2","child","_ref3","flat","Infinity","reduce","delta","parseInt","isNaN","keys","currentPosition","key","newKey","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","myCurrentActions","actionKeys","Set","returnAll","tgg","getTriggerArgs","is","updateId","newId","values","focus","fname","targetFieldNode","_me$parent","error","errorNode","createElement","setAttribute","appendChild","createTextNode","clicableNode","textContent","console","replaceWith","replaceWrongNode","_initClass","_applyDecs","targetComponentType","kind","onOptionCallbacks","value","args","Map","onLocal","onAll","on","eventHooks","parentStore","arrayStore","prop","defineProperty","Proxy","_dynamic","createArrayPuller","ev","targetComponent","evData","originalEvent","stopPropagation","stopImmediatePropagation","evt","handler","listenLevel","preventable","propagationStopped","immediatePropagationStopped","defaultPrevented","targetHandlers","parentHandlers","eventHook","c","SmarkField","_isField","hasOwnProperty","createType","controller","prototype","hotKeys_handler","form","revealed","onStatusChange","reveal","ctrlKey","altKey","level","targettedTrigger","t","hotkey","disabled","click","removeAttribute","component","activeContexts","upwards","getComponentSiblings","getActiveContexts","candidateTriggers","ctx","distance","candidates","tg","sort","ta","tb","_ta$args$target","_tb$args$target","atargetnode","btargetnode","bcontained","contains","acontained","seen","candidate","times","_context$parent","position","brothers","backwards","targetMtd","addInitializer","async","data","silent","call","trigger","_triggerArgs$context","triggerArgs","onTriggerRender","disable","enable","_me$options","contextPath","targetPath","otherOptions","_p$parent","origin","onTriggerClick","mtd","label","allow_select","getLabelArgs","newItem","nodeType","labelledField","alb_arr","indexOf","style","_excluded2","found","childName","foldable","_foldableTarget","_initProto","retv","fold","operation","folded","_data","wasFolded","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","export_to_target","method","import","import_from_target","export","_form","updateTriggers","min_items","failback","max_items","_form2","fromEntries","all","dataConstructor","isEmpty","clear","smartdisabling","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","mutex","muxName","unlock","_list","_list_brand","WeakSet","_exportDecs","_addItemDecs","_removeItemDecs","_appendChild","templates","header","after","_list2","_classPrivateMethodInitSpec","max","role","last_separator","separator","item","querySelector","loadTemplates","placeholders","tplOptions","of","tpl","footer","i","addItem","renum","list","emptyChilds","stripEmpties","min","removeItem","source","autoscroll","newItemTarget","cloneNode","chunk","_assertClassBrand","sourceComponent","offsetHeight","moveTarget","preserve_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","count","Number","offset","isLastNode","sepRole","currentNode","prevNode","previousElementSibling","prevNode_role","sepTemplate","insertBefore","nextNode","nextElementSibling","empty_list","placeholder","placeHoldersCount","before","pop","innerText","_sortableTarget","_moveDecs","sortable","dragSource","dragDest","move","from","to","fromi","toi","newChunk","splice","moveMethod","input","keydown","shiftKey","nextField","isCheckbox","sons","son","_nodeFld$options$node","nodeFld","checked","encoding","toUpperCase","selectedIndex","text","parsed","idx","_input","number","targetTag","targetType","typename","_number","re_timePart","parseDateStr","Date","NaN","ISODate","toISOString","date","_date","radio","master","sharedNodeName","radioButtons","changeEventHandler","onRadioInteraction","_this$radioButtons$fi","r","selected","_me$lastClicked","lastClicked","_radio","re_color","disabled_style","color","valueAttr","isDefined","defaultStyleAttr","resetDefined","Code","_color","SmarkForm","customActions"],"mappings":"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"}