{"version":3,"file":"SmarkForm.umd.js","sources":["../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/lib/helpers.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/decorators/export_to_target.deco.js","../src/decorators/import_from_target.deco.js","../src/types/form.type.js","../src/types/list.decorators/smartdisabling.deco.js","../src/decorators/mutex.deco.js","../src/types/list.decorators/sortable.deco.js","../src/types/list.type.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/types/color.type.js","../src/main.js"],"sourcesContent":["// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\nexport const events = function events_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnebledTarget extends target {\n            constructor(target, optionsSrc, ...args) {\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                const ImRoot = Object.is(me, me.root);\n                me[sym_local_events] = new Map();\n                if (ImRoot) me.root[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me.root, me.root[sym_all_events]);\n                me.on = me.onLocal; // Handy and readable alias for local events.\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };\n            async emit(evType, evData) {\n                const me = this;\n                const handlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me.root[sym_all_events].get(evType) || []),\n                ];\n                let defaultPrevented = false;\n                if (handlers.length) {\n                    let propagationStopped = false;\n                    evData.preventDefault = () => defaultPrevented = true;\n                    evData.stopPropagation = () => propagationStopped = true;\n                    for (const handler of handlers) {\n                        if (propagationStopped) break;\n                        await handler(evData);\n                    };\n                };\n                return ! defaultPrevented;\n            };\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            if (parentComponent.isSingleton) return parentComponent.options.type;\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                case \"color\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        let base=this;\n        path = String(path); // Allow numbers (arrays simply won't match).\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            (current, name)=>{\n                if (current === undefined) return null;   // No match.\n                if (name == \"..\") return current.parent;  // Go up one level.\n                if ( // Special syntax for list siblings (.+n / .-n)\n                    name[0] == \".\"\n                    && current.parent?.options?.type == \"list\"\n                ) {\n                    const delta = parseInt(name.slice(1));\n                    const n = parseInt(current.name) + delta;\n                    if (! isNaN(n)) return current.parent.children[n];\n                };\n                return current.children[name];\n            }\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of me.parents\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (! Object.is(options.context, me)) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        if (me.targetFieldNode) me.targetFieldNode.focus();\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        return new errors.renderError(code, message, me.getPath());\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n            if (this.options.hasOwnProperty(\"value\")) {\n                if (this.targetNode.getAttribute(\"value\") !== null) { // Conflict\n                    throw me.renderError(\n                        'VALUE_CONFLICT'\n                        , `Initial value specied both as \"value\" option and HTML \"value\" attribute.`\n                    );\n                };\n                this.targetNode.setAttribute(\"value\", this.options.value);\n            };\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        me.form.targetNode.addEventListener(\n            \"keydown\"\n            , me.onKeydown.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"keyup\"\n            , me.onKeyup.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusout\"\n            , me.onFocusout.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusin\"\n            , me.onFocusin.bind(me)\n            , true\n        );\n    };\n    onKeydown(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(ev.target); // Activate and reveal.\n        } else if (ev.ctrlKey) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                targettedTrigger.targetNode.click();\n            };\n        };\n    };\n    onKeyup(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(false); // Deactivate\n        };\n    };\n    onFocusout(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(); // Unreveal, keep activated.\n        };\n    };\n    onFocusin(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(ev.target); // Update revealed triggers\n        };\n    };\n    reveal(target) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = [component, ...component.parents];\n            const activeContextsSet = new Set(activeContexts);\n\n            const candidateTriggers = activeContexts\n                .map((c, lv)=>(\n                    c.getTriggers('*')    // All triggers.\n                    .map(tg=>({\n                        tg,\n                        lv,   // Ancestor level.\n                        args: tg.getTriggerArgs() || {},\n                        hotkey: String(tg.options.hotkey || \"\"),\n                    }))\n                ))\n                .flat()\n                .filter(({args, hotkey})=>(\n                    hotkey.length\n                    && activeContextsSet.has(args.context)\n                ))\n                .sort((ta,tb)=>(\n                    activeContextsSet.has(tb.args.target)\n                    - activeContextsSet.has(ta.args.target)\n                    - tb.lv\n                    + ta.lv\n                ))\n            ;\n\n            const usedKeys = new Set();\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                if (usedKeys.has(candidate.hotkey)) continue; // Used by more preferent tg.\n                if (! candidate.tg.targetNode.disabled) {\n                    candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                };\n                // (UX): Perform the following even if disabled for behavioral\n                // consistency...\n                usedKeys.add(candidate.hotkey); // ...don't activate others in place.\n                me.revealed.push(candidate.tg); // ...keep preventing event propagation.\n            };\n\n        };\n\n    };\n};\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nconst beforeEvent = Symbol(\"beforeEventName\");\nconst afterEvent = Symbol(\"afterEventName\");\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        this.actions[name] = targetMtd.bind(this);\n        this.actions[name][beforeEvent] = `BeforeAction_${name}`;\n        this.actions[name][afterEvent] = `AfterAction_${name}`;\n    });\n};\n\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        const {\n            // property: local variable\n            action: actionSpec,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! actionSpec) return; // Not a trigger component.\n\n        // Allow binding triggers to specific component types:\n        // (Syntax \"type:action\")\n        let [actionName, targetType] = actionSpec.split(\":\").reverse();\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>{\n                if (targetType && p.options.type != targetType) return false;\n                if (typeof p.actions[actionName] != \"function\") return false;\n                return true;\n            })\n        );\n\n        const target = (\n            targetPath ? context.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : (\n                parents\n                    .slice(1) // Skip self\n                    .find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n                || null\n            )\n        );\n\n        return {\n            action: actionName,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    if (await me.emit(mtd[beforeEvent], options)) {\n        const data = await mtd(options);\n        me.emit(mtd[afterEvent], {...options, data});\n    };\n};\n\n\n","\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {//{{{\n    return Math.random().toString(36).substring(2);\n};//}}}\n\nexport function parseJSON(str) {//{{{\n    try {\n        return JSON.parse(str);\n    } catch (err) {};\n};//}}}\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\n\n// TODO:\n// =====\n//\n//   🚀 Add support for (smarkform) fields contained in the label.\n//      👉 Now we can just not enhance the label (<label>Bla bla bla<input\n//         data-smark></label>) and it will (in this case natively) work.\n//      👉 ...but this does not allow us to use other SmarkForm fields such as\n//         forms and lists (since they can contain more than one native field\n//         which is not allowed by <label> tag.\n//      💡 But we can use different tag (with {data-smark=\"label\"}) and just\n//         create the native <label> tag around the text.\n//\n//   🚀 Implement \"text templating\" feature.\n//      👉 This should allow to include contextual data in the text of the\n//         label.\n//      ⚡ For example, list item position for list items...\n//\n\nexport class label extends SmarkComponent {\n    constructor(node, {allow_select = false, ...options}, ...args){\n        delete options.name; // Labels are always unnamed.\n        return super(node, {allow_select, ...options}, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const labelArgs = me.getLabelArgs();\n            const {targetFieldNode} = labelArgs.target || {};\n            if (targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! targetFieldNode.id) { // Ensure targetted field has an Id\n                    targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", targetFieldNode.id);\n            };\n            if (! me.options.allow_select) {\n                // Make labels non-selectable unless \"allow_select\" option\n                // is set  to true.\n                me.targetNode.style[\"user-select\"] = \"none\";\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold({operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold({//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n            };//}}}\n        };\n    };\n};\n","// src/decorators/export_to_target.deco.js\n// =======================================\n\nexport const export_to_target = function export_to_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function export_mtd({target, ...options}={}) {\n            const me = this;\n            const value = await method.call(me, options);\n            try {\n                await target.import({data: value});\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return value;\n        };\n    };\n};\n","// src/decorators/import_from_target.deco.js\n// =========================================\n\nexport const import_from_target = function import_from_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function import_mtd({target, data, ...options}={}) {\n            const me = this;\n            try {\n                data = await target.export();\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return await method.call(me, {data, ...options});\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {getRoots, parseJSON} from \"../lib/helpers.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export()]\n            ))\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = {}, focus = true} = {}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (\n            dataConstructor !== {}.constructor // Not a plain object\n            && ! (data = parseJSON(data))      // Neither a (valid) JSON string\n        ) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object or vailid JSON for form import, ${dataConstructor.name} given.`\n        );\n        const retv = Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import({data: data[key], focus});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n        if (focus) me.focus();\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: {}, focus});\n    };//}}}\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_decorator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.templates.item.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ];\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ];\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n                me.renum();\n            };//}}}\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\n// TODO:\n// =====\n//\n// 👉 Keep first item in place:\n//    -------------------------\n//     \n//    For lists allowing 0 items, make first element disabled and not visible\n//    instead of completely removing from DOM.\n//\n//    This would avoid lots of visual layout issues.\n//\n\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\nimport {makeRoom, getRoots, parseJSON} from \"../lib/helpers.js\";\n\n\n// Private helpers:\n// ----------------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\nfunction loadTemplates(me) {//{{{\n    const templates = {};\n    for (const child of [...me.targetNode.children]) {\n        const {role = \"item\"} = parseJSON(child.getAttribute(\"data-smark\")) || {};\n        switch (role) {\n            case \"empty_list\":\n            case \"header\":\n            case \"separator\":\n            case \"last_separator\":\n            case \"footer\":\n            case \"placeholder\": // (Only with max_items defined)\n                child.setAttribute(\"data-role\", role);\n            case \"item\": // (Default)\n                if (templates[role] !== undefined) throw me.renderError(\n                    'LIST_DUPLICATE_TEMPLATE'\n                    , `Repated list template role ${role}`\n                );\n                templates[role] = child;\n                templates[role].remove();\n            break;\n        };\n    };\n    if (me.targetNode.children.length) {\n        const {role = \"(unspecified)\"} = parseJSON(\n            me.targetNode.children[0].getAttribute(\"data-smark\")\n        ) || {};\n        throw me.renderError(\n            'LIST_UNKNOWN_TEMPLATE_ROLE'\n            , `Unknown list template role ${role}`\n        );\n    };\n    if (! templates.last_separator) {\n        templates.last_separator = templates.separator; // (If any)\n    };\n    if (\n        templates.item.querySelector(\"[id]\") !== null // Contains IDs\n    ) throw me.renderError(\n        'LIST_CONTAINS_ID'\n        , `List components are not allowed to contain elements with 'id' attribute`\n    );\n    return templates;\n};//}}}\n\n\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async #appendChild(child) {//{{{\n        const me = this;\n        if (me.templates.header) {\n            me.templates.header.after(child);\n        } else {\n            me.targetNode.appendChild(child);\n        };\n    };//}}}\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        me.templates = loadTemplates(me);\n        me.placeholders = [];\n        const tplOptions = me.getNodeOptions(\n            me.templates.item\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        for (const tpl of [\n            me.templates.header,\n            me.templates.footer,\n        ]) if (!! tpl) {\n            me.targetNode.appendChild(tpl);\n            // Enhance childs:\n            for (\n                const node\n                of getRoots(tpl, me.selector)\n            ) {\n                const newItem = await me.enhance(node);\n                if (!! newItem?._isField) {\n                    throw me.renderError(\n                        'FIELD_IN_WRONG_LIST_TEMPLATE'\n                        , `Fields are not allowed in list's template roles other than item.`\n                    );\n                };\n            };\n        };\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem();\n\n            // Initialize \"count\" actions and reinject empty_list template:\n            if (me.min_items == 0) await me.renum();\n\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n        return;\n    };//}}}\n    onTriggerRender({action, origin, context}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const emptyChilds = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) {\n                if (list.length < me.min_items) emptyChilds.push(child);\n                continue;\n            };\n            list.push(await child.export())\n        };\n        for (let i=0; list.length < me.min_items; i++) {\n            list.push(await emptyChilds[i].export());\n        };\n        return list;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = [], focus} = {}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! (data instanceof Array)) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem(); // Make room on demand\n            await me.children[i].import({data: data[i], focus});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem();\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].clear();\n        if (focus) me.focus();\n        return; // await me.export();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            source = null,\n            target,\n            position = \"after\",\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            failback,\n        } = options;\n        if (position != \"after\" && position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${position}`\n        );\n        if (me.children.length >= me.max_items) {\n            switch (failback) {\n                case \"none\":\n                    break;\n                case \"throw\":\n                default:\n                    me.emit(\"error\", {\n                        code: 'LIST_MAX_ITEMS_REACHED',\n                        message: `Cannot add items over max_items boundary`,\n                        options,\n                    });\n            };\n            return;\n        };\n        if (me.children.length && ! target) target = ( // Auto target:\n            position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.templates.item.cloneNode(true);\n        //}}}\n        // addItem event emitting:{{{\n        const onRenderedCbks = [];\n            // Allow for handy callback instead of two separate event handlers\n        await me.emit(\"addItem\", {\n                action,\n                origin,\n                context,\n                target,  // <--- Effective target.\n                position,\n                newItemTarget,\n                options, // <- Original options (including target)\n                onRendered: cbk => onRenderedCbks.push(cbk),\n        });\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            await me.#appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(target.targetNode)) return child;\n                    if (position == \"after\") {\n                        child.targetNode.after(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [child, newItem]; // Right order, flatted later...\n                    } else {\n                        child.targetNode.before(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [newItem, child]; // Right order, flatted later...\n                    };\n                })\n            ))\n                .flat()\n            ;\n        };\n        await me.renum();\n        //}}}\n        // Copy data from source component if specified:{{{\n        if (source) {\n            const sourceComponent = newItem.find(source);\n            if (!! sourceComponent) {\n                const data = await sourceComponent.export();\n                newItem.import({data});\n            };\n        };\n        //}}}\n        // Autoscroll handling:{{{\n        if (autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : autoscroll == \"self\" ? newItem\n                : autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        // Execute \"onRendered\" callbacks:{{{\n        onRenderedCbks.forEach(cbk=>cbk(newItem));\n        //}}}\n        if (me.renderedSync) newItem.focus();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(options = {}) {//{{{\n        const me = this;\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            keep_non_empty,\n            failback,\n        } = options;\n        if (! target) {\n            if (keep_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                target = t;\n                break;\n            };\n            if (! target) {\n                target = me.children[me.children.length - 1];\n                keep_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            target instanceof Array ? target\n            : [target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.clear();\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (keep_non_empty && ! await currentTarget.isEmpty()) continue;\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                autoscroll == \"self\" ? child\n                                : autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n\n                        oldItem = child;\n\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n\n                        return false;\n                    };\n                    return true;\n                })\n            ;\n            // removeItem event emitting:{{{\n            const onRemovedCbks = [];\n                // Allow for handy callback instead of two separate event handlers\n            await me.emit(\"removeItem\", {\n                action,\n                origin,\n                context,\n                target: currentTarget,  // <--- Effective target.\n                oldItem,                 // Child going to be removed.\n                oldItemTarget: oldItem.targetNode, // Its target (analogous to addItem event).\n                options,\n                onRemoved: cbk => onRemovedCbks.push(cbk),\n            });\n            //}}}\n\n            oldItem.targetNode.remove();\n            me.children = newChildren;\n            await me.renum();\n\n            // Execute \"onRemoved\" callbacks:{{{\n            onRemovedCbks.forEach(cbk=>cbk());\n            //}}}\n\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n\n        };\n\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: [], focus});\n    };//}}}\n    @action\n    count({delta = 0} = {}) {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length + Number(delta);\n    };//}}}\n    @action\n    position({target, offset = 1} = {}) {//{{{\n        return Number(target?.name) + Number(offset);\n    };//}}}\n    async renum(){//{{{\n        const me = this;\n\n        // Update child index:\n        for (const i in me.children) {\n            me.children[i].name = i;\n            me.children[i].updateId();\n        };\n\n        // Handle separators:\n        if (\n            !! me.templates.separator\n            || !! me.templates.last_separator\n        ) for (const i in me.children) {\n\n            const isLastNode = i >= me.children.length - 1;\n            const sepRole = (\n                i <= 0 ? null\n                : isLastNode ? \"last_separator\"\n                : \"separator\"\n            );\n\n            const currentNode = me.children[i].targetNode;\n            const prevNode = currentNode.previousElementSibling;\n            const prevNode_role = prevNode && prevNode.getAttribute(\"data-role\");\n            if (prevNode_role !== sepRole) {\n                if (!! prevNode_role) prevNode.remove();\n                const sepTemplate = me.templates[sepRole];\n                if (!! sepRole && !! sepTemplate) currentNode.parentElement.insertBefore(sepTemplate.cloneNode(true), currentNode);\n            };\n            if (isLastNode) { // LastItem\n                const nextNode = currentNode.nextElementSibling;\n                if (!! nextNode) nextNode.remove();\n            };\n\n        };\n\n        // Handle empty_list template:\n        if (me.templates.empty_list) {\n            if (me.children.length) {\n                me.templates.empty_list.remove(); // (from DOM)\n            } else {\n                await me.#appendChild(me.templates.empty_list);\n            };\n        };\n\n        // Handle placeholder template:\n        if (\n            me.templates.placeholder\n            && !! me.max_items // (Only if we have a finite padding limit)\n        ) {\n            let placeHoldersCount = (me.max_items || 0) - me.children.length;\n            if (\n                placeHoldersCount > 0\n                && me.children.length === 0\n                && !! me.templates.empty_list\n            ) placeHoldersCount--; // Discount the hole occupied by empty_list\n            if (me.placeholders.length < placeHoldersCount) {\n                for (let i = me.placeholders.length; i < placeHoldersCount; i++) {\n                    const placeholder = me.templates.placeholder.cloneNode(true);\n                    if (me.templates.footer) {\n                        me.templates.footer.before(placeholder);\n                    } else {\n                        me.targetNode.appendChild(placeholder);\n                    };\n                    me.placeholders.push(placeholder);\n                };\n            } else { // me.placeholders.length >= placeHoldersCount\n                for (let i = me.placeholders.length; i > placeHoldersCount; i--) {\n                    me.placeholders.pop().remove();\n                };\n            };\n        };\n\n        // Update counter triggers:\n        me.getTriggers(\"position\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.position(args);\n        });\n        me.getTriggers(\"count\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.count(args);\n        });\n    };//}}}\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nexport class input extends form {\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const sons = Object.values(me.children);\n            if (sons.length != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${sons.length} found.`\n            );\n            const son = sons[0];\n            if (me.options.type !== son.options.type) throw me.renderError(\n                'SINGLETON_TYPE_MISMATCH'\n                , `Singleton type (${me.options.type})`\n                + ` does not match child field type (${son.options.type}).`\n            );\n            me.targetFieldNode = son.targetNode;\n        } else {\n            me.targetFieldNode = me.targetNode;\n        };\n        return;\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        let retv;\n        if (me.isSingleton) {\n            retv = Object.values(await super.export())[0];\n        } else if (me.isCheckbox) {\n            retv = !! nodeFld.checked;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n            && nodeFld.options[nodeFld.selectedIndex]?.getAttribute(\"value\") === null\n        ) {\n            // Keep fallback working when encoding is json and value attribute is not set.\n            // (and don't expetct <opton> inner text to be JSON)\n            retv = JSON.stringify(nodeFld.options[nodeFld.selectedIndex].text);\n        } else {\n            retv = nodeFld.value;\n        };\n        return (\n            me.options.encoding === \"json\" ? parseJSON(retv) || null\n            : retv\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = \"\", focus = true} = {}) {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        if (\n            typeof data === \"object\"\n            && me.options.type === \"input\"    // Not in a derivated field types\n            || me.options.encoding === \"json\" // JSON encoding specified\n        ) {\n            data ||= null;\n            const isTextarea = nodeFld.tagName.toUpperCase() === \"TEXTAREA\";\n            data = (\n                isTextarea ? JSON.stringify(data, null, 4) // Pretty print\n                : JSON.stringify(data) // Compact print\n            ) || \"\";\n        };\n        if (me.isSingleton) {\n            return await super.import({data: Object.fromEntries(\n                [[Object.keys(me.children)[0], data]]\n            ), focus});\n        } else if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n        ) {\n            me.targetNode.value = (data || \"null\"); // Faster, but won't work if value attribute is not set.\n            if (nodeFld.selectedIndex === -1) {\n                // Fallback when value attribute is not set.\n                const parsed = parseJSON(data) || \"\";\n                const idx = Array.from(nodeFld.options).findIndex(\n                    opt => opt.text === parsed\n                );\n                if (idx !== -1) nodeFld.selectedIndex = idx;\n            };\n        } else {\n            me.targetNode.value = data;\n        };\n        if (focus) me.focus();\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export()\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        await me.import({\n            data: me.options.encoding === \"json\" ? null : \"\",\n            focus,\n        });\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        const typename = typeof data;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const retv =  await super.import({data:(\n            typename == \"number\" ? data\n            : typename == \"string\"\n                && data.length\n                && ! isNaN(data)\n                ? Number(data)\n            : null\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        const retv = await super.import({data:(\n            isNaN(value) ? null\n            : ISODate(value)\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        let master = me.parent.children[me.name];\n        let retv = me;\n        if (master) {\n            me.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons.push(me.targetNode);\n            retv = {}; // Not the master field.\n        } else {\n            master = me;\n            // Provide unique name for DOM navigation to work properly:\n            master.sharedNodeName = randomId();\n            master.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons = [\n                master.targetNode\n            ];\n        };\n        let changeEventHandler = onRadioInteraction.bind(master);\n        me.targetNode.addEventListener(\"click\", changeEventHandler);\n        me.targetNode.addEventListener(\"keydown\", changeEventHandler);\n        return retv;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value || null;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) {\n            selected.checked = true;\n        } else {\n            this.radioButtons.forEach(r=>r.checked = false);\n        };\n        if (focus) this.focus();\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\nfunction onRadioInteraction(event) {//{{{\n    if (\n        event.type === \"click\"\n        || event.type === \"keydown\" && event.code === \"Delete\"\n        // NOTE: Some browsers also send fake click events for toggling radio\n        //       buttons.\n        //       This approach avoids to interfere with that behavior while\n        //       ensuring a consistent keyboard resetting method (through the\n        //       Delete key).\n    ) {\n        const me = this;\n        let checked = true; // All raddio buttons become checked on click.\n        const lastSelection = Object.is(me.lastClicked?.target, event.target);\n        if (lastSelection) checked = (\n            ! me.lastClicked.checked    // Click  => Toggle\n            && event.type !== \"keydown\" // Delete => Reset\n        );\n        me.lastClicked = {\n            target: event.target,\n            checked,\n        };\n        event.target.checked = checked;\n    };\n};//}}}\n","// types/color.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nconst re_color = /^#([a-f0-9]{3}){1,2}$/i;\nconst disabled_style = `\n    opacity: .5;\n    background: repeating-linear-gradient(\n            45deg,\n            black,\n            black 10px,\n            white 10px,\n            white 20px\n        ),\n        black;\n    background-blend-mode: difference;\n`;\nexport class color extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n\n        if (me.isSingleton) return; // (Only for real field)\n\n        // Check targetField's type attribute:\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"color\").toLowerCase() != \"color\"\n        ) throw me.renderError(\n            'NOT_A_COLOR_FIELD'\n            , `Color inputs require an INPUT tag of type \"color\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"color\"; // Autofill\n\n        // Iniitialize me.isDefined flag:\n        const valueAttr = me.targetFieldNode.getAttribute(\"value\");\n        me.isDefined = (\n            valueAttr !== null         // value property not defined\n            && valueAttr.trim() !== \"\" // value property defined (string)\n        );\n\n        // Remember original \"style\" attribute and update if appropriate:\n        me.defaultStyleAttr = me.targetFieldNode.getAttribute(\"style\") + \";\";\n        if (! me.isDefined) me.targetFieldNode.setAttribute(\n            \"style\"\n            , me.defaultStyleAttr + disabled_style\n        );\n\n        // Handle me.isDefined set:\n        const resetDefined = ev=>{\n            if (\n                ev.code    !== \"Enter\"\n                && ev.Code !== \"Space\"\n                && ev.code !== undefined // ev.type must be \"click\" or \"change\"\n                    // && ev.type !== \"click\" // Click event\n                    // && ev.type !== \"change\" // Change event\n            ) return;\n            me.isDefined = true;\n            me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n        };\n        me.targetFieldNode.addEventListener(\"keydown\", resetDefined);\n        me.targetFieldNode.addEventListener(\"click\", resetDefined);\n        me.targetFieldNode.addEventListener(\"change\", resetDefined);\n\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        let data = await super.export(...args);\n        if (! me.isSingleton) data = (\n            me.isDefined && data.match(re_color) ? data.toLowerCase()\n            : null\n        );\n        return data;\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (\n            ! me.isSingleton // Only for real field\n        ) {\n            if (\n                data === null              // Explicit null value\n                || ! data.match(re_color)  // Invalid color value\n            ) {\n                me.isDefined = false;\n                me.targetFieldNode.setAttribute(\n                    \"style\"\n                    , me.defaultStyleAttr + disabled_style\n                );\n            } else {\n                me.isDefined = true;\n                me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n            };\n        };\n        const value = await super.import({data, focus});\n        return (\n            me.isDefined ? value\n            : null\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\nimport {color} from \"./types/color.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n    color,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","registerEvHandler","evList","evType","evHandler","me","this","has","set","get","push","bind","events","events_decorator","target","_ref","kind","eventEnebledTarget","constructor","optionsSrc","options","onOptionCallbacks","key","value","Object","entries","match","substring","_len","arguments","length","args","Array","_key","super","ImRoot","is","root","Map","onLocal","onAll","on","evt","handler","listenLevel","emit","evData","handlers","defaultPrevented","propagationStopped","preventDefault","stopPropagation","legacy","disEnhance","targetNode","tagName","toLowerCase","addEventListener","event","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","wild2regex","wname","RegExp","replace","errors","renderError","Error","code","message","path","stack","split","slice","join","inferType","node","parentComponent","type","String","getAttribute","isSingleton","_SmarkComponent","SmarkComponent","static","_initClass","_applyDecs","c","property_name","undefined","parent","validName","nameGenerator","counter","names","n0","trim","actions","selector","types","setNodeOptions","parents","iterator","current","autoId","inherittedOption","setRendered","genId","p","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","onRendered","cbk","getNodeOptions","defaultOptions","dataset","opt","JSON","parse","err","action","stringify","enhance","ctrl","getComponent","parentElement","closest","getPath","map","name","reverse","find","base","parts","filter","x","firstWildcardPos","findIndex","re_pattern","pivotPath","restPath","pivot","pivotChilds","child","_ref2","flat","Infinity","reduce","delta","parseInt","n","isNaN","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","actionNames","myCurrentActions","actionKeys","Set","returnAll","tgg","querySelectorAll","getTriggerArgs","context","updateId","newId","values","focus","fname","targetFieldNode","SmarkField","_isField","hasOwnProperty","setAttribute","createType","controller","prototype","hotKeys_handler","form","revealed","onKeydown","onKeyup","onFocusout","onFocusin","ev","reveal","ctrlKey","targettedTrigger","t","hotkey","click","removeAttribute","component","activeContexts","activeContextsSet","candidateTriggers","lv","tg","sort","ta","tb","usedKeys","candidate","disabled","add","beforeEvent","afterEvent","action_decorator","targetMtd","addInitializer","registerAction","trigger","triggerArgs","onTriggerRender","disable","enable","actionSpec","contextPath","targetPath","otherOptions","actionName","targetType","isSameNode","origin","async","onTriggerClick","triggerComponent","mtd","data","getRoots","isTop","parentNode","e","makeRoom","element","pixels","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","parseJSON","str","label","allow_select","labelArgs","getLabelArgs","style","candidates","found","childName","targetComponent","foldable","foldable_decorator","_initProto","foldableTarget","retv","fold","operation","folded","wasFolded","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","export_to_target","export_to_target_decorator","method","export_mtd","call","import","error","import_from_target","import_from_target_decorator","import_mtd","export","_form","newItem","fromEntries","all","dataConstructor","await","isEmpty","clear","updateTriggers","min_items","failback","max_items","smartdisabling","list_smartdisabling_decorator","smartdisablingClass","smartdisablingMethod","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","unlock","mutex","method_mutex_decorator","muxName","mutex_decorator","muxed_target","sortable","list_sortable_decorator","_moveDecs","sortableTarget","templates","item","dragSource","dragDest","move","from","to","fromi","Number","toi","newChunk","splice","inc","moveMethod","renum","_list","makeNonNavigable","loadTemplates","role","remove","last_separator","separator","querySelector","list","_exportDecs","_addItemDecs","_removeItemDecs","appendChild","header","after","max","placeholders","tplOptions","of","tpl","footer","i","addItem","emptyChilds","stripEmpties","min","removeItem","source","position","autoscroll","newItemTarget","cloneNode","onRenderedCbks","before","sourceComponent","offsetHeight","moveTarget","keep_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","onRemovedCbks","oldItemTarget","onRemoved","count","offset","isLastNode","sepRole","currentNode","prevNode","previousElementSibling","prevNode_role","sepTemplate","insertBefore","nextNode","nextElementSibling","empty_list","placeholder","placeHoldersCount","pop","innerText","input","isCheckbox","sons","son","nodeFld","checked","encoding","toUpperCase","selectedIndex","text","isTextarea","keys","parsed","idx","number","targetTag","typename","re_timePart","parseDateStr","Date","NaN","ISODate","toISOString","date","radio","master","sharedNodeName","radioButtons","changeEventHandler","onRadioInteraction","r","selected","lastSelection","lastClicked","re_color","disabled_style","color","valueAttr","isDefined","defaultStyleAttr","resetDefined","Code","SmarkForm","customActions","formOptions"],"mappings":"4qJAGA,CAAA,MAAMA,EAAmBC,OAAO,UAC1BC,EAAiBD,OAAO,aACxBE,EAAqB,6BACrBC,EAAoB,YACpBC,EAAkB,UAExB,SAASC,EAAkBC,EAAQC,EAAQC,GACvC,MAAMC,EAAKC,KAGX,OAFMJ,EAAOK,IAAIJ,IAASD,EAAOM,IAAIL,EAAQ,IAC7CD,EAAOO,IAAIN,GAAQO,KAAKN,EAAUO,KAAKN,IAChCA,CACX,CAEO,MAAMO,EAAS,SAASC,EAAiBC,EAAMC,GAAU,IAARC,KAACA,GAAKD,EAC1D,GAAY,SAARC,EACA,OAAO,MAAMC,UAA2BH,EACpCI,WAAAA,CAAYJ,EAAQK,GAKhB,MAAMC,EAAU,CAAA,EACVC,EAAoB,GAC1B,IACI,MAAOC,EAAKC,KACTC,OAAOC,QAAQN,GAChBG,EAAII,MAAM5B,GACZuB,EAAkBX,KAAK,CAACY,EAAIK,UAAU,GAAIJ,EAAO,YAC1CD,EAAII,MAAM3B,GACjBsB,EAAkBX,KAAK,CAACY,EAAIK,UAAU,GAAIJ,EAAO,YAC1CD,EAAII,MAAM1B,GACjBqB,EAAkBX,KAAK,CAACY,EAAIK,UAAU,GAAIJ,EAAO,UAGjDH,EAAQE,GAAOC,EAGnB,IAAA,IAAAK,EAAAC,UAAAC,OArB+BC,MAAIC,MAAAJ,EAAA,EAAAA,OAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAA,GAAAJ,UAAAI,GAsBnCC,MAAMpB,EAAQM,KAAYW,GAG1B,MAAM1B,EAAKC,KACL6B,EAASX,OAAOY,GAAG/B,EAAIA,EAAGgC,MAChChC,EAAGV,GAAoB,IAAI2C,IACvBH,IAAQ9B,EAAGgC,KAAKxC,GAAkB,IAAIyC,KAC1CjC,EAAGkC,QAAUtC,EAAkBU,KAAKN,EAAIA,EAAGV,IAC3CU,EAAGmC,MAAQvC,EAAkBU,KAAKN,EAAGgC,KAAMhC,EAAGgC,KAAKxC,IACnDQ,EAAGoC,GAAKpC,EAAGkC,QAGX,IACI,MAAOG,EAAKC,EAASC,KAClBvB,EACLhB,EAAGuC,GAAaF,EAAKC,EAE3B,CACA,UAAME,CAAK1C,EAAQ2C,GACf,MAAMzC,EAAKC,KACLyC,EAAW,IACT1C,EAAGV,GAAkBc,IAAIN,IAAW,MACpCE,EAAGgC,KAAKxC,GAAgBY,IAAIN,IAAW,IAE/C,IAAI6C,GAAmB,EACvB,GAAID,EAASjB,OAAQ,CACjB,IAAImB,GAAqB,EACzBH,EAAOI,eAAiB,IAAMF,GAAmB,EACjDF,EAAOK,gBAAkB,IAAMF,GAAqB,EACpD,IAAK,MAAMN,KAAWI,EAAU,CAC5B,GAAIE,EAAoB,YAClBN,EAAQG,EAClB,CACJ,CACA,OAASE,CACb,EAGZ,EC5EA,IAAAI,EAAe,CACXC,UAAAA,CAAWhD,GAGHA,EAAGiD,WAAWC,QAAQC,eACtBnD,EAAGiD,WAAWG,iBAAiB,SAAU,SAASC,GAG9CA,EAAMR,gBAKV,EAGR,SCjBJ,MAAMS,EAAiB,CAAA,EAKjBC,EAAYhE,OAAO,mBACnBiE,EAA0B,gBAC1BC,EAAmB,SACnBC,EAAaC,GAAS,IAAIC,OAC5B,IACED,EACGE,QAAQ,OAAQ,MAChBA,QAAQ,MAAO,KAClB,KAGAC,EACW,MAAMC,UAAoBC,MACnCnD,WAAAA,CAAYoD,EAAMC,EAASC,GACvBtC,MAAM,eAAesC,OAAUD,KAC/BjE,KAAKgE,KAAOA,EACZhE,KAAKkE,KAAOA,EACZlE,KAAKmE,MAAQnE,KAAKmE,MACbC,MAAM,MACNC,MAAM,GACNC,KAAK,KAEd,GAIR,SAASC,EAAUC,EAAMC,GACrB,OAAQD,EAAKvB,QAAQC,eACjB,IAAK,KACL,IAAK,KACL,IAAK,QACL,IAAK,QACL,IAAK,QACL,IAAK,QACD,MAAO,OACX,IAAK,QACD,MAAMwB,EAAOC,OAAOH,EAAKI,aAAa,SAAS,IAAI1B,cACnD,GAAIuB,EAAgBI,YAAa,OAAOJ,EAAgB3D,QAAQ4D,KAChE,OAAOA,GACH,IAAK,SACL,IAAK,OACL,IAAK,QACL,IAAK,QACD,OAAOA,EAEnB,IAAK,WACL,IAAK,SACD,MAAO,QACX,IAAK,QACD,MAAO,QACX,QAGI,MAAO,OAEnB,CAAE,IAAAI,EAEF,MAAAC,EAC4BC,SAAA,MAAAF,EAAAG,GAAAC,EAAAlF,KAAA,GAAA,CAD3BM,IAAM6E,EACqB,GACxBvE,WAAAA,CACIoC,GAMF,IALIoC,cACEA,EAAgB,WACbtE,GACNS,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACF+D,EAAM/D,UAAAC,OAAA,EAAAD,kBAAA8D,EAER,MAAMtF,EAAKC,KA0BX,GAxBAD,EAAGwF,UAAa,SAASC,IACrB,IAAIC,EAAU,EACd,OAAO,WAAkB,IAAA,IAAAnE,EAAAC,UAAAC,OAANkE,EAAK,IAAAhE,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAL+D,EAAK/D,GAAAJ,UAAAI,GACpB,IACI,IAAIgE,KAAMD,EACZ,GACe,iBAANC,IAEPA,EAAKA,EAAGC,OACJD,EAAGnE,QAAQ,OAAOmE,EAE1B,MAAO,aAAaF,CACxB,CACJ,CAbgB,GAehB1F,EAAG8F,QAAU,CAAA,EACb9F,EAAGqF,cAAgBA,EACnBrF,EAAG+F,SAAW,SAAS/F,EAAGqF,iBAC1BrF,EAAGgG,MAAQ1C,EACXtD,EAAGiD,WAAaA,EAChBjD,EAAGe,QAAUA,EACbf,EAAGiG,eAAejG,EAAGiD,WAAYjD,EAAGe,SAEpCf,EAAGuF,OAASA,GACNvF,EAAGuF,kBAAkBP,EAAgB,MAAMhF,EAAG+D,YAChD,iBACE,4DAEN/D,EAAGgC,KACe,OAAdhC,EAAGuF,OAAkBvF,EACnBA,EAAGuF,OAAOvD,KAIhBhC,EAAGkG,QAAU,CAAA,EACblG,EAAGkG,QAAQ3G,OAAO4G,UAAY,YAC1B,IAAIC,EAAUpG,EACd,KAAOoG,SACGA,EACNA,EAAUA,EAAQb,MAE1B,EAGA,MAAMc,EAASrG,EAAGsG,iBAAiB,UAAU,GAgB7C,IAAIC,EAfJvG,EAAGwG,OACY,IAAXH,KAEa,IAAXA,EAAkBI,GAAKA,EAAE5C,QAAQ,MAAO,KAEvB,iBAAVwC,EAAqBI,GAAKJ,EAAOI,EAAE5C,QAAQ,MAAO,KAExC,mBAAVwC,GAAuBA,GAMpCrG,EAAG0G,gBAAkB,GAGrB1G,EAAG2G,cAAe,EAClB3G,EAAG4G,SAAW,IAAIC,QAAQC,GAAWP,EAAcO,GAEnD9G,EAAG+G,SAAW,CAAA,EACd/G,EAAGiD,WAAWM,GAAavD,EAE3B,iBACUA,EAAGgH,SACT,IACI,MAAMC,KAAQjH,EAAG0G,sBACbO,IACRjH,EAAG0G,gBAAkB,KACrBH,GAAY,GACZW,WAAW,IAAIlH,EAAG2G,cAAe,EAAM,EAC1C,EARD,GASI3G,EAAGe,QAAQoG,YAAYnH,EAAGmH,WAAWnH,EAAGe,QAAQoG,WAExD,CACAA,UAAAA,CAAWC,GACP,MAAMpH,EAAKC,KACPD,EAAG0G,gBACH1G,EAAG0G,gBAAgBrG,KAAK+G,EAAI9G,KAAKN,IAEjCoH,EAAI9G,KAAKN,EAAToH,EAER,CACAC,cAAAA,CAAe5C,EAAM6C,GACjB,MAAMtH,EAAKC,KACLa,GACF2D,EAAK8C,QAAQvH,EAAGqF,gBAAkB,IACpCQ,QAAU,KACN9E,EAAU,IACTuG,KACA,MACC,IACI,MAAME,EAAMC,KAAKC,MAAM5G,GACvB,GAAkB,iBAAP0G,EAAiB,MAAM,IAAIxD,MAAM,aAC5C,OAAOwD,CACX,CAAE,MAAOG,GACL,OACI7G,EAAWO,MAAMmC,GAA2B,CAACmB,KAAM7D,GACjD,CAAA,CAEV,CACH,EAXE,IAeP,OAFMC,EAAQ6G,QAAY7G,EAAQ4D,OAAM5D,EAAQ4D,KAAOH,EAAUC,EAAMzE,IACvEA,EAAGiG,eAAexB,EAAM1D,GACjBA,CACX,CACAkF,cAAAA,CAAexB,EAAM1D,GACjB,MAAMf,EAAKC,KACXwE,EAAK8C,QAAQvH,EAAGqF,eAAiBoC,KAAKI,UAAU9G,EACpD,CACA,aAAM+G,CAAQrD,EAAM6C,GAChB,MAAMtH,EAAKC,KAGX,IAAIc,EAAUf,EAAGqH,eAAe5C,EAAM6C,GAQtC,GAJAvE,EAAOC,WAAWhD,GAIde,EAAQ6G,QAER,GADM7G,EAAQ4D,OAAM5D,EAAQ4D,KAAO,WACf,WAAhB5D,EAAQ4D,KAAmB,MAAM3E,EAAG+D,YACpC,wBACE,mEAAmEhD,EAAQ4D,8BAE9E,GAA2B,iBAAhB5D,EAAQ4D,KACtB,MAAM3E,EAAG+D,YACL,mBACE,yEAMV,MAAMgE,EAAO/H,EAAGgG,MAAMjF,EAAQ4D,MAC9B,IAAMoD,EAAM,MAAM/H,EAAG+D,YACjB,eACE,iDAAiDhD,EAAQ4D,QAE/D,OAAO,IAAIoD,EACPtD,EACE1D,EACAf,EAIV,CACAgI,YAAAA,CAAavH,GACT,MAAMT,EAAKC,KACX,OACIQ,EAAO8C,IACJ9C,EAAOwH,eAAeC,QAAQlI,EAAG+F,UAAUxC,IAC3C,IAEX,CACA4E,OAAAA,GACI,MAAMnI,EAAKC,UACX,MACI,IAFOA,KAEAiG,SAASkC,IAAI3B,GAAGA,EAAE4B,MACxBC,UACA/D,KAAK,MACH,GAEX,CACAgE,IAAAA,GAAc,IAATpE,EAAI3C,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAC,GACFgH,EAAKvI,KAET,GADAkE,EAAOS,OAAOT,GACC,KAAXA,EAAK,GAAW,KAAOqE,EAAKjD,QAAQiD,EAAOA,EAAKjD,OACpD,MAAMkD,EAAQtE,EACTE,MAAM,KACNqE,OAAOC,GAAGA,GAKTC,EAAmBH,EAAMI,UAAUpC,GAAGA,EAAEpF,MAAMoC,IACpD,GAAImF,GAAoB,EAAG,CACvB,MAAME,EAAapF,EAAW+E,EAAMG,IAC9BG,EAAYN,EAAMnE,MAAM,EAAGsE,GAAkBrE,KAAK,KAClDyE,EAAWP,EAAMnE,MAAMsE,EAAmB,GAAGrE,KAAK,KAClD0E,EAAQT,EAAKD,KAAKQ,GAClBG,EAAc/H,UACpB,OADoBA,OAAOC,QAAQ6H,EAAMlC,UAEpC2B,OAAOhI,IAAA,IAAE2H,EAAKc,GAAMzI,EAAA,OAAGyI,GAASd,EAAKhH,MAAMyH,KAC3CV,IAAIgB,IAAA,IAAC,CAAED,GAAMC,EAAA,OAAGD,EAAMZ,KAAKS,KAC3BK,KAAKC,IAEd,CAIA,OAAOb,EAAMc,OACT,CAACnD,EAASiC,KACN,QAAgB/C,IAAZc,EAAuB,OAAO,KAClC,GAAY,MAARiC,EAAc,OAAOjC,EAAQb,OACjC,GACe,KAAX8C,EAAK,IAC+B,QAAjCjC,EAAQb,QAAQxE,SAAS4D,KAC9B,CACE,MAAM6E,EAAQC,SAASpB,EAAK/D,MAAM,IAC5BoF,EAAID,SAASrD,EAAQiC,MAAQmB,EACnC,IAAMG,MAAMD,GAAI,OAAOtD,EAAQb,OAAOwB,SAAS2C,EACnD,CACA,OAAOtD,EAAQW,SAASsB,IAE1BG,EAGV,CACAlC,gBAAAA,CAAiBsD,EAASC,GACtB,MAAM7J,EAAKC,KACX,IACI,MAAMwG,KAAKzG,EAAGkG,QAChB,QACyBZ,IAAvBmB,EAAE1F,QAAQ6I,GACZ,OAAOnD,EAAE1F,QAAQ6I,GACnB,OAAOC,CACX,CACAC,MAAAA,GACI,MAAM9J,EAAKC,KACLD,EAAGiD,WAAW8G,KAAI/J,EAAGiD,WAAW8G,GAAK/J,EAAGmI,WAC9C6B,SAASC,SAASC,KAAOlK,EAAGiD,WAAW8G,GAEvCI,OAAOC,QAAQC,UAAU,CAAA,OAAI/E,EAAU6E,OAAOF,SAASK,SAG3D,CACAC,WAAAA,GAA8B,IAAlBC,EACR,MAAMxK,EAAKC,KACLwK,EAAmB,GACnBC,EAAa,IAAIC,IAAI,CAHRnJ,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,IAIjB6H,OACAjB,IAAIxD,QACJ8D,OAAOC,GAAGA,IAETiC,EAAYF,EAAWxK,IAAI,KACjC,IACI,MAAM2K,IACH,IAAI7K,EAAGgC,KAAKiB,WAAW6H,iBAAiB9K,EAAG+F,WACzCqC,IAAI3H,GAAQA,EAAO8C,IACnBmF,OAAOC,GAAGA,GACjB,CACE,MAAM5H,EAAU8J,EAAIE,iBACdhK,IACAI,OAAOY,GAAGhB,EAAQiK,QAAShL,KAE7B4K,GACGF,EAAWxK,IAAIa,EAAQ6G,UAC5B6C,EAAiBpK,KAAKwK,GAC5B,CACA,OAAOJ,CACX,CACAQ,QAAAA,GACI,MAAMjL,EAAKC,KACX,IAAiB,IAAbD,EAAGwG,MAAiB,OACxB,MAAM0E,EAAQlL,EAAGwG,MAAMxG,EAAGmI,WAC1B,GAAInI,EAAGiD,WAAW8G,IAAMmB,EAAO,CAC3BlL,EAAGiD,WAAW8G,GAAKmB,EACnB,IACI,MAAM/B,KACHhI,OAAOgK,OAAOnL,EAAG+G,UACtBoC,EAAM8B,UACZ,CACA,OAAOjL,EAAGiD,WAAW8G,EACzB,CACAqB,KAAAA,GACI,MAAMpL,EAAKC,KACX,IAAK,MAAMoL,KAASrL,EAAG+G,SACnB,OAAO/G,EAAG+G,SAASsE,GAAOD,QAE1BpL,EAAGsL,iBAAiBtL,EAAGsL,gBAAgBF,OAC/C,CACAL,cAAAA,GAAkB,CAElBhH,WAAAA,CAAYE,EAAMC,GACd,MAAMlE,EAAKC,UACX,OAAO,IAAI6D,EAAmBG,EAAMC,EADzBjE,KACqCkI,UACpD,CAAClD,cAAAC,OAGE,MAAMqG,UAAmBvG,EAC5BnE,WAAAA,GAGI,GAFAgB,SAAML,WACNvB,KAAKuL,UAAW,GACVrK,OAAOY,GAAG9B,KAAMA,KAAK+B,QACvB/B,KAAKoI,KAAOpI,KAAKuF,UACbvF,KAAKc,QAAQsH,KACXpI,KAAKgD,WAAW4B,aAAa,SAE/B5E,KAAKc,QAAQ0K,eAAe,UAAU,CACtC,GAA8C,OAA1CxL,KAAKgD,WAAW4B,aAAa,SAC7B,MAAM7E,GAAG+D,YACL,iBACE,4EAGV9D,KAAKgD,WAAWyI,aAAa,QAASzL,KAAKc,QAAQG,MACvD,CAER,EAGG,SAASyK,EAAWtD,EAAMuD,GAC7B,QAA6BtG,IAAzBhC,EAAe+E,GAAqB,MAAM,IAAIrE,MAC9C,wCAAwCqE,KAE5C,KAAOuD,EAAWC,qBAAqB7G,GAAiB,MAAM,IAAIhB,MAC9D,0CAA0CqE,KAE9C/E,EAAe+E,GAAQuD,CAC3B,CCvYO,MAAME,EACTjL,WAAAA,CAAYkL,GACR,MAAM/L,EAAKC,KACXD,EAAG+L,KAAOA,EACV/L,EAAGgM,SAAW,KACdhM,EAAG+L,KAAK9I,WAAWG,iBACf,UACEpD,EAAGiM,UAAU3L,KAAKN,IAClB,GAENA,EAAG+L,KAAK9I,WAAWG,iBACf,QACEpD,EAAGkM,QAAQ5L,KAAKN,IAChB,GAENA,EAAG+L,KAAK9I,WAAWG,iBACf,WACEpD,EAAGmM,WAAW7L,KAAKN,IACnB,GAENA,EAAG+L,KAAK9I,WAAWG,iBACf,UACEpD,EAAGoM,UAAU9L,KAAKN,IAClB,EAEV,CACAiM,SAAAA,CAAUI,GACN,MAAMrM,EAAKC,KACX,GAAc,WAAVoM,EAAGpL,IACHjB,EAAGsM,OAAOD,EAAG5L,aACV,GAAI4L,EAAGE,QAAS,CACnB,MAAMC,EAAmBxM,EAAGgM,SAASzD,KACjCkE,GAAGA,EAAE1L,QAAQ2L,QAAUL,EAAGpL,KAE1BuL,IACAH,EAAGxJ,iBACHwJ,EAAGvJ,kBACH0J,EAAiBvJ,WAAW0J,QAEpC,CACJ,CACAT,OAAAA,CAAQG,GACJ,MAAMrM,EAAKC,KACG,WAAVoM,EAAGpL,KACHjB,EAAGsM,QAAO,EAElB,CACAH,UAAAA,CAAWE,GACP,MAAMrM,EAAKC,KACS,OAAhBD,EAAGgM,UACHhM,EAAGsM,QAEX,CACAF,SAAAA,CAAUC,GACN,MAAMrM,EAAKC,KACS,OAAhBD,EAAGgM,UACHhM,EAAGsM,OAAOD,EAAG5L,OAErB,CACA6L,MAAAA,CAAO7L,GACH,MAAMT,EAAKC,KAGX,GAAoB,OAAhBD,EAAGgM,SAAmB,CACtB,IAAK,MAAMS,KAAKzM,EAAGgM,SACfS,EAAExJ,WAAW2J,gBAAgB,eAEjC5M,EAAGgM,SAASvK,OAAS,CACzB,CAMA,IAJe,IAAXhB,IACAT,EAAGgM,SAAW,MAGdvL,EAAQ,CAGR,MAAMoM,EAAY7M,EAAG+L,KAAK/D,aAAavH,GACjCqM,EAAiB,CAACD,KAAcA,EAAU3G,SAC1C6G,EAAoB,IAAIpC,IAAImC,GAE5BE,EAAoBF,EACrB1E,IAAI,CAAChD,EAAG6H,IACL7H,EAAEmF,YAAY,KACbnC,IAAI8E,IAAE,CACHA,KACAD,KACAvL,KAAMwL,EAAGnC,kBAAoB,CAAA,EAC7B2B,OAAQ9H,OAAOsI,EAAGnM,QAAQ2L,QAAU,QAG3CrD,OACAX,OAAOhI,IAAA,IAACgB,KAACA,EAAIgL,OAAEA,GAAOhM,EAAA,OACnBgM,EAAOjL,QACJsL,EAAkB7M,IAAIwB,EAAKsJ,WAEjCmC,KAAK,CAACC,EAAGC,IACNN,EAAkB7M,IAAImN,EAAG3L,KAAKjB,QAC5BsM,EAAkB7M,IAAIkN,EAAG1L,KAAKjB,QAC9B4M,EAAGJ,GACHG,EAAGH,IAIPK,EAAW,IAAI3C,IACrB3K,EAAGgM,SAAW,GAEd,IAAK,MAAMuB,KAAaP,EAChBM,EAASpN,IAAIqN,EAAUb,UACrBa,EAAUL,GAAGjK,WAAWuK,UAC1BD,EAAUL,GAAGjK,WAAWyI,aAAa,cAAe6B,EAAUb,QAIlEY,EAASG,IAAIF,EAAUb,QACvB1M,EAAGgM,SAAS3L,KAAKkN,EAAUL,IAGnC,CAEJ,ECvHJ,MAAMQ,EAAcnO,OAAO,mBACrBoO,EAAapO,OAAO,kBAEbqI,EAAS,SAASgG,EAAiBC,EAASnN,GAAgC,IAA9BC,KAACA,EAAI0H,KAAEA,EAAIyF,eAAEA,GAAepN,EACvE,UAARC,GAAkBmN,EAAe,SAASC,IAC1C9N,KAAK6F,QAAQuC,GAAQwF,EAAUvN,KAAKL,MACpCA,KAAK6F,QAAQuC,GAAMqF,GAAe,gBAAgBrF,IAClDpI,KAAK6F,QAAQuC,GAAMsF,GAAc,eAAetF,GACpD,EACJ,EAGO,MAAM2F,UAAgBhJ,EACzBnE,WAAAA,CAAY4D,EAAM1D,UACPA,EAAQsH,KAAM,IAAA,IAAA9G,EAAAC,UAAAC,OADKC,MAAIC,MAAAJ,EAAA,EAAAA,OAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAA,GAAAJ,UAAAI,GAE9B,OAAOC,MAAM4C,EAAM1D,KAAYW,EACnC,CACAsF,MAAAA,GACI,MAAMhH,EAAKC,KACXD,EAAGuF,OAAO4B,WAAW,KACjB,MAAM8G,EAAcjO,EAAG+K,iBAE4B,mBAAxCkD,EAAYjD,SAASkD,iBAC9BD,EAAYjD,QAAQkD,gBAAgBD,IAE9C,CACAE,OAAAA,GACI,MAAMnO,EAAKC,eACRgD,WAAWuK,UAAW,CAC7B,CACAY,MAAAA,GACI,MAAMpO,EAAKC,eACRgD,WAAWuK,UAAW,CAC7B,CACAzC,cAAAA,GACI,MAAM/K,EAAKC,KACLiG,EAAU,IAAIlG,EAAGkG,UAGnB0B,OAAQyG,EACRrD,QAASsD,EACT7N,OAAQ8N,KACLC,GACHxO,EAAGe,QACP,IAAMsN,EAAY,OAIlB,IAAKI,EAAYC,GAAcL,EAAWhK,MAAM,KAAKiE,UAErD,MAAM0C,EACFsD,EAActO,EAAGuF,OAAOgD,KAAK+F,GAC3BpI,EAAQqC,KAAK9B,KACPiI,GAAcjI,EAAE1F,QAAQ4D,MAAQ+J,IACA,mBAAzBjI,EAAEX,QAAQ2I,IAKvBhO,EACF8N,EAAavD,EAAQzC,KAAKgG,GACxBD,EAAc,KAEZpI,EACK5B,MAAM,GACNiE,KAAK9B,GAAGA,EAAElB,QAAQtC,WAAW0L,WAAW3D,GAAS/H,cACnD,KAIX,MAAO,CACH2E,OAAQ6G,EACRG,OAAQ5O,EACRgL,UACAvK,YACG+N,EAGX,EAGGK,eAAeC,EAAezC,GACjC,MAAMrM,EAAKC,KACL8O,EAAmB/O,UACnBe,EADmBf,EAAGgI,aAAaqE,EAAG5L,QACXsK,iBACjC,IAAMhK,EAAS,OACf,MAAMiK,QAACA,EAAOpD,OAAEA,GAAU7G,EACpBiO,EAAMhE,GAASlF,QAAQ8B,GAC7B,GACkB,mBAAPoH,EACT,MAAMhP,EAAG+D,YACP,iBACE,kBAAkB6D,KACjBoD,EAAU,QAAQA,EAAQjK,QAAQ4D,OAAS,KAElD,SAAU3E,EAAGwC,KAAKwM,EAAItB,GAAc3M,GAAU,CAC1C,MAAMkO,QAAaD,EAAIjO,GACvBf,EAAGwC,KAAKwM,EAAIrB,GAAa,IAAI5M,EAASkO,QAC1C,CACJ,CCtGO,SAASC,EAASzO,EAAQsF,GAC7B,MAAMR,EAAS9E,UACT0O,EACS,OAFA1O,EAAO2O,WAEA1F,GAAW,OAANA,EACrBA,GAAQ,OAAJA,GAAWA,EAAEiF,WAAWlO,GAElC,MAAO,IACAA,EAAOqK,iBAAiB/E,IAC7B2C,OACE2G,GAAGF,EAAME,EAAED,WAAWlH,QAAQnC,IAEtC,CAEO,SAASuJ,EAASC,EAASC,GAC9B,IAAIjK,EAASgK,EAAQH,WACrB,MAAMK,EACFD,GAAU,EAAI,GACZ,EAEN,KAAOjK,GAAQ,CAEX,GAAIA,EAAOmK,aAAenK,EAAOoK,aAAeF,EAAW,CAEvD,IAAIG,EAAYrK,EAAOmK,aAAenK,EAAOoK,aAAeF,EAG5D,GAAID,GAAUI,EAAYH,EAEtB,YADAlK,EAAOsK,WAAaL,GAKtBjK,EAAOsK,UAAYD,EACnBJ,GAAUI,CAEhB,CACArK,EAASA,EAAO6J,UACpB,CACJ,CAEO,SAASU,IACZ,OAAOC,KAAKC,SAASC,SAAS,IAAI3O,UAAU,EAChD,CAEO,SAAS4O,EAAUC,GACtB,IACI,OAAO1I,KAAKC,MAAMyI,EACtB,CAAE,MAAOxI,GAAM,CACnB,CC1BO,MAAMyI,UAAcpL,EACvBnE,WAAAA,CAAY4D,EAAI/D,GAA8C,IAA5C2P,aAACA,GAAe,KAAUtP,GAAQL,SACzCK,EAAQsH,KAAM,IAAA,IAAA9G,EAAAC,UAAAC,OADgCC,MAAIC,MAAAJ,EAAA,EAAAA,OAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,EAAA,GAAAJ,UAAAI,GAEzD,OAAOC,MAAM4C,EAAM,CAAC4L,kBAAiBtP,MAAaW,EACtD,CACAsF,MAAAA,GACI,MAAMhH,EAAKC,KACXD,EAAGuF,OAAO4B,WAAW,KACjB,MAAMmJ,EAAYtQ,EAAGuQ,gBACfjF,gBAACA,GAAmBgF,EAAU7P,QAAU,CAAA,EAC1C6K,IACMA,EAAgBvB,KAClBuB,EAAgBvB,GAAK+F,KAEzB9P,EAAGiD,WAAWyI,aAAa,MAAOJ,EAAgBvB,KAEhD/J,EAAGe,QAAQsP,eAGbrQ,EAAGiD,WAAWuN,MAAM,eAAiB,SAGjD,CACAD,YAAAA,GACI,MAAMvQ,EAAKC,KAEX,IAAI+K,EAASvK,EADOT,EAAGkG,QAGvB,MAEI8E,QAASsD,EACT7N,OAAQ8N,KACLC,GACHxO,EAAGe,QAEP,GAAMuN,GAAiBC,EAuBnBvD,EACIsD,EAActO,EAAGuF,OAAOgD,KAAK+F,GAC3BtO,EAAGuF,OAET9E,EACI8N,EAAavD,EAAQzC,KAAKgG,GACxBvD,MA7ByB,CAE/BA,EAAUhL,EAAGuF,OACb,MAAMkL,EAAazF,EAAQ/H,WAAW6H,iBAAiB9K,EAAG+F,UAC1D,IAAI2K,GAAQ,EACZ,IAAK,MAAMC,KAAaF,EACpB,GAAIC,EAAO,CACP,IAAIE,EAAkB5Q,EAAGgI,aAAayI,EAAWE,IACjD,GAAIC,GAAiBpF,SAAU,CAK3B/K,EAASmQ,EACT,KACJ,CACJ,MACIzP,OAAOY,GAAG0O,EAAWE,GAAY3Q,EAAGiD,cAEpCyN,GAAQ,EAGpB,CAWA,MAAO,CACH9B,OAAQ5O,EACRgL,UACAvK,YACG+N,EAGX,EC/FG,MAAMqC,EAAW,SAASC,EAAmBrQ,EAAMC,GAAU,IAARC,KAACA,GAAKD,EAC9D,GAAY,SAARC,EAAiB,CAAA,IAAAoQ,EACjB,OAAO,MAAMC,UAAuBvQ,EAAOwE,eAAA8L,GAAA5L,EAAAlF,KAAA,CAAA,CAYtC2H,iBAAMyH,KAAAxO,WAAAA,GAAAgB,SAAAL,WAAAuP,EAAA9Q,KAAA,CAXP+G,MAAAA,GACI,MAAMiK,EAAOpP,MAAMmF,UAAOxF,WACpBxB,EAAKC,KAOX,OANAD,EAAGgC,KAAKmF,WAAW,KACfnH,EAAGkR,KAAK,CAACC,UACFnR,EAAGe,QAAQqQ,OAAS,OACrB,aAGHH,CACX,CAEAC,IAAAA,GAEQ,IAFHC,UACDA,EAAY,UACf3P,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACA,MAAMxB,EAAKC,KACLoR,EAA2C,QAA/BrR,EAAGiD,WAAWuN,MAAMc,QAChCC,EACW,QAAbJ,GACe,UAAbA,IACEE,EAERrR,EAAGiD,WAAWuN,MAAMc,QAChBC,EAAW,OACTvR,EAAGwR,oBAGTxR,EAAGuK,YAAY,QAAQkH,QAAQ5G,IAC3B,MAAM6G,YAACA,EAAWC,cAAEA,GAAiB9G,EAAI9J,QACrC2Q,GAAa7G,EAAI5H,WAAW2O,UAC5BL,EAAW,MACT,UACJG,GACEC,GAAe9G,EAAI5H,WAAW2O,UAC9BL,EAAW,SACT,OACJI,KAGN3R,EAAGuK,YAAY,CAAC,UAAW,eAAenC,IACtCmJ,EAAW1G,GAAOA,EAAIsD,UACpBtD,GAAOA,EAAIuD,SAErB,EAER,CACJ,ECjDayD,EAAmB,SAASC,EAA2BC,EAAMrR,GAAU,IAARC,KAACA,GAAKD,EAC9E,GAAY,UAARC,EACA,OAAOkO,eAAemD,IAAoC,IAAzBvR,OAACA,KAAWM,GAAQS,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAC,CAAA,EAClD,MAAMxB,EAAKC,KACLiB,QAAc6Q,EAAOE,KAAKjS,EAAIe,GACpC,UACUN,EAAOyR,OAAO,CAACjD,KAAM/N,GAC/B,CAAE,MAAOiR,GACL,CAEJ,OAAOjR,CACX,CAER,ECbakR,EAAqB,SAASC,EAA6BN,EAAMrR,GAAU,IAARC,KAACA,GAAKD,EAClF,GAAY,UAARC,EACA,OAAOkO,eAAeyD,IAA0C,IAA/B7R,OAACA,EAAMwO,KAAEA,KAASlO,GAAQS,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAC,CAAA,EACxD,MAAMxB,EAAKC,KACX,IACIgP,QAAaxO,EAAO8R,QACxB,CAAE,MAAOJ,GACL,CAEJ,aAAaJ,EAAOE,KAAKjS,EAAI,CAACiP,UAASlO,GAC3C,CAER,UCPsDyR,EAEtD,MAAAzG,UAC0BR,EAAWtG,SAAA,OAAAoK,GAAA0B,GAAA3L,GAAAoN,EAAAtN,IAAAC,EAAAlF,KAAA,CAAA,CAAA,CAoBhC2H,EACAiK,GAAgB,EAAA,UAAA,CAAA,CAShBjK,EACAwK,GAAkB,EAAA,UAAA,CAwClBxK,EAAM,EAAA,UAAA,CAxEViJ,KACoC,GAD5BhQ,WAAAA,GAAAgB,SAAAL,WAAAuP,EAAA9Q,KAAA,CAEL,YAAM+G,GACF,MAAMhH,EAAKC,KACXD,EAAGwR,oBAAsBxR,EAAGiD,WAAWuN,MAAMc,QAE7C,IACI,MAAM7M,KACHyK,EAASlP,EAAGiD,WAAYjD,EAAG+F,UAChC,CACE,MAAM0M,QAAgBzS,EAAG8H,QAAQrD,GACjC,GAAOgO,GAASjH,SAAU,CACtB,QAAkClG,IAA9BtF,EAAG+G,SAAS0L,EAAQpK,MAAqB,MAAMrI,EAAG+D,YAClD,sBACE,eAAe0O,EAAQpK,iDAE7BrI,EAAG+G,SAAS0L,EAAQpK,MAAQoK,EAC5BA,EAAQxH,UACZ,CACJ,CACJ,CACA,YAEMsH,GACF,MAAMvS,EAAKC,KACX,OAAOkB,OAAOuR,kBACJ7L,QAAQ8L,IAAIxR,OAAOC,QAAQpB,EAAG+G,UAAUqB,IAC1CyG,UAAA,IAAQ5N,EAAKkI,GAAMzI,EAAA,MAAG,CAACO,QAAWkI,EAAMoJ,aAGpD,CACA,YAEML,GAAuC,IAAhCjD,KAACA,EAAO,CAAA,EAAE7D,MAAEA,GAAQ,GAAK5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACrC,MAAMxB,EAAKC,KACL2S,EAAkBzR,OAAO8N,GAAMpO,YACrC,GACI+R,IAAoB,CAAA,EAAG/R,eACjBoO,EAAOiB,EAAUjB,IACzB,MAAMjP,EAAG+D,YACP,wBACE,yDAAyD6O,EAAgBvK,eAE/E,MAAM4I,EAAO9P,OAAOuR,kBACV7L,QAAQ8L,IACVxR,OAAOC,QAAQpB,EAAG+G,UAAUqB,IACxByG,UAAyB,IAAjB5N,EAAKR,GAAO2I,EAQhB,MAAMlI,EAAQ2R,UACd,MAAO,CAAC5R,QADYR,EAAOyR,OAAO,CAACjD,KAAMA,EAAKhO,GAAMmK,eAOpE,OADIA,GAAOpL,EAAGoL,QACP6F,CACX,CACA,aAAM6B,GACF,MAAM9S,EAAKC,KACX,IACI,MAAMkJ,KAAShI,OAAOgK,OAAOnL,EAAG+G,UAClC,UACUoC,EAAM2J,UAChB,OAAO,EACT,OAAO,CACX,CACA,WACMC,GAAoB,IAAd3H,MAACA,GAAM5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EAClB,MAAMxB,EAAKC,KACX,aAAaD,EAAGkS,OAAO,CAACjD,KAAM,CAAA,EAAI7D,SACtC,CAACnG,cAAAC,OCnFL2J,eAAemE,EAAehI,SACpBA,EAAQpE,SACd,IAAK,MAAMsG,KAAMlC,EAAQT,YAAY,CAAC,aAAc,YAChD2C,EAAGjK,WAAWuK,SACW,cAArBN,EAAGnM,QAAQ6G,OACPoD,EAAQjE,SAAStF,QAAUuJ,EAAQiI,WACT,SAAvB/F,EAAGnM,QAAQmS,SAEhBlI,EAAQjE,SAAStF,QAAUuJ,EAAQmI,SAGjD,CAEO,MAAMC,EAAiB,SAASC,EAA8B5S,EAAMC,GAAU,IAARC,KAACA,GAAKD,EAC/E,MAAY,SAARC,EACO,MAAM2S,UAA4B7S,EACrC,YAAMuG,GACF,MAAMiK,QAAapP,MAAMmF,UAAOxF,WAC1BxB,EAAKC,KAKX,OAJAiH,WAAW,IAAI8L,EAAehT,GAAK,GAI5BiR,CACX,GAEW,UAARtQ,EACAkO,eAAe0E,IAClB,MAAMvT,EAAKC,KAAK,IAAA,IAAAsB,EAAAC,UAAAC,OAD0BC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAE9C,MAAMqP,QAAaxQ,EAAOwR,KAAKjS,KAAO0B,GAEtC,OADAsR,EAAehT,GACRiR,CACX,OANG,CAQX,ECpCMuC,EAAUjU,OAAO,eAEvB,MAAMkU,EACF5S,WAAAA,GACIZ,KAAKyT,IAAM7M,QAAQC,SACvB,CACA6M,IAAAA,GAEI,IAAIC,EACJ,MAAMC,EAAU,IAAIhN,QAAQC,IACxB8M,EAAcA,IAAM9M,MAElBgN,EAAU7T,KAAKyT,IAGrB,OAFAzT,KAAKyT,IAAMG,EAEJC,EAAQC,KAAK,SAASC,IACzB,OAAOJ,CACX,EACJ,EAGG,MAAMK,EAAQ,SAASC,EAAuBC,GACjD,OAAO,SAASC,EAAgB3T,EAAMC,GAAU,IAARC,KAACA,GAAKD,EAC1C,GAAY,UAARC,EACA,OAAOkO,eAAewF,IAClB,MAAMrU,EAAKC,KACLD,EAAGwT,KAAUxT,EAAGwT,GAAW,CAAA,GAC3BxT,EAAGwT,GAASW,KAAUnU,EAAGwT,GAASW,GAAW,IAAIV,GACvD,MAAMO,QAAehU,EAAGwT,GAASW,GAASR,OAC1C,IAAIhM,EAAKsJ,EACT,IAAI,IAAA,IAAA1P,EAAAC,UAAAC,OAN8BC,EAAI,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAJF,EAAIE,GAAAJ,UAAAI,GAOlCqP,QAAaxQ,EAAOwR,KAAKjS,KAAO0B,EACpC,CAAE,MAAOyQ,GACLxK,EAAMwK,CACV,CAEA,GADA6B,IACIrM,EAAK,MAAMA,EACf,OAAOsJ,CACX,CAGR,CACJ,ECtCaqD,EAAW,SAASC,EAAwB9T,EAAMC,GAAU,IAARC,KAACA,GAAKD,EACnE,GAAY,SAARC,EAAiB,CAAA,IAAAoQ,EAAAyD,EACjB,OAAO,MAAMC,UAAuBhU,EAAOwE,eAAA8L,GAAA5L,EAAAlF,KAAA,CAAA,CAAAuU,iBAAAnF,KAAAxO,WAAAA,GAAAgB,SAAAL,WAAAuP,EAAA9Q,KAAA,CACvC,OAAAuU,EAyCCP,EAAM,iBAAgB,aAxCnB,MAAMhD,QAAapP,MAAMmF,UAAOxF,WAC1BxB,EAAKC,KAKX,GAHAD,EAAGsU,WAActU,EAAGe,QAAQuT,SAC5BtU,EAAG0U,UAAUC,KAAKjJ,aAAa,YAAa1L,EAAGsU,UAC/CtU,EAAG+G,SAAS0K,QAAQrM,GAAGA,EAAEnC,WAAWyI,aAAa,WAAY1L,EAAGsU,WAC5DtU,EAAGsU,SAAU,CACb,IAAIM,EAAa,KACbC,EAAW,KACf7U,EAAGiD,WAAWG,iBAAiB,YAAaiM,IACrB,OAAfuF,GACAA,EAAavF,EAAE5O,OACf4O,EAAEvM,mBAGFuM,EAAExM,mBAGV7C,EAAGiD,WAAWG,iBAAiB,WAAYiM,GAAKA,EAAExM,kBAClD7C,EAAGiD,WAAWG,iBAAiB,OAAQiM,IACnC,IAAMuF,EAAY,OAClB,IAAInU,EAAS4O,EAAE5O,OACf,KACIA,EAAOwH,eACJxH,EAAOwH,eAAiB2M,EAAW3M,eACxCxH,EAASA,EAAOwH,cAClB4M,EAAWpU,IAEfT,EAAGiD,WAAWG,iBAAiB,UAAWyL,UAClCgG,SAAiB7U,EAAG8U,KAAK,CACzBC,KAAM/U,EAAGgI,aAAa4M,GACtBI,GAAIhV,EAAGgI,aAAa6M,KAExBD,EAAa,KACbC,EAAW,MAEnB,CAEA,OAAO5D,CACX,CACA,UACM6D,GAAmB,IAAd/T,EAAOS,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACjB,MAAMxB,EAAKC,KACX,IAAI8U,KACAA,EAAIC,GACJA,GACAjU,EAQJ,GACW,OAAPiU,GACY,OAATD,EACL,OACF,MAAME,EAAQC,OAAOH,GAAM1M,MACrB8M,EAAMD,OAAOF,GAAI3M,MACvB,GAAI4M,GAASE,EACT,OACG,GAAIF,EAAQE,EAAK,CACpB,MAAMC,EAAW,IACVpV,EAAG+G,SAASzC,MAAM2Q,EAAQ,EAAGE,EAAM,GACtCnV,EAAG+G,SAASkO,IAEhBjV,EAAG+G,SAASsO,OAAOJ,EAAOE,EAAMF,EAAQ,KAAMG,EAClD,MAAO,GAAIH,EAAQE,EAAK,CACpB,MAAMC,EAAW,CACbpV,EAAG+G,SAASkO,MACTjV,EAAG+G,SAASzC,MAAM6Q,EAAKF,IAE9BjV,EAAG+G,SAASsO,OAAOF,EAAKF,EAAQE,EAAM,KAAMC,EAChD,CACA,MAAME,EAAML,UACNM,GADMN,EAAQE,EAAM,GAAI,GACL,EAAI,QAAU,SACvCH,EAAG/R,WAAWsS,GAAYR,EAAK9R,YAC/BjD,EAAGwV,OACP,EAER,CACJ,iBCLAC,YAxDA,SAASC,GAAiBjV,GAGkB,OAApCA,EAAOoE,aAAa,aAEpBpE,EAAOiL,aAAa,WAAY,KAExC,CAEA,SAASiK,GAAc3V,GACnB,MAAM0U,EAAY,CAAA,EAClB,IAAK,MAAMvL,IAAS,IAAInJ,EAAGiD,WAAW8D,UAAW,CAC7C,MAAM6O,KAACA,EAAO,QAAU1F,EAAU/G,EAAMtE,aAAa,gBAAkB,CAAA,EACvE,OAAQ+Q,GACJ,IAAK,aACL,IAAK,SACL,IAAK,YACL,IAAK,iBACL,IAAK,SACL,IAAK,cACDzM,EAAMuC,aAAa,YAAakK,GACpC,IAAK,OACD,QAAwBtQ,IAApBoP,EAAUkB,GAAqB,MAAM5V,EAAG+D,YACxC,0BACE,8BAA8B6R,KAEpClB,EAAUkB,GAAQzM,EAClBuL,EAAUkB,GAAMC,SAG5B,CACA,GAAI7V,EAAGiD,WAAW8D,SAAStF,OAAQ,CAC/B,MAAMmU,KAACA,EAAO,iBAAmB1F,EAC7BlQ,EAAGiD,WAAW8D,SAAS,GAAGlC,aAAa,gBACtC,CAAA,EACL,MAAM7E,EAAG+D,YACL,6BACE,8BAA8B6R,IAExC,CAIA,GAHMlB,EAAUoB,iBACZpB,EAAUoB,eAAiBpB,EAAUqB,WAGI,OAAzCrB,EAAUC,KAAKqB,cAAc,QAC/B,MAAMhW,EAAG+D,YACP,mBACE,2EAEN,OAAO2Q,CACX,CAQA,MAAAuB,WAG0B1K,EAAWtG,SAAA,OAAAoK,GAAA0B,GAAA3L,GAAAqQ,GAAAvQ,IAAAC,SAAA+Q,EAAA,EAAA,UAAA,CAAA,CA0GhCtO,EACAwK,GAAkB,EAAA,UAAA,CAAA+D,EAAA,EAAA,WAAA,CAAAC,oBA+QlBxO,EAAM,EAAA,SAAA,CAKNA,EAAM,EAAA,SAAA,CAONA,kBAzYJiJ,EACAyD,EACAlB,KACoC,GADtBvS,WAAAA,GAAAgB,SAAAL,WAAAuP,EAAA9Q,KAAA,CAEX,OAAMoW,CAAalN,GACf,MAAMnJ,EAAKC,KACPD,EAAG0U,UAAU4B,OACbtW,EAAG0U,UAAU4B,OAAOC,MAAMpN,GAE1BnJ,EAAGiD,WAAWoT,YAAYlN,EAElC,CACA,OAAA+M,EAAA,CA6ECjC,EAAM,iBACNrM,EACAiK,GAAgBsE,EAAA,CAyDhBvO,EACAqM,EAAM,iBACNb,GAAcgD,GAAA,CA+GdxO,EACAqM,EAAM,iBACNb,GAAc,aA1PX,MAAMpT,EAAKC,KACXD,EAAGwR,oBAAsBxR,EAAGiD,WAAWuN,MAAMc,QAE7CtR,EAAGiT,UAAYlD,KAAKyG,IAAI,EACW,iBAAxBxW,EAAGe,QAAQkS,UAAwBjT,EAAGe,QAAQkS,UACnD,GAENjT,EAAGmT,UAAYpD,KAAKyG,IAAIxW,EAAGiT,UACQ,iBAAxBjT,EAAGe,QAAQoS,UAAwBnT,EAAGe,QAAQoS,UACnD7J,KAENtJ,EAAG+G,SAAW,GACd/G,EAAG0U,UAAYiB,GAAc3V,GAC7BA,EAAGyW,aAAe,GAClB,MAAMC,EAAa1W,EAAGqH,eAClBrH,EAAG0U,UAAUC,KACX,CACEhQ,KAAM3E,EAAGe,QAAQ4V,KAGzB,GACI3W,EAAGe,QAAQ4V,IACRD,EAAW/R,MAAQ3E,EAAGe,QAAQ4V,GACnC,MAAM3W,EAAG+D,YACP,2BACE,4BAGN,IAAK,MAAM6S,IAAO,CACd5W,EAAG0U,UAAU4B,OACbtW,EAAG0U,UAAUmC,QACd,GAAOD,EAAK,CACX5W,EAAGiD,WAAWoT,YAAYO,GAE1B,IACI,MAAMnS,KACHyK,EAAS0H,EAAK5W,EAAG+F,UACtB,CACE,MAAM0M,QAAgBzS,EAAG8H,QAAQrD,GACjC,GAAOgO,GAASjH,SACZ,MAAMxL,EAAG+D,YACL,+BACE,mEAGd,CACJ,CAGA/D,EAAGgC,KAAKmF,WAAW0H,UACf,IAAI,IAAIiI,EAAE,EAAGA,EAAE9W,EAAGiT,UAAW6D,UAAW9W,EAAG+W,UAGvB,GAAhB/W,EAAGiT,iBAAsBjT,EAAGwV,QAGhCxV,EAAGiD,WAAWyI,aAAa,YAAa,UACxC1L,EAAGiD,WAAWyI,aAAa,cAAe,SAGlD,CACAwC,eAAAA,CAAexN,GAA4B,IAA3BkH,OAACA,EAAMgH,OAAEA,EAAM5D,QAAEA,GAAQtK,EACrC,OAAQkH,GACJ,IAAK,UACL,IAAK,aAGI,EAAI,IAAIgH,EAAO1I,SAAS2C,UAAUpC,GAAGtF,OAAOY,GAAG0E,EAAGuE,KAChD4D,EAAO7N,QAAQ2L,QAGlBgJ,GAAiB9G,EAAO3L,YAIxC,CACA,YAGMsP,GACF,MAAMvS,EAAKC,KACLgW,EAAO,GACPe,EAAc,GACdC,GAAiBjX,EAAGsG,iBAAiB,iBAAiB,GAC5D,IAAK,MAAM6C,KAASnJ,EAAG+G,SACfkQ,SAAsB9N,EAAM2J,UACxBmD,EAAKxU,OAASzB,EAAGiT,WAAW+D,EAAY3W,KAAK8I,GAGrD8M,EAAK5V,WAAW8I,EAAMoJ,UAE1B,IAAK,IAAIuE,EAAE,EAAGb,EAAKxU,OAASzB,EAAGiT,UAAW6D,IACtCb,EAAK5V,WAAW2W,EAAYF,GAAGvE,UAEnC,OAAO0D,CACX,CACA,YAEM/D,GAAgC,IAAzBjD,KAACA,EAAO,GAAE7D,MAAEA,GAAM5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EAC9B,MAAMxB,EAAKC,KAEJgP,aAAgBtN,QAAQsN,EAAO,CAACA,IAEvC,IACI,IAAI6H,EAAI,EACRA,EAAI/G,KAAKmH,IAAIjI,EAAKxN,OAAQzB,EAAGmT,WAC7B2D,IAEI9W,EAAG+G,SAAStF,QAAUqV,SAAS9W,EAAG+W,gBAChC/W,EAAG+G,SAAS+P,GAAG5E,OAAO,CAACjD,KAAMA,EAAK6H,GAAI1L,UAGhD,IACI,IAAI0L,EAAI/G,KAAKyG,IAAIvH,EAAKxN,OAAQzB,EAAGiT,WACjC6D,EAAI9W,EAAG+G,SAAStF,cACZzB,EAAGmX,aAEPlI,EAAKxN,OAASzB,EAAGmT,WACjBnT,EAAGwC,KAAK,QAAS,CACbyB,KAAM,uBACNC,QAAS,uFACT8G,QAAShL,EACTiP,OACAlO,QAASf,EAAGe,UAIpB,IACI,IAAI+V,EAAI7H,EAAKxN,OACbqV,EAAI9W,EAAG+G,SAAStF,OAChBqV,IACF9W,EAAG+G,SAAS+P,GAAG/D,QACb3H,GAAOpL,EAAGoL,OAElB,CACA,aAGM2L,GAAsB,IAAdhW,EAAOS,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACpB,MAAMxB,EAAKC,KAEX,IAAI2H,OACAA,EAAMgH,OACNA,EAAS,KAAI5D,QACbA,EAAUhL,EAAEoX,OACZA,EAAS,KAAI3W,OACbA,EAAM4W,SACNA,EAAW,QAAOC,WAClBA,EAAUpE,SACVA,GACAnS,EACJ,GAAgB,SAAZsW,GAAmC,UAAZA,EAAsB,MAAMrX,EAAG+D,YACtD,8BACE,kDAAkDsT,KAExD,GAAIrX,EAAG+G,SAAStF,QAAUzB,EAAGmT,UAAW,CACpC,GACS,SADDD,QAKAlT,EAAGwC,KAAK,QAAS,CACbyB,KAAM,yBACNC,QAAS,2CACTnD,YAGZ,MACJ,CACIf,EAAG+G,SAAStF,SAAYhB,IAAQA,EACpB,UAAZ4W,EAAwBrX,EAAG+G,SAAS,GAClC/G,EAAG+G,SAAS/G,EAAG+G,SAAStF,OAAS,IAIvC,MAAM8V,EAAgBvX,EAAG0U,UAAUC,KAAK6C,WAAU,GAG5CC,EAAiB,GAcvB,IAAIhF,EA8BJ,SA1CMzS,EAAGwC,KAAK,UAAW,CACjBoF,SACAgH,SACA5D,UACAvK,SACA4W,WACAE,gBACAxW,UACAoG,WAAYC,GAAOqQ,EAAepX,KAAK+G,KAKzCpH,EAAG+G,SAAStF,OAOdzB,EAAG+G,gBAAkBF,QAAQ8L,IACzB3S,EAAG+G,SAASqB,IAAIyG,MAAO1F,EAAO2N,IACpB3N,EAAMlG,WAAW0L,WAAWlO,EAAOwC,YACzB,SAAZoU,GACAlO,EAAMlG,WAAWsT,MAAMgB,GACvB9E,QAAgBzS,EAAG8H,QAAQyP,EAAe,CAAC5S,KAAM,eAC3C8N,EAAQ7L,SACP,CAACuC,EAAOsJ,KAEftJ,EAAMlG,WAAWyU,OAAOH,GACxB9E,QAAgBzS,EAAG8H,QAAQyP,EAAe,CAAC5S,KAAM,eAC3C8N,EAAQ7L,SACP,CAAC6L,EAAStJ,IAVwCA,KAchEE,cAtBCrJ,GAAGqW,EAAakB,GACtB9E,QAAgBzS,EAAG8H,QAAQyP,EAAe,CAAC5S,KAAM,OAAQ0D,KAAM,UACzDoK,EAAQ7L,SACd5G,EAAG+G,SAAS1G,KAAKoS,GACjBA,EAAQpK,KAAO,SAqBbrI,EAAGwV,QAGL4B,EAAQ,CACR,MAAMO,EAAkBlF,EAAQlK,KAAK6O,GACrC,GAAOO,EAAiB,CACpB,MAAM1I,QAAa0I,EAAgBpF,SACnCE,EAAQP,OAAO,CAACjD,QACpB,CACJ,CAGA,GAAkB,WAAdqI,GAA8B7E,EAC9BnD,EAASmD,EAAQxP,YAAcwP,EAAQmF,kBACpC,CACH,MAAMC,EACApF,EACc,QAAd6E,EAAuB7E,EACT,UAAd6E,EAAyB7E,EAAQlN,OACjC,KAHU,KAKZsS,GAAYA,EAAW/N,QAC/B,CAGA2N,EAAehG,QAAQrK,GAAKA,EAAIqL,IAE5BzS,EAAG2G,cAAc8L,EAAQrH,OACjC,CACA,gBAGM+L,GAAyB,IAAdpW,EAAOS,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACvB,MAAMxB,EAAKC,KACX,IAAI2H,OACAA,EAAMgH,OACNA,EAAS,KAAI5D,QACbA,EAAUhL,EAAES,OACZA,EAAM6W,WACNA,EAAUQ,eACVA,EAAc5E,SACdA,GACAnS,EACJ,IAAMN,EAAQ,CACV,GAAIqX,EAAgB,IAChB,MAAMrL,IAAK,IAAIzM,EAAG+G,UACjBuB,UACH,SAAUmE,EAAEqG,UAAW,CACrBrS,EAASgM,EACT,KACJ,CACMhM,IACFA,EAAST,EAAG+G,SAAS/G,EAAG+G,SAAStF,OAAS,GAC1CqW,GAAiB,EAIzB,CACA,MAAMC,EACFtX,aAAkBkB,MAAQlB,EACxB,CAACA,GAEP,IAAK,MAAMuX,IAAiB,IAAID,GAASzP,UAAW,CAChD,GAAItI,EAAG+G,SAAStF,QAAUzB,EAAGiT,UACzB,OAAQC,GACJ,IAAK,OACD,MACJ,IAAK,QAED,kBADM8E,EAAcjF,QAGxB,QAMI,YALA/S,EAAGwC,KAAK,QAAS,CACbyB,KAAM,yBACNC,QAAS,+CACTnD,YAKhB,GAAI+W,UAA0BE,EAAclF,UAAW,SACvD,IAAImF,EAAU,KACVC,EAAmB,KACvB,MAAMC,EAAcnY,EAAG+G,SAClB2B,OAAO,CAACS,EAAO2N,EAAGnE,KACf,GAAIxJ,EAAMlG,WAAW0L,WAAWqJ,EAAc/U,YAAa,CACvD,GAAkB,WAAdqU,EACAhI,EAASnG,EAAMlG,WAAYkG,EAAMlG,WAAW2U,kBACzC,CACH,MAAMC,EACY,QAAdP,EAAuBnO,EACP,UAAdmO,EAAyBnO,EAAM5D,OAC/B,KAEFsS,GAAYA,EAAW/N,QAC/B,CAUA,OARAmO,EAAU9O,EAEV+O,EACKvF,EAAIlR,OAAQqV,EAAI,EAAKoB,EAAmBpB,EAClC,GAALA,EAAS,KACTA,EAAI,GAGH,CACX,CACA,OAAO,IAITsB,EAAgB,SAEhBpY,EAAGwC,KAAK,aAAc,CACxBoF,SACAgH,SACA5D,UACAvK,OAAQuX,EACRC,UACAI,cAAeJ,EAAQhV,WACvBlC,UACAuX,UAAWlR,GAAOgR,EAAc/X,KAAK+G,KAIzC6Q,EAAQhV,WAAW4S,SACnB7V,EAAG+G,SAAWoR,QACRnY,EAAGwV,QAGT4C,EAAc3G,QAAQrK,GAAKA,KAGF,OAArB8Q,GACAlY,EAAG+G,SAASmR,GAAkB9M,OAGtC,CAEJ,CACA,aAAM0H,GACF,MAAM9S,EAAKC,KACX,IACI,MAAMkJ,KAASnJ,EAAG+G,SACpB,UACUoC,EAAM2J,UAChB,OAAO,EACT,OAAO,CACX,CACA,WACMC,GAAoB,IAAd3H,MAACA,GAAM5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EAClB,MAAMxB,EAAKC,KACX,aAAaD,EAAGkS,OAAO,CAACjD,KAAM,GAAI7D,SACtC,CAEAmN,KAAAA,GAAwB,IAAlB/O,MAACA,EAAQ,GAAEhI,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EAGhB,MAAMxB,EAAKC,UACX,OADWA,KACD8G,SAAStF,OAASyT,OAAO1L,EACvC,CAEA6N,QAAAA,GAAoC,IAA3B5W,OAACA,EAAM+X,OAAEA,EAAS,GAAEhX,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EAC5B,OAAO0T,OAAOzU,GAAQ4H,MAAQ6M,OAAOsD,EACzC,CACA,WAAMhD,GACF,MAAMxV,EAAKC,KAGX,IAAK,MAAM6W,KAAK9W,EAAG+G,SACf/G,EAAG+G,SAAS+P,GAAGzO,KAAOyO,EACtB9W,EAAG+G,SAAS+P,GAAG7L,WAInB,GACOjL,EAAG0U,UAAUqB,WACV/V,EAAG0U,UAAUoB,eACrB,IAAK,MAAMgB,KAAK9W,EAAG+G,SAAU,CAE3B,MAAM0R,EAAa3B,GAAK9W,EAAG+G,SAAStF,OAAS,EACvCiX,EACF5B,GAAK,EAAI,KACP2B,EAAa,iBACb,YAGAE,EAAc3Y,EAAG+G,SAAS+P,GAAG7T,WAC7B2V,EAAWD,EAAYE,uBACvBC,EAAgBF,GAAYA,EAAS/T,aAAa,aACxD,GAAIiU,IAAkBJ,EAAS,CACpBI,GAAeF,EAAS/C,SAC/B,MAAMkD,EAAc/Y,EAAG0U,UAAUgE,GAC1BA,GAAcK,GAAaJ,EAAY1Q,cAAc+Q,aAAaD,EAAYvB,WAAU,GAAOmB,EAC1G,CACA,GAAIF,EAAY,CACZ,MAAMQ,EAAWN,EAAYO,mBACtBD,GAAUA,EAASpD,QAC9B,CAEJ,CAYA,GATI7V,EAAG0U,UAAUyE,aACTnZ,EAAG+G,SAAStF,OACZzB,EAAG0U,UAAUyE,WAAWtD,eAElB7V,GAAGqW,EAAarW,EAAG0U,UAAUyE,aAMvCnZ,EAAG0U,UAAU0E,aACPpZ,EAAGmT,UACX,CACE,IAAIkG,GAAqBrZ,EAAGmT,WAAa,GAAKnT,EAAG+G,SAAStF,OAM1D,GAJI4X,EAAoB,GACM,IAAvBrZ,EAAG+G,SAAStF,QACTzB,EAAG0U,UAAUyE,YACrBE,IACErZ,EAAGyW,aAAahV,OAAS4X,EACzB,IAAK,IAAIvC,EAAI9W,EAAGyW,aAAahV,OAAQqV,EAAIuC,EAAmBvC,IAAK,CAC7D,MAAMsC,EAAcpZ,EAAG0U,UAAU0E,YAAY5B,WAAU,GACnDxX,EAAG0U,UAAUmC,OACb7W,EAAG0U,UAAUmC,OAAOa,OAAO0B,GAE3BpZ,EAAGiD,WAAWoT,YAAY+C,GAE9BpZ,EAAGyW,aAAapW,KAAK+Y,EACzB,MAEA,IAAK,IAAItC,EAAI9W,EAAGyW,aAAahV,OAAQqV,EAAIuC,EAAmBvC,IACxD9W,EAAGyW,aAAa6C,MAAMzD,QAGlC,CAGA7V,EAAGuK,YAAY,YAAYkH,QAAQ5G,IAC/B,MAAM7K,EAAKC,KACLyB,EAAOmJ,EAAIE,iBACjBF,EAAI5H,WAAWsW,UAAYvZ,EAAGqX,SAAS3V,KAE3C1B,EAAGuK,YAAY,SAASkH,QAAQ5G,IAC5B,MAAM7K,EAAKC,KACLyB,EAAOmJ,EAAIE,iBACjBF,EAAI5H,WAAWsW,UAAYvZ,EAAGuY,MAAM7W,IAE5C,CAACuD,cAAAC,OCnjBE,MAAMsU,WAAczN,EAAK9G,SAAA,MAAA8L,IAAA5L,UAgC3ByC,EACAiK,GAAgB,EAAA,UAAA,CAAA,CAyBhBjK,EACAwK,GAAkB,EAAA,UAAA,CAkDlBxK,kBAAMyH,EA7GqB,GA6GrBxO,WAAAA,GAAAgB,SAAAL,WAAAuP,GAAA9Q,KAAA,CA5GP,YAAM+G,GACF,MAAMhH,EAAKC,KAUX,GATAD,EAAG8E,cAC2B,UAA1B9E,EAAGiD,WAAWC,SACe,WAA1BlD,EAAGiD,WAAWC,SACY,aAA1BlD,EAAGiD,WAAWC,SAErBlD,EAAGyZ,YACGzZ,EAAG8E,aAC0C,YAA5CF,OAAO5E,EAAGiD,WAAW0B,MAAMxB,cAE9BnD,EAAG8E,YAAa,OACVjD,MAAMmF,SACZ,MAAM0S,EAAOvY,OAAOgK,OAAOnL,EAAG+G,UAC9B,GAAmB,GAAf2S,EAAKjY,OAAa,MAAMzB,EAAG+D,YAC3B,kBAEE,0EAAmB2V,EAAKjY,iBAE9B,MAAMkY,EAAMD,EAAK,GACjB,GAAI1Z,EAAGe,QAAQ4D,OAASgV,EAAI5Y,QAAQ4D,KAAM,MAAM3E,EAAG+D,YAC/C,0BACE,mBAAmB/D,EAAGe,QAAQ4D,0CACOgV,EAAI5Y,QAAQ4D,UAEvD3E,EAAGsL,gBAAkBqO,EAAI1W,UAC7B,MACIjD,EAAGsL,gBAAkBtL,EAAGiD,UAGhC,CACA,YAEMsP,GACF,MAAMvS,EAAKC,KACL2Z,EAAU5Z,EAAGsL,gBACnB,IAAI2F,EAgBJ,OAdIA,EADAjR,EAAG8E,YACI3D,OAAOgK,aAAatJ,MAAM0Q,UAAU,GACpCvS,EAAGyZ,aACAG,EAAQC,QAEM,SAAxB7Z,EAAGe,QAAQ+Y,UAC0B,WAAlCF,EAAQ1W,QAAQ6W,eACkD,OAAlEH,EAAQ7Y,QAAQ6Y,EAAQI,gBAAgBnV,aAAa,SAIjD4C,KAAKI,UAAU+R,EAAQ7Y,QAAQ6Y,EAAQI,eAAeC,MAEtDL,EAAQ1Y,MAGS,SAAxBlB,EAAGe,QAAQ+Y,SAAsB5J,EAAUe,IAAS,KAClDA,CAEV,CACA,YAEMiB,GAAuC,IAAhCjD,KAACA,EAAO,GAAE7D,MAAEA,GAAQ,GAAK5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACrC,MAAMxB,EAAKC,KACL2Z,EAAU5Z,EAAGsL,gBACnB,GACoB,iBAAT2D,GACgB,UAApBjP,EAAGe,QAAQ4D,MACa,SAAxB3E,EAAGe,QAAQ+Y,SAChB,CACE7K,IAAS,KACT,MAAMiL,EAAaN,UACnB3K,GADqD,aAAlC2K,EAAQ1W,QAAQ6W,cAElBtS,KAAKI,UAAUoH,EAAM,KAAM,GACtCxH,KAAKI,UAAUoH,KAChB,EACT,CACA,GAAIjP,EAAG8E,YACH,aAAajD,MAAMqQ,OAAO,CAACjD,KAAM9N,OAAOuR,YACpC,CAAC,CAACvR,OAAOgZ,KAAKna,EAAG+G,UAAU,GAAIkI,KAChC7D,UACA,GAAIpL,EAAGyZ,WACVzZ,EAAGiD,WAAW4W,UAAa5K,OACxB,GACqB,SAAxBjP,EAAGe,QAAQ+Y,UAC0B,WAAlCF,EAAQ1W,QAAQ6W,eAGnB,GADA/Z,EAAGiD,WAAW/B,MAAS+N,GAAQ,YAC3B2K,EAAQI,cAAsB,CAE9B,MAAMI,EAASlK,EAAUjB,IAAS,GAC5BoL,EAAM1Y,MAAMoT,KAAK6E,EAAQ7Y,SAAS8H,UACpCrB,GAAOA,EAAIyS,OAASG,IAEZ,IAARC,IAAYT,EAAQI,cAAgBK,EAC5C,OAEAra,EAAGiD,WAAW/B,MAAQ+N,EAG1B,OADI7D,GAAOpL,EAAGoL,QACPpL,EAAGiD,WAAW/B,KACzB,CACA,aAAM4R,GACF,MAAM9S,EAAKC,KACLiB,EACFlB,UAGJ,QAHIA,EAAGyZ,WAAa,SACRzZ,EAAGuS,UAEA1M,OAAOpE,MAE1B,CACA,WACMsR,GAAoB,IAAd3H,MAACA,GAAM5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EAClB,MAAMxB,EAAKC,WACLD,EAAGkS,OAAO,CACZjD,KAA8B,SAAxBjP,EAAGe,QAAQ+Y,SAAsB,KAAO,GAC9C1O,SAER,ECvHG,MAAMkP,WAAed,GAAMvU,SAAA,MAAA8L,IAAA5L,SAe7ByC,EAAM,EAAA,UAAA,CAWNA,EAAM,EAAA,WAAA,IAAAyH,EA1BuB,GA0BvBxO,WAAAA,GAAAgB,SAAAL,WAAAuP,GAAA9Q,KAAA,CAzBP,YAAM+G,SACInF,MAAMmF,SACZ,MAAMhH,EAAKC,KACLsa,EAAYva,EAAGsL,gBAAgBpI,QAC/BwL,EAAa1O,EAAGsL,gBAAgBzG,aAAa,QACnD,GACiB,SAAb0V,GAC6C,WAAzC7L,GAAc,UAAUvL,cAC9B,MAAMnD,EAAG+D,YACP,qBACE,wDAEA2K,IAAY1O,EAAGsL,gBAAgB3G,KAAO,SAChD,CACA,YAEM4N,GACF,MAAMvS,EAAKC,KACLgP,QAAapN,MAAM0Q,UAAO/Q,WAChC,OAAIxB,EAAG8E,YAAoBmK,EAEvBA,EAAKxN,SAAYkI,MAAMsF,GAAQiG,OAAOjG,GACpC,IAEV,CACA,YAEMiD,GAAyC,IAAlCjD,KAACA,EAAO,KAAI7D,MAAEA,GAAQ,GAAK5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACvC,MAAMxB,EAAKC,UACLua,SAAkBvL,EACxB,GAFWhP,KAEJ6E,YAAa,aAAajD,MAAMqQ,OAAO,CAACjD,OAAM7D,UACrD,MAAM6F,EAAQ4B,UAQd,aARoBhR,MAAMqQ,OAAO,CAACjD,KAClB,UAAZuL,EAAuBvL,EACT,UAAZuL,GACKvL,EAAKxN,SACHkI,MAAMsF,GACTiG,OAAOjG,GACX,KACH7D,SAEP,CACA,aAAM0H,GACF,MAAM9S,EAAKC,KACLiB,EAAQ2R,UACd,OAAiB,aADG7S,EAAGuS,QAE3B,EC9CJ,MAAMkI,GAAc,MACpB,SAASC,GAAavK,GAElB,OAAkB,GAAdA,EAAI1O,OAAoB,IAAIkZ,KAAK,CACjCxK,EAAI7O,UAAU,EAAG,GACjB6O,EAAI7O,UAAU,EAAG,GACjB6O,EAAI7O,UAAU,EAAG,IACnBiD,KAAK,MASW,IAAd4L,EAAI1O,QACS,KAAV0O,EAAI,IACM,KAAVA,EAAI,GACF,IAAIwK,KAAKxK,GAMXyK,GACX,CACA,SAASC,GAAQ3Z,GACb,OAAOA,EAAM4Z,cAAcjX,QAAQ4W,GAAa,GACpD,CACO,MAAMM,WAAavB,GAAMvU,SAAA,MAAA8L,IAAA5L,SAe3ByC,EAAM,EAAA,UAAA,CAaNA,EAAM,EAAA,WAAA,IAAAyH,EA5BqB,GA4BrBxO,WAAAA,GAAAgB,SAAAL,WAAAuP,GAAA9Q,KAAA,CA3BP,YAAM+G,SACInF,MAAMmF,SACZ,MAAMhH,EAAKC,KACLsa,EAAYva,EAAGsL,gBAAgBpI,QAC/BwL,EAAa1O,EAAGsL,gBAAgBzG,aAAa,QACnD,GACiB,SAAb0V,GAC2C,SAAvC7L,GAAc,QAAQvL,cAC5B,MAAMnD,EAAG+D,YACP,mBACE,oDAEA2K,IAAY1O,EAAGsL,gBAAgB3G,KAAO,OAChD,CACA,YAEM4N,GACF,MAAMvS,EAAKC,KACLgP,QAAapN,MAAM0Q,UAAO/Q,WAChC,GAAIxB,EAAG8E,YAAa,OAAOmK,EAC3B,IAAMA,EAAKxN,OAAQ,OAAO,KAC1B,MAAMP,EAAQwZ,GAAazL,GAC3B,OACItF,MAAMzI,GAAS,KACb2Z,GAAQ3Z,EAElB,CACA,YAEMgR,GAAyC,IAAlCjD,KAACA,EAAO,KAAI7D,MAAEA,GAAQ,GAAK5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACvC,MAAMxB,EAAKC,UACX,GADWA,KACJ6E,YAAa,aAAajD,MAAMqQ,OAAO,CAACjD,OAAM7D,UACrD,MAAMlK,EACF+N,aAAgB0L,KAAO1L,EACN,iBAARA,EAAmB,IAAI0L,KAAK1L,GACjCA,GAAwB,iBAARA,EAClByL,GAAazL,GADyB2L,IAGtC3J,EAAO4B,UAIb,aAJmBhR,MAAMqQ,OAAO,CAACjD,KAC7BtF,MAAMzI,GAAS,KACb2Z,GAAQ3Z,GACXkK,SAEP,CACA,aAAM0H,GACF,MAAM9S,EAAKC,KACLiB,EAAQ2R,UACd,OAAiB,aADG7S,EAAGuS,QAE3B,YC5EG,MAAMyI,WAAcxB,GAAMvU,SAAA,MAAA8L,IAAA5L,EAAAlF,KAAA,CAAA,CAAA,CAsC5B2H,EACAiK,GAAgB,EAAA,UAAA,CAAA,CAIhBjK,EACAwK,oBAAkB/C,EA5CU,GAC7BxO,WAAAA,GACIkQ,GAAAlP,SAAML,YACN,MAAMxB,EAAKC,KACX,IAAIgb,EAASjb,EAAGuF,OAAOwB,SAAS/G,EAAGqI,MAC/B4I,EAAOjR,EACPib,GACAjb,EAAGiD,WAAWyI,aAAa,OAAQuP,EAAOC,gBAC1CD,EAAOE,aAAa9a,KAAKL,EAAGiD,YAC5BgO,EAAO,CAAA,IAEPgK,EAASjb,EAETib,EAAOC,eAAiBpL,IACxBmL,EAAOhY,WAAWyI,aAAa,OAAQuP,EAAOC,gBAC9CD,EAAOE,aAAe,CAClBF,EAAOhY,aAGf,IAAImY,EAAqBC,GAAmB/a,KAAK2a,GAGjD,OAFAjb,EAAGiD,WAAWG,iBAAiB,QAASgY,GACxCpb,EAAGiD,WAAWG,iBAAiB,UAAWgY,GACnCnK,CACX,CACA,YAAMjK,SACInF,MAAMmF,SACZ,MAAMhH,EAAKC,KACLsa,EAAYva,EAAGsL,gBAAgBpI,QAC/BwL,EAAa1O,EAAGsL,gBAAgBzG,aAAa,QACnD,GACiB,SAAb0V,GAC4C,UAAxC7L,GAAc,SAASvL,cAC7B,MAAMnD,EAAG+D,YACP,oBACE,sDAEA2K,IAAY1O,EAAGsL,gBAAgB3G,KAAO,QAChD,CACA,YAEM4N,GACF,OAAOtS,KAAKkb,aAAa5S,KAAK+S,GAAGA,EAAEzB,UAAU3Y,OAAS,IAC1D,CACA,YAEMgR,GAAyC,IAAlCjD,KAACA,EAAO,KAAI7D,MAAEA,GAAQ,GAAK5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACvC,MAAM+Z,EAAWtb,KAAKkb,aAAa5S,KAAK+S,GAAGA,EAAEpa,QAAU+N,GACnDsM,EACAA,EAAS1B,SAAU,EAEnB5Z,KAAKkb,aAAa1J,QAAQ6J,GAAGA,EAAEzB,SAAU,GAEzCzO,GAAOnL,KAAKmL,OACpB,CACA,aAAM0H,GACF,QAAU,EAAI7S,KAAKkb,aAAatS,UAAUyS,GAAGA,EAAEzB,SACnD,EAGJ,SAASwB,GAAmBhY,GACxB,GACmB,UAAfA,EAAMsB,MACY,YAAftB,EAAMsB,MAAqC,WAAftB,EAAMY,KAMvC,CACE,MAAMjE,EAAKC,KACX,IAAI4Z,GAAU,EACd,MAAM2B,EAAgBra,iBAAOY,GAAG/B,EAAGyb,aAAahb,OAAQ4C,EAAM5C,UAC3CoZ,GACb7Z,EAAGyb,YAAY5B,SACC,YAAfxW,EAAMsB,MAEb3E,EAAGyb,YAAc,CACbhb,OAAQ4C,EAAM5C,OACdoZ,WAEJxW,EAAM5C,OAAOoZ,QAAUA,CAC3B,CACJ,CCpFA,MAAM6B,GAAW,yBACXC,GAAiB,yPAYhB,MAAMC,WAAcpC,GAAMvU,SAAA,MAAA8L,IAAA5L,SAkD5ByC,EAAM,EAAA,UAAA,CAWNA,EAAM,EAAA,WAAA,IAAAyH,EA7DsB,GA6DtBxO,WAAAA,GAAAgB,SAAAL,WAAAuP,GAAA9Q,KAAA,CA5DP,YAAM+G,SACInF,MAAMmF,SACZ,MAAMhH,EAAKC,KAEX,GAAID,EAAG8E,YAAa,OAGpB,MAAMyV,EAAYva,EAAGsL,gBAAgBpI,QAC/BwL,EAAa1O,EAAGsL,gBAAgBzG,aAAa,QACnD,GACiB,SAAb0V,GAC4C,UAAxC7L,GAAc,SAASvL,cAC7B,MAAMnD,EAAG+D,YACP,oBACE,sDAEA2K,IAAY1O,EAAGsL,gBAAgB3G,KAAO,SAG5C,MAAMkX,EAAY7b,EAAGsL,gBAAgBzG,aAAa,SAClD7E,EAAG8b,UACe,OAAdD,GACwB,KAArBA,EAAUhW,OAIjB7F,EAAG+b,iBAAmB/b,EAAGsL,gBAAgBzG,aAAa,SAAW,IAC3D7E,EAAG8b,WAAW9b,EAAGsL,gBAAgBI,aACnC,QACE1L,EAAG+b,iBAAmBJ,IAI5B,MAAMK,EAAe3P,IAEE,UAAfA,EAAGpI,MACY,UAAZoI,EAAG4P,WACS3W,IAAZ+G,EAAGpI,OAIVjE,EAAG8b,WAAY,EACf9b,EAAGsL,gBAAgBI,aAAa,QAAS1L,EAAG+b,oBAEhD/b,EAAGsL,gBAAgBlI,iBAAiB,UAAW4Y,GAC/Chc,EAAGsL,gBAAgBlI,iBAAiB,QAAS4Y,GAC7Chc,EAAGsL,gBAAgBlI,iBAAiB,SAAU4Y,EAElD,CACA,YAEMzJ,GACF,MAAMvS,EAAKC,KACX,IAAIgP,QAAapN,MAAM0Q,UAAO/Q,WAK9B,OAJMxB,EAAG8E,cAAamK,EAClBjP,EAAG8b,WAAa7M,EAAK5N,MAAMqa,IAAYzM,EAAK9L,cAC1C,MAEC8L,CACX,CACA,YAEMiD,GAAyC,IAAlCjD,KAACA,EAAO,KAAI7D,MAAEA,GAAQ,GAAK5J,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EACvC,MAAMxB,EAAKC,KAELD,EAAG8E,cAGQ,OAATmK,GACKA,EAAK5N,MAAMqa,KAQhB1b,EAAG8b,WAAY,EACf9b,EAAGsL,gBAAgBI,aAAa,QAAS1L,EAAG+b,oBAP5C/b,EAAG8b,WAAY,EACf9b,EAAGsL,gBAAgBI,aACf,QACE1L,EAAG+b,iBAAmBJ,MAOpC,MAAMza,QAAcW,MAAMqQ,OAAO,CAACjD,OAAM7D,UACxC,OACIpL,EAAG8b,UAAY5a,EACb,IAEV,CACA,aAAM4R,GACF,MAAM9S,EAAKC,KACLiB,EAAQ2R,UACd,OAAiB,aADG7S,EAAGuS,QAE3B,EC3FJ,IAAK,MAAOlK,EAAMuD,KAAezK,OAAOC,QAAQ,CAC5C4M,UACAoC,aACArE,OACAkK,GACAuD,SACAc,UACAS,QACAC,SACAY,WACAjQ,EAAWtD,EAAKuD,GAGpB,MAAMsQ,WAAkBnQ,EACpBlL,WAAAA,CACIoC,GAKF,IAJIkZ,cACEA,EAAgB,CAAA,KACbC,GACN5a,UAAAC,OAAA,QAAA6D,IAAA9D,UAAA,GAAAA,UAAA,GAAG,CAAA,EAEJ,MAAMT,EAAU,IACTqb,EACH/T,KAAM,GACN1D,KAAM,QAEV9C,MACIoB,EACElC,EACA,MAEN,MAAMf,EAAKC,KACXD,EAAGiG,eAAejG,EAAGiD,WAAYlC,GACjCf,EAAG8F,QAAU,IACN9F,EAAG8F,WACH3E,OAAOuR,YACNvR,OAAOC,QAAQ+a,GACV/T,IAAI1H,IAAA,IAAE2H,EAAMN,GAAKrH,EAAA,MAAG,CAAC2H,EAAMN,EAAKzH,KAAKN,QAGlDA,EAAGiD,WAAWG,iBACV,QACE0L,EAAexO,KAAKN,IACpB,GAEN,IAAI8L,EAAgB9L,EACxB,CACA,YAAMgH,GACF,MAAMhH,EAAKC,KACXD,EAAGiD,WAAWyI,aAAa,YAAa,cAClC7J,MAAMmF,SACZhH,EAAGiD,WAAWyI,aAAa,YAAa,QAC5C,EAG6B,OAAjCwQ,GAAUvQ,WAAaA,EAAUuQ,EAAA"}