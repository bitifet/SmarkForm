{"version":3,"file":"SmarkForm.umd.js","sources":["../src/lib/events.js","../src/lib/legacy.js","../src/lib/component.js","../src/lib/hotkeys.js","../src/types/trigger.type.js","../src/lib/helpers.js","../src/types/label.type.js","../src/decorators/foldable.deco.js","../src/decorators/export_to_target.deco.js","../src/decorators/import_from_target.deco.js","../src/types/form.type.js","../src/types/list.decorators/smartdisabling.deco.js","../src/decorators/mutex.deco.js","../src/types/list.decorators/sortable.deco.js","../src/types/list.type.js","../src/types/input.type.js","../src/types/number.type.js","../src/types/date.type.js","../src/types/radio.type.js","../src/types/color.type.js","../src/main.js"],"sourcesContent":["// lib/events.js\n// =============\n\nconst sym_local_events = Symbol(\"Events\");\nconst sym_all_events = Symbol(\"allEvents\");\nconst re_actionEvHandler = /^on(?:Before|After)Action_/;\nconst re_localEvHandler = /^onLocal_/;\nconst re_allEvHandler = /^onAll_/;\n\nfunction registerEvHandler(evList, evType, evHandler) {\n    const me = this;\n    if (! evList.has(evType)) evList.set(evType, []);\n    evList.get(evType).push(evHandler.bind(me));\n    return me; // Make chainable.\n};\n\nexport const events = function events_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class eventEnebledTarget extends target {\n            constructor(target, optionsSrc, ...args) {\n\n                // Capture before/after action event hanlers through\n                // onBeforeAction_xxx / onAfterAction_xxx options\n                // ...and onLocal_xxx / onAll_xxx regular event handlers.\n                const options = {};\n                const onOptionCallbacks = [];\n                for (\n                    const [key, value]\n                    of Object.entries(optionsSrc)\n                ) if (key.match(re_actionEvHandler)) {\n                    onOptionCallbacks.push([key.substring(2), value, \"onLocal\"])\n                } else if (key.match(re_localEvHandler)) {\n                    onOptionCallbacks.push([key.substring(8), value, \"onLocal\"])\n                } else if (key.match(re_allEvHandler)) {\n                    onOptionCallbacks.push([key.substring(6), value, \"onAll\"])\n                } else {\n                    // Threat the rest as regular options:\n                    options[key] = value;\n                };\n\n                // Call original constructor:\n                super(target, options, ...args);\n\n                // Events enhancing:\n                const me = this;\n                const ImRoot = Object.is(me, me.root);\n                me[sym_local_events] = new Map();\n                if (ImRoot) me.root[sym_all_events] = new Map();\n                me.onLocal = registerEvHandler.bind(me, me[sym_local_events]);\n                me.onAll = registerEvHandler.bind(me.root, me.root[sym_all_events]);\n                me.on = me.onLocal; // Handy and readable alias for local events.\n\n                // Setup action handlers provided through options:\n                for (\n                    const [evt, handler, listenLevel]\n                    of onOptionCallbacks\n                ) me[listenLevel](evt, handler);\n\n            };\n            async emit(evType, evData) {\n                const me = this;\n                const handlers = [ // Local handlers, then global ones:\n                    ...(me[sym_local_events].get(evType) || []),\n                    ...(me.root[sym_all_events].get(evType) || []),\n                ];\n                let defaultPrevented = false;\n                if (handlers.length) {\n                    let propagationStopped = false;\n                    evData.preventDefault = () => defaultPrevented = true;\n                    evData.stopPropagation = () => propagationStopped = true;\n                    for (const handler of handlers) {\n                        if (propagationStopped) break;\n                        await handler(evData);\n                    };\n                };\n                return ! defaultPrevented;\n            };\n        };\n    };\n};\n\n","// src/lib/legacy.js\n// =================\n\nexport default {\n    disEnhance(me) {\n\n        // Prevent <form>'s default behaviour:\n        if (me.targetNode.tagName.toLowerCase()) {\n            me.targetNode.addEventListener('submit', function(event) {\n\n                // Avoid form's regular submission:\n                event.preventDefault();\n\n                // More work may be needed to be done here (let's give it some\n                // more thought...)\n\n            });\n        };\n\n    },\n};\n","// lib/component.js\n// ================\nconst componentTypes = {};\n\nimport {events} from \"./events.js\";\nimport legacy from \"./legacy.js\";\n\nconst sym_smart = Symbol(\"smart_component\");\nconst re_valid_typename_chars = /^[a-z0-9_]+$/i;\nconst re_has_wildcards = /[\\*\\?]/;\nconst wild2regex = wname => new RegExp(//{{{\n    \"^\"\n    + wname\n        .replace(/\\*+/g, \".*\")\n        .replace(/\\?/g, \".\")\n    + \"$\"\n);//}}}\n\nconst errors = {\n    renderError: class renderError extends Error {//{{{\n        constructor(code, message, path) {\n            super(`RenderError(${path}): ${message}`);\n            this.code = code;\n            this.path = path;\n            this.stack = this.stack\n                .split(\"\\n\")\n                .slice(2)\n                .join(\"\\n\")\n            ;\n        };\n    },//}}}\n};\n\nfunction inferType(node, parentComponent) {//{{{\n    switch (node.tagName.toLowerCase()) {\n        case \"ul\":\n        case \"ol\":\n        case \"table\":\n        case \"thead\":\n        case \"tbody\":\n        case \"tfoot\":\n            return \"list\";\n        case \"input\":\n            const type = String(node.getAttribute(\"type\")||\"\").toLowerCase();\n            if (parentComponent.isSingleton) return parentComponent.options.type;\n            switch(type) {\n                case \"number\":\n                case \"date\":\n                case \"radio\":\n                case \"color\":\n                    return type;\n            };\n        case \"textarea\":\n        case \"select\":\n            return \"input\";\n        case \"label\":\n            return \"label\";\n        default:\n            //if (parentComponent.options.type == \"list\") return \"form\";\n        case \"form\":\n            return \"form\";\n    };\n};//}}}\n\n@events\nexport class SmarkComponent {\n    constructor(//{{{\n        targetNode\n        , {\n            property_name = \"smark\",\n            ...options\n        } = {}\n        , parent\n    ) {\n        const me = this;\n\n        me.validName = (function nameGenerator() {//{{{\n            let counter = 0;\n            return function(...names){\n                for (\n                    let n0 of names\n                ) if (\n                    typeof n0 == \"string\"\n                ) {\n                    n0 = n0.trim();\n                    if (n0.length) return n0;\n                };\n                return 'UNNAMED'+(++counter);\n            };\n        })();//}}}\n\n        me.actions = {};\n        me.property_name = property_name;\n        me.selector = `[data-${me.property_name}]`;\n        me.types = componentTypes;\n        me.targetNode = targetNode;\n        me.options = options;\n        me.setNodeOptions(me.targetNode, me.options);\n\n        me.parent = parent;\n        if (! me.parent instanceof SmarkComponent) throw me.renderError(\n            'INVALID_PARENT'\n            , `Smark Components must have valid Smark Component parent.`\n        );\n        me.root = (\n            me.parent === null ? me\n            : me.parent.root\n        );\n\n        // Parents iterator:\n        me.parents = {};\n        me.parents[Symbol.iterator] = function* () {\n            let current = me;\n            while (current) {\n                yield current;\n                current = current.parent;\n            };\n        };\n\n        // Calculate prefix or disable autoId:\n        const autoId = me.inherittedOption(\"autoId\", false);\n        me.genId = (\n            autoId === false ? false\n                // Do not auto-generate IDs.\n            : autoId === true ? p => p.replace(/\\//g, \"_\")\n                // Use \"_path_in_underscore_style\".\n            : typeof autoId == \"string\" ? p => autoId+p.replace(/\\//g, \"_\")\n                // Use \"prefix\" + \"_path_in_underscore_style\".\n            : typeof autoId == \"function\" ? autoId\n                // Use fn(path) custom style.\n            : false\n                // Failback to disabled.\n        );\n\n        me.onRenderedTasks = [];\n\n        let setRendered;\n        me.renderedSync = false;\n        me.rendered = new Promise(resolve => setRendered = resolve);\n\n        me.children = {};\n        me.targetNode[sym_smart] = me;\n\n        (async ()=>{\n            await me.render();\n            for (\n                const task of me.onRenderedTasks\n            ) await task();\n            me.onRenderedTasks = null;\n            setRendered(true);\n            setTimeout(()=>me.renderedSync = true, 1);\n        })();\n        if (me.options.onRendered) me.onRendered(me.options.onRendered);\n\n    };//}}}\n    onRendered(cbk) {//{{{\n        const me = this;\n        if (me.onRenderedTasks) {\n            me.onRenderedTasks.push(cbk.bind(me));\n        } else {\n            cbk.bind(me)();\n        };\n    };//}}}\n    getNodeOptions(node, defaultOptions) {//{{{\n        const me = this;\n        const optionsSrc = (\n            node.dataset[me.property_name] || \"\"\n        ).trim() || null;\n        const options = {\n            ...defaultOptions,\n            ...(()=>{\n                try {\n                    const opt = JSON.parse(optionsSrc);\n                    if (typeof opt != \"object\") throw new Error(\"NO_OBJECT\");\n                    return opt;\n                } catch (err) {\n                    return (\n                        optionsSrc.match(re_valid_typename_chars) ? {type: optionsSrc}\n                        : {}\n                    );\n                };\n            })(),\n        };\n        if (! options.action && ! options.type) options.type = inferType(node, me);\n        me.setNodeOptions(node, options);\n        return options;\n    };//}}}\n    setNodeOptions(node, options) {//{{{\n        const me = this;\n        node.dataset[me.property_name] = JSON.stringify(options);\n    };//}}}\n    async enhance(node, defaultOptions) {//{{{\n        const me = this;\n\n        // Sanityze and store options:{{{\n        let options = me.getNodeOptions(node, defaultOptions);\n        //}}}\n\n        // Prevent default behaviours:{{{\n        legacy.disEnhance(me);\n        //}}}\n\n        // Classify:{{{\n        if (options.action) {\n            if (! options.type) options.type = \"trigger\"; // Make type optional for triggers.\n            if (options.type != \"trigger\") throw me.renderError(\n                \"ACTION_IN_NON_TRIGGER\"\n                , `\"action\" property is only allowed for \"trigger\" components but \"${options.type}\" type specified.`\n            );\n        } else if (typeof options.type != \"string\") {\n            throw me.renderError(\n                \"NO_TYPE_PROVIDED\"\n                , `Invalid SmarkForm item: type is mandatory for non trigger components.`\n            );\n        };\n        //}}}\n\n        // Enhance:{{{\n        const ctrl = me.types[options.type];\n        if (! ctrl) throw me.renderError(\n            \"UNKNOWN_TYPE\"\n            , `Unimplemented SmarkForm component controller: ${options.type}`,\n        );\n        return new ctrl (\n            node\n            , options\n            , me\n        );\n        //}}}\n\n    };//}}}\n    getComponent(target) {//{{{\n        const me = this;\n        return (\n            target[sym_smart]\n            || target.parentElement?.closest(me.selector)[sym_smart]\n            || null\n        );\n    };//}}}\n    getPath() {//{{{\n        const me = this;\n        return (\n            [...me.parents].map(p=>p.name)\n            .reverse()\n            .join(\"/\") // Root parent being \"\" => Starting \"/\".\n            || \"/\" // No join (0 parents => root node)\n        );\n    };//}}}\n    find(path=\"\") { // {{{\n        let base=this;\n        path = String(path); // Allow numbers (arrays simply won't match).\n        if (path[0] == \"/\") while (base.parent) base = base.parent;\n        const parts = path\n            .split(\"/\")\n            .filter(x=>x)\n        ;\n\n        // (Recursive) Multi-match search (path with '*' wildcards):\n        // (Returns array of components)\n        const firstWildcardPos = parts.findIndex(p=>p.match(re_has_wildcards));\n        if (firstWildcardPos >= 0) {\n            const re_pattern = wild2regex(parts[firstWildcardPos]);\n            const pivotPath = parts.slice(0, firstWildcardPos).join(\"/\");\n            const restPath = parts.slice(firstWildcardPos + 1).join(\"/\");\n            const pivot = base.find(pivotPath);\n            const pivotChilds = Object.entries(pivot.children);\n            return pivotChilds\n                .filter(([name,child])=>child && name.match(re_pattern))\n                .map(([,child])=>child.find(restPath))\n                .flat(Infinity)\n            ;\n        };\n\n        // Straight search (wildcardless path)\n        // (Returns single component)\n        return parts.reduce(\n            (current, name)=>{\n                if (current === undefined) return null;   // No match.\n                if (name == \"..\") return current.parent;  // Go up one level.\n                if ( // Special syntax for list siblings (.+n / .-n)\n                    name[0] == \".\"\n                    && current.parent?.options?.type == \"list\"\n                ) {\n                    const delta = parseInt(name.slice(1));\n                    const n = parseInt(current.name) + delta;\n                    if (! isNaN(n)) return current.parent.children[n];\n                };\n                return current.children[name];\n            }\n            , base\n        )\n    ;\n    };//}}}\n    inherittedOption(optName, defaultValue) {//{{{\n        const me = this;\n        for (\n            const p of me.parents\n        ) if (\n            p.options[optName] !== undefined\n        ) return p.options[optName];\n        return defaultValue;\n    };//}}}\n    moveTo(){//{{{\n        const me = this;\n        if (! me.targetNode.id) me.targetNode.id = me.getPath();\n        document.location.hash = me.targetNode.id;\n        // Avoid noisy url hash \"randomish\" effect:\n        window.history.pushState({}, undefined,window.location.pathname);\n            // Like 'document.location.hash = \"\"' but without leaving leading\n            // hash character.\n    };//}}}\n    getTriggers(actionNames = \"\") {//{{{\n        const me = this;\n        const myCurrentActions = [];\n        const actionKeys = new Set([actionNames]\n            .flat()\n            .map(String)\n            .filter(x=>x)\n        );\n        const returnAll = actionKeys.has(\"*\");\n        for (\n            const tgg\n            of [...me.root.targetNode.querySelectorAll(me.selector)]\n                .map(target=>target[sym_smart])\n                .filter(x=>x) // Ignore not yet rendered.\n        ) {\n            const options = tgg.getTriggerArgs()\n            if (! options) continue; // Not a trigger\n            if (! Object.is(options.context, me)) continue;\n            if (\n                returnAll\n                || actionKeys.has(options.action)\n            ) myCurrentActions.push(tgg);\n        };\n        return myCurrentActions;\n    };//}}}\n    updateId() {//{{{\n        const me = this;\n        if (me.genId === false) return; // Abort if disabled.\n        const newId = me.genId(me.getPath());\n        if (me.targetNode.id != newId) {\n            me.targetNode.id = newId;\n            for (\n                const child\n                of Object.values(me.children)\n            ) child.updateId();\n        };\n        return me.targetNode.id\n    };//}}}\n    focus() {//{{{\n        const me = this;\n        for (const fname in me.children) {\n            return me.children[fname].focus();\n        };\n        if (me.targetFieldNode) me.targetFieldNode.focus();\n    };//}}}\n    getTriggerArgs() {}; // Let's easily filter out non trigger compoenents.\n    // Error types:\n    renderError(code, message) {//{{{\n        const me = this;\n        return new errors.renderError(code, message, me.getPath());\n    };//}}}\n};\n\nexport class SmarkField extends SmarkComponent {\n    constructor(...args){\n        super(...args);\n        this._isField = true;\n        if (! Object.is(this, this.root)) {\n            this.name = this.validName(\n                this.options.name\n                , this.targetNode.getAttribute(\"name\")\n            );\n            if (this.options.hasOwnProperty(\"value\")) {\n                if (this.targetNode.getAttribute(\"value\") !== null) { // Conflict\n                    throw me.renderError(\n                        'VALUE_CONFLICT'\n                        , `Initial value specied both as \"value\" option and HTML \"value\" attribute.`\n                    );\n                };\n                this.targetNode.setAttribute(\"value\", this.options.value);\n            };\n        };\n    };\n};\n\nexport function createType(name, controller) {//{{{\n    if (componentTypes[name] !== undefined) throw new Error(\n        `Duplicate component type definition: ${name}`\n    );\n    if (! (controller.prototype instanceof SmarkComponent)) throw new Error(\n        `Bad component type implementation for: ${name}`\n    );\n    componentTypes[name] = controller;\n};//}}}\n\n","// lib/hotkeys.js\n// ==============\n\nexport class hotKeys_handler {\n    constructor(form) {\n        const me = this;\n        me.form = form;\n        me.revealed = null;\n        me.form.targetNode.addEventListener(\n            \"keydown\"\n            , me.onKeydown.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"keyup\"\n            , me.onKeyup.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusout\"\n            , me.onFocusout.bind(me)\n            , true\n        );\n        me.form.targetNode.addEventListener(\n            \"focusin\"\n            , me.onFocusin.bind(me)\n            , true\n        );\n    };\n    onKeydown(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(ev.target); // Activate and reveal.\n        } else if (ev.ctrlKey) {\n            const targettedTrigger = me.revealed.find(\n                t=>t.options.hotkey == ev.key\n            );\n            if (targettedTrigger) {\n                ev.preventDefault();\n                ev.stopPropagation();\n                targettedTrigger.targetNode.click();\n            };\n        };\n    };\n    onKeyup(ev) {\n        const me = this;\n        if (ev.key == \"Control\") {\n            me.reveal(false); // Deactivate\n        };\n    };\n    onFocusout(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(); // Unreveal, keep activated.\n        };\n    };\n    onFocusin(ev) {\n        const me = this;\n        if (me.revealed !== null) {\n            me.reveal(ev.target); // Update revealed triggers\n        };\n    };\n    reveal(target) {\n        const me = this;\n\n        // Conceal previous target triggers' hotkeys if any:\n        if (me.revealed !== null) {\n            for (const t of me.revealed) {\n                t.targetNode.removeAttribute(\"data-hotkey\");\n            };\n            me.revealed.length = 0;\n        };\n\n        if (target === false) {\n            me.revealed = null; // Deactivate hot keys\n        };\n\n        if (target) {\n\n            // Reveal new target triggers' hotkeys:\n            const component = me.form.getComponent(target);\n            const activeContexts = [component, ...component.parents];\n            const activeContextsSet = new Set(activeContexts);\n\n            const candidateTriggers = activeContexts\n                .map((c, lv)=>(\n                    c.getTriggers('*')    // All triggers.\n                    .map(tg=>({\n                        tg,\n                        lv,   // Ancestor level.\n                        args: tg.getTriggerArgs() || {},\n                        hotkey: String(tg.options.hotkey || \"\"),\n                    }))\n                ))\n                .flat()\n                .filter(({args, hotkey})=>(\n                    hotkey.length\n                    && activeContextsSet.has(args.context)\n                ))\n                .sort((ta,tb)=>(\n                    activeContextsSet.has(tb.args.target)\n                    - activeContextsSet.has(ta.args.target)\n                    - tb.lv\n                    + ta.lv\n                ))\n            ;\n\n            const usedKeys = new Set();\n            me.revealed = [];\n\n            for (const candidate of candidateTriggers) {\n                if (usedKeys.has(candidate.hotkey)) continue; // Used by more preferent tg.\n                if (! candidate.tg.targetNode.disabled) {\n                    candidate.tg.targetNode.setAttribute(\"data-hotkey\", candidate.hotkey);\n                };\n                // (UX): Perform the following even if disabled for behavioral\n                // consistency...\n                usedKeys.add(candidate.hotkey); // ...don't activate others in place.\n                me.revealed.push(candidate.tg); // ...keep preventing event propagation.\n            };\n\n        };\n\n    };\n};\n","// types/trigger.type.js\n// =====================\nimport {SmarkComponent} from \"../lib/component.js\";\n\nconst beforeEvent = Symbol(\"beforeEventName\");\nconst afterEvent = Symbol(\"afterEventName\");\n\nexport const action = function action_decorator(targetMtd, {kind, name, addInitializer}) {\n    if (kind == \"method\") addInitializer(function registerAction() {\n        this.actions[name] = targetMtd.bind(this);\n        this.actions[name][beforeEvent] = `BeforeAction_${name}`;\n        this.actions[name][afterEvent] = `AfterAction_${name}`;\n    });\n};\n\n\nexport class trigger extends SmarkComponent {\n    constructor(node, options, ...args){\n        delete options.name; // Triggers are always unnamed.\n        return super(node, options, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const triggerArgs = me.getTriggerArgs();\n            if (\n                typeof triggerArgs.context?.onTriggerRender == \"function\"\n            ) triggerArgs.context.onTriggerRender(triggerArgs);\n        });\n    };\n    disable() {//{{{\n        const me = this;\n        me.targetNode.disabled = true;\n    };//}}}\n    enable() {//{{{\n        const me = this;\n        me.targetNode.disabled = false;\n    };//}}}\n    getTriggerArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        const {\n            // property: local variable\n            action: actionSpec,\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n        if (! actionSpec) return; // Not a trigger component.\n\n        // Allow binding triggers to specific component types:\n        // (Syntax \"type:action\")\n        let [actionName, targetType] = actionSpec.split(\":\").reverse();\n\n        const context = (\n            contextPath ? me.parent.find(contextPath)\n            : parents.find(p=>{\n                if (targetType && p.options.type != targetType) return false;\n                if (typeof p.actions[actionName] != \"function\") return false;\n                return true;\n            })\n        );\n\n        const target = (\n            targetPath ? context.find(targetPath) // Explicit target (context relative)\n            : contextPath ? null // Explicit context path => don't mind component position\n            : (\n                parents\n                    .slice(1) // Skip self\n                    .find(p=>p.parent?.targetNode.isSameNode(context?.targetNode))\n                || null\n            )\n        );\n\n        return {\n            action: actionName,\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n\nexport async function onTriggerClick(ev) {\n    const me = this;\n    const triggerComponent = me.getComponent(ev.target);\n    const options = triggerComponent.getTriggerArgs();\n    if (! options) return; // Not a trigger.\n    const {context, action} = options;\n    const mtd = context?.actions[action]\n    if (\n        typeof mtd != \"function\"\n    ) throw me.renderError(\n        \"UNKNOWN_ACTION\"\n        , `Unknown action ${action}`\n        + (context ? ` for ${context.options.type}` : \"\")\n    );\n    if (await me.emit(mtd[beforeEvent], options)) {\n        const data = await mtd(options);\n        me.emit(mtd[afterEvent], {...options, data});\n    };\n};\n\n\n","\"use strict\";\nexport function getRoots(target, selector){//{{{\n    const parent = target.parentNode;\n    const isTop = (\n        parent === null ? n => n === null\n        : n=>(n===null)||n.isSameNode(target)\n    );\n    return [\n        ...target.querySelectorAll(selector)\n    ].filter(\n        e=>isTop(e.parentNode.closest(selector))\n    );\n};//}}}\n\nexport function makeRoom(element, pixels) {//{{{\n    let parent = element.parentNode;\n    const direction = (\n        pixels >= 0 ? 1\n        : -1\n    );\n    while (parent) {\n        // Check if parent has vertical scroll bar\n        if (parent.scrollHeight > parent.clientHeight * direction) {\n            // Get the maximum amount that can be scrolled in this parent\n            var maxScroll = parent.scrollHeight - parent.clientHeight * direction;\n\n            // If desired amount is less than maximum scroll, perform scroll\n            if (pixels <= maxScroll * direction) {\n                parent.scrollTop += pixels;\n                return;\n            } else {\n              // If desired amount is greater than maximum scroll,\n              // scroll to maximum and subtract it from desired amount\n              parent.scrollTop = maxScroll;\n              pixels -= maxScroll;\n            };\n        };\n        parent = parent.parentNode;\n    };\n};//}}}\n\nexport function randomId() {//{{{\n    return Math.random().toString(36).substring(2);\n};//}}}\n\nexport function parseJSON(str) {//{{{\n    try {\n        return JSON.parse(str);\n    } catch (err) {};\n};//}}}\n","// types/label.type.js\n// ===================\nimport {SmarkComponent} from \"../lib/component.js\";\nimport {randomId} from \"../lib/helpers.js\";\n\n// TODO:\n// =====\n//\n//   🚀 Add support for (smarkform) fields contained in the label.\n//      👉 Now we can just not enhance the label (<label>Bla bla bla<input\n//         data-smark></label>) and it will (in this case natively) work.\n//      👉 ...but this does not allow us to use other SmarkForm fields such as\n//         forms and lists (since they can contain more than one native field\n//         which is not allowed by <label> tag.\n//      💡 But we can use different tag (with {data-smark=\"label\"}) and just\n//         create the native <label> tag around the text.\n//\n//   🚀 Implement \"text templating\" feature.\n//      👉 This should allow to include contextual data in the text of the\n//         label.\n//      ⚡ For example, list item position for list items...\n//\n\nexport class label extends SmarkComponent {\n    constructor(node, {allow_select = false, ...options}, ...args){\n        delete options.name; // Labels are always unnamed.\n        return super(node, {allow_select, ...options}, ...args);\n    };\n    render(){\n        const me = this;\n        me.parent.onRendered(()=>{\n            const labelArgs = me.getLabelArgs();\n            const {targetFieldNode} = labelArgs.target || {};\n            if (targetFieldNode) { // Apply only to native inputs (scalars)\n                if (! targetFieldNode.id) { // Ensure targetted field has an Id\n                    targetFieldNode.id = randomId();\n                };\n                me.targetNode.setAttribute(\"for\", targetFieldNode.id);\n            };\n            if (! me.options.allow_select) {\n                // Make labels non-selectable unless \"allow_select\" option\n                // is set  to true.\n                me.targetNode.style[\"user-select\"] = \"none\";\n            };\n        });\n    };\n    getLabelArgs() {//{{{\n        const me = this;\n        const parents = [...me.parents];\n        let context, target;\n\n        const {\n            // property: local variable\n            context: contextPath,     // Define context component\n            target: targetPath,       // Define targetted child component\n            ...otherOptions\n        } = me.options;\n\n        if (! contextPath && ! targetPath) {\n            // Guess ;-)\n            context = me.parent;\n            const candidates = context.targetNode.querySelectorAll(me.selector);\n            let found = false;\n            for (const childName in candidates) {\n                if (found) {\n                    let targetComponent = me.getComponent(candidates[childName]);\n                    if (targetComponent?._isField) {\n                        // FIXME : Dig deeper in case of non native field tags\n                        // (forms, lists, singletons...)\n                        // It may require to await for rendering or even listen\n                        // to events (lists with minItems = 0);\n                        target = targetComponent;\n                        break;\n                    };\n                } else if (\n                    Object.is(candidates[childName], me.targetNode)\n                ) {\n                    found = true;;\n                };\n            };\n        } else {\n            context = (\n                contextPath ? me.parent.find(contextPath)\n                : me.parent\n            );\n            target = (\n                targetPath ? context.find(targetPath) // Explicit target (context relative)\n                : context\n            );\n        };\n\n        return {\n            origin: me,\n            context,\n            target,\n            ...otherOptions,\n        };\n\n    };//}}}\n};\n","\nimport {action} from \"../types/trigger.type.js\";\n\nexport const foldable = function foldable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class foldableTarget extends target {\n            render(...args) {//{{{\n                const retv = super.render(...args);\n                const me = this;\n                me.root.onRendered(()=>{\n                    me.fold({operation: (\n                        !! me.options.folded ? \"fold\"\n                        : \"unfold\"\n                    )});\n                });\n                return retv;\n            };//}}}\n            @action\n            fold({//{{{\n                operation = \"toggle\", // Values: \"fold\" / \"unfold\" / \"toggle\"\n            } = {}) {\n                const me = this;\n                const wasFolded = me.targetNode.style.display == \"none\";\n                const isFolded = (\n                    operation == \"fold\" ? true\n                    : operation == \"unfold\" ? false\n                    : ! wasFolded\n                );\n                me.targetNode.style.display = (\n                    isFolded ? \"none\"\n                    : me.originalDisplayProp\n                );\n\n                me.getTriggers(\"fold\").forEach(tgg => {\n                    const {foldedClass, unfoldedClass} = tgg.options;\n                    if (foldedClass) tgg.targetNode.classList[\n                        isFolded ? \"add\"\n                        : \"remove\"\n                    ](foldedClass);\n                    if (unfoldedClass) tgg.targetNode.classList[\n                        isFolded ? \"remove\"\n                        : \"add\"\n                    ](unfoldedClass);\n                });\n\n                me.getTriggers([\"addItem\", \"removeItem\"]).map(\n                    isFolded ? tgg => tgg.disable()\n                    : tgg => tgg.enable()\n                );\n            };//}}}\n        };\n    };\n};\n","// src/decorators/export_to_target.deco.js\n// =======================================\n\nexport const export_to_target = function export_to_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function export_mtd({target, ...options}={}) {\n            const me = this;\n            const value = await method.call(me, options);\n            try {\n                await target.import({data: value});\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return value;\n        };\n    };\n};\n","// src/decorators/import_from_target.deco.js\n// =========================================\n\nexport const import_from_target = function import_from_target_decorator(method, {kind}) {\n    if (kind == \"method\") {\n        return async function import_mtd({target, data, ...options}={}) {\n            const me = this;\n            try {\n                data = await target.export();\n            } catch (error) {\n                // target not provided or invalid\n            };\n            return await method.call(me, {data, ...options});\n        };\n    };\n};\n","// types/form.type.js\n// ==================\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {getRoots, parseJSON} from \"../lib/helpers.js\";\n\n@foldable\nexport class form extends SmarkField {\n    async render() {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n        // Enhance childs:\n        for (\n            const node\n            of getRoots(me.targetNode, me.selector)\n        ) {\n            const newItem = await me.enhance(node);\n            if (!! newItem?._isField) {\n                if (me.children[newItem.name] !== undefined) throw me.renderError(\n                    'REPEATED_FIELD_NAME'\n                    , `Field name '${newItem.name}' used more than once in this form level.`\n                );\n                me.children[newItem.name] = newItem;\n                newItem.updateId();\n            };\n        };\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        return Object.fromEntries(\n            await Promise.all(Object.entries(me.children).map(\n                async ([key, child])=>[key, await child.export()]\n            ))\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = {}, focus = true} = {}) {//{{{\n        const me = this;\n        const dataConstructor = Object(data).constructor;\n        if (\n            dataConstructor !== {}.constructor // Not a plain object\n            && ! (data = parseJSON(data))      // Neither a (valid) JSON string\n        ) throw me.renderError(\n            'FORM_NOT_PLAIN_OBJECT'\n            , `Expected plain object or vailid JSON for form import, ${dataConstructor.name} given.`\n        );\n        const retv = Object.fromEntries(\n            await Promise.all(\n                Object.entries(me.children).map(\n                    async ([key, target]) => {\n                        // Could have used target.then(...) but, event\n                        // components' import() method SHOULD be async, it\n                        // would have failed in case it's not.\n                        // Forcing it to be async is not possible because\n                        // transpilers would break this check.\n                        // ...and, IMHO, this approach is better than a dirty\n                        // Promise.resolve(...)\n                        const value = await target.import({data: data[key], focus});\n                        return [key, value];\n                    }\n                )\n            )\n        );\n        if (focus) me.focus();\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of Object.values(me.children)\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: {}, focus});\n    };//}}}\n};\n","// types/list.decorators/smartdisabling.deco.js\n// ============================================\n\nasync function updateTriggers(context) {\n    await context.rendered;\n    for (const tg of context.getTriggers([\"removeItem\", \"addItem\"])) {\n        tg.targetNode.disabled = (\n            tg.options.action == \"removeItem\" ? (\n                context.children.length <= context.min_items\n                && tg.options.failback != \"clear\" // Unless clearing function\n            )\n            : context.children.length >= context.max_items\n        );\n    };\n};\n\nexport const smartdisabling = function list_smartdisabling_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class smartdisablingClass extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n                setTimeout(()=>updateTriggers(me), 1);\n                    // FIXME (Why do we need to delay it?)\n                    // Even more: Why it is even needed with min_items >= 1??\n\n                return retv;\n            };//}}}\n        };\n    } else if (kind == \"method\") {\n        return async function smartdisablingMethod(...args) {\n            const me = this;\n            const retv = await target.call(me, ...args);\n            updateTriggers(me);\n            return retv;\n        };\n    };\n};\n","\nconst sym_mux = Symbol(\"smart_mutex\");\n\nclass Mutex {\n    constructor() {\n        this.mtx = Promise.resolve();\n    };\n    lock() {\n        // Sync operation:\n        let nextResolve;\n        const nextMtx = new Promise(resolve => {\n            nextResolve = () => resolve();\n        });\n        const currMtx = this.mtx;\n        this.mtx = nextMtx;\n        // Async behaviour:\n        return currMtx.then(function unlock() {\n            return nextResolve\n        });\n    };\n}\n\nexport const mutex = function method_mutex_decorator(muxName) {\n    return function mutex_decorator(target, {kind}) {\n        if (kind == \"method\") {\n            return async function muxed_target(...args) {\n                const me = this;\n                if (! me[sym_mux]) me[sym_mux] = {};\n                if (! me[sym_mux][muxName]) me[sym_mux][muxName] = new Mutex();\n                const unlock = await me[sym_mux][muxName].lock(); // Await previous muxed call (if any)\n                let err, retv;\n                try {\n                    retv = await target.call(me, ...args);\n                } catch (error) {\n                    err = error;\n                };\n                unlock();\n                if (err) throw err;\n                return retv;\n            };\n\n        };\n    };\n};\n","// types/list.decorators/sortable.deco.js\n// ======================================\n\nimport {mutex} from \"../../decorators/mutex.deco.js\";\n\nexport const sortable = function list_sortable_decorator(target, {kind}) {\n    if (kind == \"class\") {\n        return class sortableTarget extends target {\n            async render(...args) {//{{{\n                const retv = await super.render(...args);\n                const me = this;\n\n                me.sortable = !! me.options.sortable;\n                me.templates.item.setAttribute(\"draggable\", me.sortable);\n                me.children.forEach(c=>c.targetNode.setAttribute(\"dragable\", me.sortable));\n                if (me.sortable) {\n                    let dragSource = null;\n                    let dragDest = null;\n                    me.targetNode.addEventListener(\"dragstart\", e => {\n                        if (dragSource === null) {\n                            dragSource = e.target\n                            e.stopPropagation();\n                        } else {\n                            // Single dragging at a time.\n                            e.preventDefault();\n                        };\n                    });\n                    me.targetNode.addEventListener(\"dragover\", e => e.preventDefault());\n                    me.targetNode.addEventListener(\"drop\", e => {\n                        if (! dragSource) return; // Already dropped\n                        let target = e.target;\n                        while (\n                            target.parentElement\n                            && target.parentElement != dragSource.parentElement\n                        ) target = target.parentElement;\n                        dragDest = target;\n                    });\n                    me.targetNode.addEventListener(\"dragend\", async () => {\n                        if (dragDest)  await me.move({\n                            from: me.getComponent(dragSource),\n                            to: me.getComponent(dragDest),\n                        });\n                        dragSource = null;\n                        dragDest = null;\n                    });\n                };\n\n                return retv;\n            };//}}}\n            @mutex(\"list_mutating\")\n            async move(options = {}) {//{{{\n                const me = this;\n                let {\n                    from,\n                    to,\n                } = options;\n\n                // // FIXME: Avoid nested sortables to interact.\n                // console.log({from, to}); // <--- See this!!!\n\n                //\n                // TODO: Convert to action!!!\n                //\n                if (\n                    to === null // Dropped outside\n                    || from === null // (Shouldn't happen)\n                ) return;\n                const fromi = Number(from?.name);\n                const toi = Number(to?.name);\n                if (fromi == toi) {\n                    return;\n                } else if (fromi < toi) {\n                    const newChunk = [\n                        ...me.children.slice(fromi + 1, toi + 1),\n                        me.children[fromi],\n                    ];\n                    me.children.splice(fromi, toi - fromi + 1, ...newChunk);\n                } else if (fromi > toi) {\n                    const newChunk = [\n                        me.children[fromi],\n                        ...me.children.slice(toi, fromi),\n                    ];\n                    me.children.splice(toi, fromi - toi + 1, ...newChunk);\n                };\n                const inc = fromi < toi ? 1 : -1;\n                const moveMethod = inc > 0 ? \"after\" : \"before\";\n                to.targetNode[moveMethod](from.targetNode);\n                me.renum();\n            };//}}}\n        };\n    };\n};\n","// types/list.type.js\n// ==================\n\n// TODO:\n// =====\n//\n// 👉 Keep first item in place:\n//    -------------------------\n//     \n//    For lists allowing 0 items, make first element disabled and not visible\n//    instead of completely removing from DOM.\n//\n//    This would avoid lots of visual layout issues.\n//\n\n\nimport {SmarkField} from \"../lib/component.js\";\nimport {smartdisabling} from \"./list.decorators/smartdisabling.deco.js\";\nimport {action} from \"./trigger.type.js\";\nimport {foldable} from \"../decorators/foldable.deco.js\";\nimport {sortable} from \"./list.decorators/sortable.deco.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {mutex} from \"../decorators/mutex.deco.js\";\nimport {makeRoom, getRoots, parseJSON} from \"../lib/helpers.js\";\n\n\n// Private helpers:\n// ----------------\n\nfunction makeNonNavigable(target) {//{{{\n    if (\n        // Tabindex not explicitly defined:\n        target.getAttribute(\"tabindex\") === null\n    ) {\n        target.setAttribute(\"tabindex\", \"-1\");\n    };\n};//}}}\n\nfunction loadTemplates(me) {//{{{\n    const templates = {};\n    for (const child of [...me.targetNode.children]) {\n        const {role = \"item\"} = parseJSON(child.getAttribute(\"data-smark\")) || {};\n        switch (role) {\n            case \"empty_list\":\n            case \"header\":\n            case \"separator\":\n            case \"last_separator\":\n            case \"footer\":\n            case \"placeholder\": // (Only with max_items defined)\n                child.setAttribute(\"data-role\", role);\n            case \"item\": // (Default)\n                if (templates[role] !== undefined) throw me.renderError(\n                    'LIST_DUPLICATE_TEMPLATE'\n                    , `Repated list template role ${role}`\n                );\n                templates[role] = child;\n                templates[role].remove();\n            break;\n        };\n    };\n    if (me.targetNode.children.length) {\n        const {role = \"(unspecified)\"} = parseJSON(\n            me.targetNode.children[0].getAttribute(\"data-smark\")\n        ) || {};\n        throw me.renderError(\n            'LIST_UNKNOWN_TEMPLATE_ROLE'\n            , `Unknown list template role ${role}`\n        );\n    };\n    if (! templates.last_separator) {\n        templates.last_separator = templates.separator; // (If any)\n    };\n    if (\n        templates.item.querySelector(\"[id]\") !== null // Contains IDs\n    ) throw me.renderError(\n        'LIST_CONTAINS_ID'\n        , `List components are not allowed to contain elements with 'id' attribute`\n    );\n    return templates;\n};//}}}\n\n\n\n\n// List component type:\n// --------------------\n\n@foldable\n@sortable\n@smartdisabling\nexport class list extends SmarkField {\n    async #appendChild(child) {//{{{\n        const me = this;\n        if (me.templates.header) {\n            me.templates.header.after(child);\n        } else {\n            me.targetNode.appendChild(child);\n        };\n    };//}}}\n    async render () {//{{{\n        const me = this;\n        me.originalDisplayProp = me.targetNode.style.display;\n\n        me.min_items = Math.max(0,\n            typeof me.options.min_items == \"number\" ? me.options.min_items\n            : 1\n        );\n        me.max_items = Math.max(me.min_items,\n            typeof me.options.max_items == \"number\" ? me.options.max_items\n            : Infinity\n        );\n        me.children = [];\n        me.templates = loadTemplates(me);\n        me.placeholders = [];\n        const tplOptions = me.getNodeOptions(\n            me.templates.item\n            , {\n                type: me.options.of, // Allow to specify items type from list declaration.\n            }\n        );\n        if (\n            me.options.of\n            && tplOptions.type != me.options.of\n        ) throw me.renderError(\n            'LIST_ITEM_TYPE_MISSMATCH'\n            , `List item type missmatch`\n        );\n\n        for (const tpl of [\n            me.templates.header,\n            me.templates.footer,\n        ]) if (!! tpl) {\n            me.targetNode.appendChild(tpl);\n            // Enhance childs:\n            for (\n                const node\n                of getRoots(tpl, me.selector)\n            ) {\n                const newItem = await me.enhance(node);\n                if (!! newItem?._isField) {\n                    throw me.renderError(\n                        'FIELD_IN_WRONG_LIST_TEMPLATE'\n                        , `Fields are not allowed in list's template roles other than item.`\n                    );\n                };\n            };\n        };\n\n        // onRendered tweaks:\n        me.root.onRendered(async ()=>{\n            for(let i=0; i<me.min_items; i++) await me.addItem();\n\n            // Initialize \"count\" actions and reinject empty_list template:\n            if (me.min_items == 0) await me.renum();\n\n            // Let screen readers know lists may change.\n            me.targetNode.setAttribute(\"aria-live\", \"polite\");\n            me.targetNode.setAttribute(\"aria-atomic\", \"true\");\n        });\n        return;\n    };//}}}\n    onTriggerRender({action, origin, context}) {//{{{\n        switch (action) {\n            case \"addItem\":\n            case \"removeItem\":\n                if (\n                    // Placed inside\n                    (1 + [...origin.parents].findIndex(p=>Object.is(p, context)))\n                    && origin.options.hotkey\n                ) {\n                    // Skip them in keyboard navigation.\n                    makeNonNavigable(origin.targetNode);\n                };\n                break;\n        };\n    };//}}}\n    @mutex(\"list_mutating\")\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const list = [];\n        const emptyChilds = [];\n        const stripEmpties = ! me.inherittedOption(\"exportEmpties\", false);\n        for (const child of me.children) {\n            if (stripEmpties && await child.isEmpty()) {\n                if (list.length < me.min_items) emptyChilds.push(child);\n                continue;\n            };\n            list.push(await child.export())\n        };\n        for (let i=0; list.length < me.min_items; i++) {\n            list.push(await emptyChilds[i].export());\n        };\n        return list;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = [], focus} = {}) {//{{{\n        const me = this;\n        // Auto-update in case of scalar to array template upgrade:\n        if (! (data instanceof Array)) data = [data];\n        // Load data:\n        for (\n            let i = 0;\n            i < Math.min(data.length, me.max_items); // Limit to allowed items\n            i++\n        ) {\n            if (me.children.length <= i) await me.addItem(); // Make room on demand\n            await me.children[i].import({data: data[i], focus});\n        };\n        // Remove extra items if possible (over min_items):\n        for (\n            let i = Math.max(data.length, me.min_items);\n            i < me.children.length;\n        ) await me.removeItem();\n        // Report if data doesn't fit:\n        if (data.length > me.max_items) {\n            me.emit(\"error\", {\n                code: 'LIST_IMPORT_OVERFLOW',\n                message: `Trying to import array greater than list's max_items. Data beyond max_items ignored.`,\n                context: me,\n                data,\n                options: me.options,\n            });\n        };\n        // Clear items over imported data if min_items is greater:\n        for (\n            let i = data.length;\n            i < me.children.length; // (Due to min_items)\n            i++\n        ) me.children[i].clear();\n        if (focus) me.focus();\n        return; // await me.export();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async addItem(options = {}) {//{{{\n        const me = this;\n        // Parameters checking and resolution:{{{\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            source = null,\n            target,\n            position = \"after\",\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            failback,\n        } = options;\n        if (position != \"after\" && position != \"before\") throw me.renderError(\n            'LIST_WRONG_ADDITEM_POSITION'\n            , `Invalid value for addItem() position property: ${position}`\n        );\n        if (me.children.length >= me.max_items) {\n            switch (failback) {\n                case \"none\":\n                    break;\n                case \"throw\":\n                default:\n                    me.emit(\"error\", {\n                        code: 'LIST_MAX_ITEMS_REACHED',\n                        message: `Cannot add items over max_items boundary`,\n                        options,\n                    });\n            };\n            return;\n        };\n        if (me.children.length && ! target) target = ( // Auto target:\n            position == \"before\" ?  me.children[0] // Insert at the beginning\n            : me.children[me.children.length - 1]  // Append at the end\n        );\n        //}}}\n        // DOM element creation:{{{\n        const newItemTarget = me.templates.item.cloneNode(true);\n        //}}}\n        // addItem event emitting:{{{\n        const onRenderedCbks = [];\n            // Allow for handy callback instead of two separate event handlers\n        await me.emit(\"addItem\", {\n                action,\n                origin,\n                context,\n                target,  // <--- Effective target.\n                position,\n                newItemTarget,\n                options, // <- Original options (including target)\n                onRendered: cbk => onRenderedCbks.push(cbk),\n        });\n        //}}}\n        // Child component creation and insertion:{{{\n        let newItem;\n        if (! me.children.length) {\n            await me.#appendChild(newItemTarget);\n            newItem = await me.enhance(newItemTarget, {type: \"form\", name: 0});\n            await newItem.rendered;\n            me.children.push(newItem);\n            newItem.name = 0;\n        } else {\n            me.children = (await Promise.all(\n                me.children.map(async (child, i)=>{\n                    if (! child.targetNode.isSameNode(target.targetNode)) return child;\n                    if (position == \"after\") {\n                        child.targetNode.after(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [child, newItem]; // Right order, flatted later...\n                    } else {\n                        child.targetNode.before(newItemTarget);\n                        newItem = await me.enhance(newItemTarget, {type: \"form\"});\n                        await newItem.rendered;\n                        return [newItem, child]; // Right order, flatted later...\n                    };\n                })\n            ))\n                .flat()\n            ;\n        };\n        await me.renum();\n        //}}}\n        // Copy data from source component if specified:{{{\n        if (source) {\n            const sourceComponent = newItem.find(source);\n            if (!! sourceComponent) {\n                const data = await sourceComponent.export();\n                newItem.import({data});\n            };\n        };\n        //}}}\n        // Autoscroll handling:{{{\n        if (autoscroll == \"elegant\" && !! newItem) {\n            makeRoom(newItem.targetNode, - newItem.offsetHeight);\n        } else {\n            const moveTarget = (\n                ! newItem ? null\n                : autoscroll == \"self\" ? newItem\n                : autoscroll == \"parent\" ? newItem.parent\n                : null\n            );\n            if (moveTarget) moveTarget.moveTo();\n        };\n        //}}}\n        // Execute \"onRendered\" callbacks:{{{\n        onRenderedCbks.forEach(cbk=>cbk(newItem));\n        //}}}\n        if (me.renderedSync) newItem.focus();\n    };//}}}\n    @action\n    @mutex(\"list_mutating\")\n    @smartdisabling\n    async removeItem(options = {}) {//{{{\n        const me = this;\n        let {\n            action,\n            origin = null, // (Internal call)\n            context = me,  // (Internal call)\n            target,\n            autoscroll,   // \"elegant\" / \"self\" / \"parent\" / (falsy)\n            keep_non_empty,\n            failback,\n        } = options;\n        if (! target) {\n            if (keep_non_empty) for (\n                const t of [...me.children]\n                .reverse() // Pick last first\n            ) if (await t.isEmpty()) {\n                target = t;\n                break;\n            };\n            if (! target) {\n                target = me.children[me.children.length - 1];\n                keep_non_empty = false;\n                // Allow non empty removal as last chance if no target\n                // specified.\n            };\n        };\n        const targets = (\n            target instanceof Array ? target\n            : [target]\n        );\n        for (const currentTarget of [...targets].reverse()) {\n            if (me.children.length <= me.min_items) {\n                switch (failback) {\n                    case \"none\":\n                        break;\n                    case \"clear\":\n                        await currentTarget.clear();\n                        return;\n                    case \"throw\":\n                    default:\n                        me.emit(\"error\", {\n                            code: 'LIST_MIN_ITEMS_REACHED',\n                            message: `Cannot remove items under min_items boundary`,\n                            options,\n                        });\n                        return;\n                };\n            };\n            if (keep_non_empty && ! await currentTarget.isEmpty()) continue;\n            let oldItem = null;\n            let newFocusPosition = null;\n            const newChildren = me.children\n                .filter((child, i, all)=>{\n                    if (child.targetNode.isSameNode(currentTarget.targetNode)) {\n                        if (autoscroll == \"elegant\") {\n                            makeRoom(child.targetNode, child.targetNode.offsetHeight);\n                        } else {\n                            const moveTarget = (\n                                autoscroll == \"self\" ? child\n                                : autoscroll == \"parent\" ? child.parent\n                                : null\n                            );\n                            if (moveTarget) moveTarget.moveTo();\n                        };\n\n                        oldItem = child;\n\n                        newFocusPosition = (\n                            (all.length -i > 1) ? newFocusPosition = i // More above\n                            : i == 0 ? null           // No items left\n                            : i - 1                   // Removing last item\n                        );\n\n                        return false;\n                    };\n                    return true;\n                })\n            ;\n            // removeItem event emitting:{{{\n            const onRemovedCbks = [];\n                // Allow for handy callback instead of two separate event handlers\n            await me.emit(\"removeItem\", {\n                action,\n                origin,\n                context,\n                target: currentTarget,  // <--- Effective target.\n                oldItem,                 // Child going to be removed.\n                oldItemTarget: oldItem.targetNode, // Its target (analogous to addItem event).\n                options,\n                onRemoved: cbk => onRemovedCbks.push(cbk),\n            });\n            //}}}\n\n            oldItem.targetNode.remove();\n            me.children = newChildren;\n            await me.renum();\n\n            // Execute \"onRemoved\" callbacks:{{{\n            onRemovedCbks.forEach(cbk=>cbk());\n            //}}}\n\n            if (newFocusPosition !== null) {\n                me.children[newFocusPosition].focus();\n            };\n\n        };\n\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        for (\n            const child of me.children\n        ) if (\n            ! await child.isEmpty()\n        ) return false;\n        return true;\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        return await me.import({data: [], focus});\n    };//}}}\n    @action\n    count({delta = 0} = {}) {//{{{\n        // Return number of children.\n        // But also it's sole existence allow reinjecting contents to it.\n        const me = this;\n        return me.children.length + Number(delta);\n    };//}}}\n    @action\n    position({target, offset = 1} = {}) {//{{{\n        return Number(target?.name) + Number(offset);\n    };//}}}\n    async renum(){//{{{\n        const me = this;\n\n        // Update child index:\n        for (const i in me.children) {\n            me.children[i].name = i;\n            me.children[i].updateId();\n        };\n\n        // Handle separators:\n        if (\n            !! me.templates.separator\n            || !! me.templates.last_separator\n        ) for (const i in me.children) {\n\n            const isLastNode = i >= me.children.length - 1;\n            const sepRole = (\n                i <= 0 ? null\n                : isLastNode ? \"last_separator\"\n                : \"separator\"\n            );\n\n            const currentNode = me.children[i].targetNode;\n            const prevNode = currentNode.previousElementSibling;\n            const prevNode_role = prevNode && prevNode.getAttribute(\"data-role\");\n            if (prevNode_role !== sepRole) {\n                if (!! prevNode_role) prevNode.remove();\n                const sepTemplate = me.templates[sepRole];\n                if (!! sepRole && !! sepTemplate) currentNode.parentElement.insertBefore(sepTemplate.cloneNode(true), currentNode);\n            };\n            if (isLastNode) { // LastItem\n                const nextNode = currentNode.nextElementSibling;\n                if (!! nextNode) nextNode.remove();\n            };\n\n        };\n\n        // Handle empty_list template:\n        if (me.templates.empty_list) {\n            if (me.children.length) {\n                me.templates.empty_list.remove(); // (from DOM)\n            } else {\n                await me.#appendChild(me.templates.empty_list);\n            };\n        };\n\n        // Handle placeholder template:\n        if (\n            me.templates.placeholder\n            && !! me.max_items // (Only if we have a finite padding limit)\n        ) {\n            let placeHoldersCount = (me.max_items || 0) - me.children.length;\n            if (\n                placeHoldersCount > 0\n                && me.children.length === 0\n                && !! me.templates.empty_list\n            ) placeHoldersCount--; // Discount the hole occupied by empty_list\n            if (me.placeholders.length < placeHoldersCount) {\n                for (let i = me.placeholders.length; i < placeHoldersCount; i++) {\n                    const placeholder = me.templates.placeholder.cloneNode(true);\n                    if (me.templates.footer) {\n                        me.templates.footer.before(placeholder);\n                    } else {\n                        me.targetNode.appendChild(placeholder);\n                    };\n                    me.placeholders.push(placeholder);\n                };\n            } else { // me.placeholders.length >= placeHoldersCount\n                for (let i = me.placeholders.length; i > placeHoldersCount; i--) {\n                    me.placeholders.pop().remove();\n                };\n            };\n        };\n\n        // Update counter triggers:\n        me.getTriggers(\"position\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.position(args);\n        });\n        me.getTriggers(\"count\").forEach(tgg=>{\n            const me = this;\n            const args = tgg.getTriggerArgs();\n            tgg.targetNode.innerText = me.count(args);\n        });\n    };//}}}\n};\n","// types/input.type.js\n// ===================\nimport {form} from \"./form.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nexport class input extends form {\n    async render() {//{{{\n        const me = this;\n        me.isSingleton = ! (\n            me.targetNode.tagName === \"INPUT\"\n            || me.targetNode.tagName === \"SELECT\"\n            || me.targetNode.tagName === \"TEXTAREA\"\n        );\n        me.isCheckbox = (\n            ! me.isSingleton\n            && String(me.targetNode.type).toLowerCase() == \"checkbox\"\n        );\n        if (me.isSingleton) {\n            await super.render();\n            const sons = Object.values(me.children);\n            if (sons.length != 1) throw me.renderError(\n                'NOT_A_SINGLETON'\n                , `Singleton forms are only allowed to contain exactly one`\n                + ` data field but ${sons.length} found.`\n            );\n            const son = sons[0];\n            if (me.options.type !== son.options.type) throw me.renderError(\n                'SINGLETON_TYPE_MISMATCH'\n                , `Singleton type (${me.options.type})`\n                + ` does not match child field type (${son.options.type}).`\n            );\n            me.targetFieldNode = son.targetNode;\n        } else {\n            me.targetFieldNode = me.targetNode;\n        };\n        return;\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        let retv;\n        if (me.isSingleton) {\n            retv = Object.values(await super.export())[0];\n        } else if (me.isCheckbox) {\n            retv = !! nodeFld.checked;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n            && nodeFld.options[nodeFld.selectedIndex]?.getAttribute(\"value\") === null\n        ) {\n            // Keep fallback working when encoding is json and value attribute is not set.\n            // (and don't expetct <opton> inner text to be JSON)\n            retv = JSON.stringify(nodeFld.options[nodeFld.selectedIndex].text);\n        } else {\n            retv = nodeFld.value;\n        };\n        return (\n            me.options.encoding === \"json\" ? parseJSON(retv) || null\n            : retv\n        );\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = \"\", focus = true} = {}) {//{{{\n        const me = this;\n        const nodeFld = me.targetFieldNode;\n        if (\n            typeof data === \"object\"\n            && me.options.type === \"input\"    // Not in a derivated field types\n            || me.options.encoding === \"json\" // JSON encoding specified\n        ) {\n            data ||= null;\n            const isTextarea = nodeFld.tagName.toUpperCase() === \"TEXTAREA\";\n            data = (\n                isTextarea ? JSON.stringify(data, null, 4) // Pretty print\n                : JSON.stringify(data) // Compact print\n            ) || \"\";\n        };\n        if (me.isSingleton) {\n            return await super.import({data: Object.fromEntries(\n                [[Object.keys(me.children)[0], data]]\n            ), focus});\n        } else if (me.isCheckbox) {\n            me.targetNode.checked = !! data;\n        } else if (\n            me.options.encoding === \"json\"\n            && nodeFld.tagName.toUpperCase() === \"SELECT\"\n        ) {\n            me.targetNode.value = (data || \"null\"); // Faster, but won't work if value attribute is not set.\n            if (nodeFld.selectedIndex === -1) {\n                // Fallback when value attribute is not set.\n                const parsed = parseJSON(data) || \"\";\n                const idx = Array.from(nodeFld.options).findIndex(\n                    opt => opt.text === parsed\n                );\n                if (idx !== -1) nodeFld.selectedIndex = idx;\n            };\n        } else {\n            me.targetNode.value = data;\n        };\n        if (focus) me.focus();\n        return me.targetNode.value;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = (\n            me.isCheckbox ? \"\" // Do not consider checkboxes.\n            : await me.export()\n        );\n        return ! value.trim().length;\n            // Native input's value type is always a string.\n    };//}}}\n    @action\n    async clear({focus} = {}) {//{{{\n        const me = this;\n        await me.import({\n            data: me.options.encoding === \"json\" ? null : \"\",\n            focus,\n        });\n    };//}}}\n};\n","// types/number.type.js\n// ====================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nexport class number extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"number\").toLowerCase() != \"number\"\n        ) throw me.renderError(\n            'NOT_A_NUMBER_FIELD'\n            , `Number inputs require an INPUT tag of type \"number\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"number\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        return (\n            data.length && ! isNaN(data) ? Number(data)\n            : null\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        const typename = typeof data;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const retv =  await super.import({data:(\n            typename == \"number\" ? data\n            : typename == \"string\"\n                && data.length\n                && ! isNaN(data)\n                ? Number(data)\n            : null\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/date.type.js\n// ==================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nconst re_timePart = /T.*/;\nfunction parseDateStr(str) {//{{{\n    // Accept \"YYYYMMDD\":\n    if (str.length == 8) return new Date([\n        str.substring(0, 4),\n        str.substring(4, 6),\n        str.substring(6, 8),\n    ].join(\"-\"));\n\n    // Accept \"YYYY-MM-DD\" (like date inputs)\n    // > new Date(\"2023-11-30\")\n    // 2023-11-30T00:00:00.000Z\n    // ...but don't accept if not zero-padded:\n    // > new Date(\"2023-11-3\")\n    // 2023-11-02T23:00:00.000Z\n    if (\n        str.length == 10\n        && str[4] == \"-\"\n        && str[7] == \"-\"\n    ) return new Date(str);\n\n    // Also don't accept other locale dependant formats:\n    // > new Date(\"11/30/2023\")\n    // 2023-11-29T23:00:00.000Z\n\n    return NaN;\n};//}}}\nfunction ISODate(value) {//{{{\n    return value.toISOString().replace(re_timePart, \"\");\n};//}}}\nexport class date extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"date\").toLowerCase() != \"date\"\n        ) throw me.renderError(\n            'NOT_A_DATE_FIELD'\n            , `Date inputs require an INPUT tag of type \"date\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"date\"; // Autofill\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        const data = await super.export(...args);\n        if (me.isSingleton) return data; // Overload only inner field\n        if (! data.length) return null;\n        const value = parseDateStr(data);\n        return (\n            isNaN(value) ? null\n            : ISODate(value)\n        );\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (me.isSingleton) return await super.import({data, focus}); // Overload only inner field\n        const value = (\n            data instanceof Date ? data // Accept Date instance\n            : typeof data == \"number\" ? new Date(data) // Accept epoch\n            : ! data || (typeof data != \"string\") ? NaN // Reject nullish\n            : parseDateStr(data) // Handle strings\n        );\n        const retv = await super.import({data:(\n            isNaN(value) ? null\n            : ISODate(value)\n        ), focus});\n        return retv;\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n","// types/radio.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {export_to_target} from \"../decorators/export_to_target.deco.js\";\nimport {import_from_target} from \"../decorators/import_from_target.deco.js\";\nimport {randomId} from \"../lib/helpers.js\";\nexport class radio extends input {\n    constructor(...args) {\n        super(...args);\n        const me = this;\n        let master = me.parent.children[me.name];\n        let retv = me;\n        if (master) {\n            me.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons.push(me.targetNode);\n            retv = {}; // Not the master field.\n        } else {\n            master = me;\n            // Provide unique name for DOM navigation to work properly:\n            master.sharedNodeName = randomId();\n            master.targetNode.setAttribute(\"name\", master.sharedNodeName);\n            master.radioButtons = [\n                master.targetNode\n            ];\n        };\n        let changeEventHandler = onRadioInteraction.bind(master);\n        me.targetNode.addEventListener(\"click\", changeEventHandler);\n        me.targetNode.addEventListener(\"keydown\", changeEventHandler);\n        return retv;\n    };\n    async render() {//{{{\n        await super.render();\n        const me = this;\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"radio\").toLowerCase() != \"radio\"\n        ) throw me.renderError(\n            'NOT_A_RADIO_FIELD'\n            , `Radio inputs require an INPUT tag of type \"radio\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"radio\"; // Autofill\n    };//}}}\n    @action\n    @export_to_target\n    async export() {//{{{\n        return this.radioButtons.find(r=>r.checked)?.value || null;\n    };//}}}\n    @action\n    @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const selected = this.radioButtons.find(r=>r.value === data);\n        if (selected) {\n            selected.checked = true;\n        } else {\n            this.radioButtons.forEach(r=>r.checked = false);\n        };\n        if (focus) this.focus();\n    };//}}}\n    async isEmpty() {//{{{\n        return ! (1 + this.radioButtons.findIndex(r=>r.checked));\n    };//}}}\n};\n\nfunction onRadioInteraction(event) {//{{{\n    if (\n        event.type === \"click\"\n        || event.type === \"keydown\" && event.code === \"Delete\"\n        // NOTE: Some browsers also send fake click events for toggling radio\n        //       buttons.\n        //       This approach avoids to interfere with that behavior while\n        //       ensuring a consistent keyboard resetting method (through the\n        //       Delete key).\n    ) {\n        const me = this;\n        let checked = true; // All raddio buttons become checked on click.\n        const lastSelection = Object.is(me.lastClicked?.target, event.target);\n        if (lastSelection) checked = (\n            ! me.lastClicked.checked    // Click  => Toggle\n            && event.type !== \"keydown\" // Delete => Reset\n        );\n        me.lastClicked = {\n            target: event.target,\n            checked,\n        };\n        event.target.checked = checked;\n    };\n};//}}}\n","// types/color.type.js\n// ===================\nimport {input} from \"./input.type.js\";\nimport {action} from \"./trigger.type.js\";\nimport {parseJSON} from \"../lib/helpers.js\";\nconst re_color = /^#([a-f0-9]{3}){1,2}$/i;\nconst disabled_style = `\n    opacity: .5;\n    background: repeating-linear-gradient(\n            45deg,\n            black,\n            black 10px,\n            white 10px,\n            white 20px\n        ),\n        black;\n    background-blend-mode: difference;\n`;\nexport class color extends input {\n    async render() {//{{{\n        await super.render();\n        const me = this;\n\n        if (me.isSingleton) return; // (Only for real field)\n\n        // Check targetField's type attribute:\n        const targetTag = me.targetFieldNode.tagName;\n        const targetType = me.targetFieldNode.getAttribute(\"type\");\n        if (\n            targetTag != \"INPUT\"\n            || (targetType || \"color\").toLowerCase() != \"color\"\n        ) throw me.renderError(\n            'NOT_A_COLOR_FIELD'\n            , `Color inputs require an INPUT tag of type \"color\".`\n        );\n        if (! targetType) me.targetFieldNode.type = \"color\"; // Autofill\n\n        // Iniitialize me.isDefined flag:\n        const valueAttr = me.targetFieldNode.getAttribute(\"value\");\n        me.isDefined = (\n            valueAttr !== null         // value property not defined\n            && valueAttr.trim() !== \"\" // value property defined (string)\n        );\n\n        // Remember original \"style\" attribute and update if appropriate:\n        me.defaultStyleAttr = me.targetFieldNode.getAttribute(\"style\") + \";\";\n        if (! me.isDefined) me.targetFieldNode.setAttribute(\n            \"style\"\n            , me.defaultStyleAttr + disabled_style\n        );\n\n        // Handle me.isDefined set:\n        const resetDefined = ev=>{\n            if (\n                ev.code    !== \"Enter\"\n                && ev.Code !== \"Space\"\n                && ev.code !== undefined // ev.type must be \"click\" or \"change\"\n                    // && ev.type !== \"click\" // Click event\n                    // && ev.type !== \"change\" // Change event\n            ) return;\n            me.isDefined = true;\n            me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n        };\n        me.targetFieldNode.addEventListener(\"keydown\", resetDefined);\n        me.targetFieldNode.addEventListener(\"click\", resetDefined);\n        me.targetFieldNode.addEventListener(\"change\", resetDefined);\n\n    };//}}}\n    @action\n    // (Done in parent class) @export_to_target\n    async export(...args) {//{{{\n        const me = this;\n        let data = await super.export(...args);\n        if (! me.isSingleton) data = (\n            me.isDefined && data.match(re_color) ? data.toLowerCase()\n            : null\n        );\n        return data;\n    };//}}}\n    @action\n    // (Done in parent class) @import_from_target\n    async import({data = null, focus = true} = {}) {//{{{\n        const me = this;\n        if (\n            ! me.isSingleton // Only for real field\n        ) {\n            if (\n                data === null              // Explicit null value\n                || ! data.match(re_color)  // Invalid color value\n            ) {\n                me.isDefined = false;\n                me.targetFieldNode.setAttribute(\n                    \"style\"\n                    , me.defaultStyleAttr + disabled_style\n                );\n            } else {\n                me.isDefined = true;\n                me.targetFieldNode.setAttribute(\"style\", me.defaultStyleAttr);\n            };\n        };\n        const value = await super.import({data, focus});\n        return (\n            me.isDefined ? value\n            : null\n        );\n    };//}}}\n    async isEmpty() {//{{{\n        const me = this;\n        const value = await me.export();\n        return value === null;\n    };//}}}\n};\n\n","// SmarkForm.js\n// ============\n\nimport {createType} from \"./lib/component.js\";\nimport {hotKeys_handler} from \"./lib/hotkeys.js\";\n\n// Import core component types and event handlers:\nimport {trigger, onTriggerClick} from \"./types/trigger.type.js\";\nimport {label} from \"./types/label.type.js\";\nimport {form} from \"./types/form.type.js\";\nimport {list} from \"./types/list.type.js\";\nimport {input} from \"./types/input.type.js\";\nimport {number} from \"./types/number.type.js\";\nimport {date} from \"./types/date.type.js\";\nimport {radio} from \"./types/radio.type.js\";\nimport {color} from \"./types/color.type.js\";\n\n\n// Load core component types:\nfor (const [name, controller] of Object.entries({\n    trigger,\n    label,\n    form,\n    list,\n    input,\n    number,\n    date,\n    radio,\n    color,\n})) createType(name,controller);\n\n\nclass SmarkForm extends form {\n    constructor(\n        targetNode\n        , {\n            customActions = {},\n            ...formOptions\n        } = {}\n    ) {\n        const options = {\n            ...formOptions,\n            name: \"\",\n            type: \"form\",\n        };\n        super(\n            targetNode\n            , options\n            , null // (Root has no parent)\n        );\n        const me = this;\n        me.setNodeOptions(me.targetNode, options);\n        me.actions = {\n            ...me.actions,\n            ...Object.fromEntries(\n                Object.entries(customActions)\n                    .map(([name, ctrl])=>[name, ctrl.bind(me)])\n            ),\n        };\n        me.targetNode.addEventListener(\n            \"click\"\n            , onTriggerClick.bind(me)\n            , true\n        );\n        new hotKeys_handler(me);\n    };\n    async render() {\n        const me = this;\n        me.targetNode.setAttribute(\"aria-busy\", \"true\");\n        await super.render();\n        me.targetNode.setAttribute(\"aria-busy\", \"false\");\n    };\n};\n\nSmarkForm.createType = createType;\n\nexport default SmarkForm;\n\n"],"names":["sym_local_events","Symbol","sym_all_events","re_actionEvHandler","re_localEvHandler","re_allEvHandler","registerEvHandler","evList","evType","evHandler","has","set","get","push","bind","this","events","target","_ref","kind","constructor","optionsSrc","options","onOptionCallbacks","key","value","Object","entries","match","substring","_len","arguments","length","args","Array","_key","super","me","ImRoot","is","root","Map","onLocal","onAll","on","evt","handler","listenLevel","emit","evData","handlers","defaultPrevented","propagationStopped","preventDefault","stopPropagation","legacy","disEnhance","targetNode","tagName","toLowerCase","addEventListener","event","componentTypes","sym_smart","re_valid_typename_chars","re_has_wildcards","errors","Error","code","message","path","stack","split","slice","join","_SmarkComponent","SmarkComponent","static","_initClass","_applyDecs","c","property_name","undefined","parent","validName","counter","names","n0","trim","actions","selector","types","setNodeOptions","renderError","parents","iterator","current","autoId","inherittedOption","setRendered","genId","p","replace","onRenderedTasks","renderedSync","rendered","Promise","resolve","children","render","task","setTimeout","onRendered","cbk","getNodeOptions","node","defaultOptions","dataset","opt","JSON","parse","err","type","action","parentComponent","String","getAttribute","isSingleton","inferType","stringify","enhance","ctrl","getComponent","parentElement","closest","getPath","map","name","reverse","find","base","parts","filter","x","firstWildcardPos","findIndex","re_pattern","wname","RegExp","pivotPath","restPath","pivot","child","_ref2","flat","Infinity","reduce","delta","parseInt","n","isNaN","optName","defaultValue","moveTo","id","document","location","hash","window","history","pushState","pathname","getTriggers","myCurrentActions","actionKeys","Set","returnAll","tgg","querySelectorAll","getTriggerArgs","context","updateId","newId","values","focus","fname","targetFieldNode","SmarkField","_isField","hasOwnProperty","setAttribute","createType","controller","prototype","hotKeys_handler","form","revealed","onKeydown","onKeyup","onFocusout","onFocusin","ev","reveal","ctrlKey","targettedTrigger","t","hotkey","click","removeAttribute","component","activeContexts","activeContextsSet","candidateTriggers","lv","tg","sort","ta","tb","usedKeys","candidate","disabled","add","beforeEvent","afterEvent","targetMtd","addInitializer","trigger","triggerArgs","onTriggerRender","disable","enable","actionSpec","contextPath","targetPath","otherOptions","actionName","targetType","isSameNode","origin","async","onTriggerClick","mtd","data","getRoots","isTop","parentNode","e","makeRoom","element","pixels","direction","scrollHeight","clientHeight","maxScroll","scrollTop","randomId","Math","random","toString","parseJSON","str","label","allow_select","labelArgs","getLabelArgs","style","candidates","found","childName","targetComponent","foldable","_initProto","retv","fold","operation","folded","wasFolded","display","isFolded","originalDisplayProp","forEach","foldedClass","unfoldedClass","classList","export_to_target","method","call","import","error","import_from_target","export","_form","newItem","fromEntries","all","dataConstructor","isEmpty","clear","updateTriggers","min_items","failback","max_items","smartdisabling","sym_mux","Mutex","mtx","lock","nextResolve","nextMtx","currMtx","then","mutex","muxName","unlock","sortable","_moveDecs","templates","item","dragSource","dragDest","move","from","to","fromi","Number","toi","newChunk","splice","moveMethod","renum","_list","list","_exportDecs","_addItemDecs","_removeItemDecs","appendChild","header","after","max","role","remove","last_separator","separator","querySelector","loadTemplates","placeholders","tplOptions","of","tpl","footer","i","addItem","emptyChilds","stripEmpties","min","removeItem","source","position","autoscroll","newItemTarget","cloneNode","onRenderedCbks","before","sourceComponent","offsetHeight","moveTarget","keep_non_empty","targets","currentTarget","oldItem","newFocusPosition","newChildren","onRemovedCbks","oldItemTarget","onRemoved","count","offset","isLastNode","sepRole","currentNode","prevNode","previousElementSibling","prevNode_role","sepTemplate","insertBefore","nextNode","nextElementSibling","empty_list","placeholder","placeHoldersCount","pop","innerText","input","isCheckbox","sons","son","nodeFld","checked","encoding","toUpperCase","selectedIndex","text","keys","parsed","idx","number","targetTag","typename","re_timePart","parseDateStr","Date","NaN","ISODate","toISOString","date","radio","master","sharedNodeName","radioButtons","changeEventHandler","onRadioInteraction","r","selected","lastClicked","re_color","disabled_style","color","valueAttr","isDefined","defaultStyleAttr","resetDefined","Code","SmarkForm","customActions","formOptions"],"mappings":"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"}